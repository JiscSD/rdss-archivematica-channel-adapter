//lint:file-ignore ST1005 Generated code.
// Code generated by go-bindata.
// sources:
// message-api-spec/schemas/article.json
// message-api-spec/schemas/common_entities.json
// message-api-spec/schemas/dataset.json
// message-api-spec/schemas/enumeration.json
// message-api-spec/schemas/information_package.json
// message-api-spec/schemas/intellectual_asset.json
// message-api-spec/schemas/material_asset.json
// message-api-spec/schemas/message/header.json
// message-api-spec/schemas/message/metadata/create_request.json
// message-api-spec/schemas/message/metadata/delete_request.json
// message-api-spec/schemas/message/metadata/read_request.json
// message-api-spec/schemas/message/metadata/read_response.json
// message-api-spec/schemas/message/metadata/update_request.json
// message-api-spec/schemas/message/preservation/preservation_event_request.json
// message-api-spec/schemas/research_object.json
// message-api-spec/schemas/thesis_dissertation.json
// message-api-spec/schemas/types.json
// message-api-spec/messages/body/metadata/create/README.md
// message-api-spec/messages/body/metadata/create/article_create_request.json
// message-api-spec/messages/body/metadata/create/dataset_create_request.json
// message-api-spec/messages/body/metadata/create/research_object_create_request.json
// message-api-spec/messages/body/metadata/create/thesis_dissertation_create_request.json
// message-api-spec/messages/body/metadata/delete/README.md
// message-api-spec/messages/body/metadata/delete/research_object_delete_request.json
// message-api-spec/messages/body/metadata/read/README.md
// message-api-spec/messages/body/metadata/read/research_object_read_request.json
// message-api-spec/messages/body/metadata/read/research_object_read_response.json
// message-api-spec/messages/body/metadata/update/README.md
// message-api-spec/messages/body/metadata/update/research_object_update_request.json
// message-api-spec/messages/body/preservation/README.md
// message-api-spec/messages/body/preservation/preservation_event_request.json
// message-api-spec/messages/example_message.json
// message-api-spec/messages/header/metadata_create_error_header.json
// message-api-spec/messages/header/metadata_create_header.json
// message-api-spec/messages/header/metadata_delete_header.json
// message-api-spec/messages/header/metadata_read_request_header.json
// message-api-spec/messages/header/metadata_read_response_header.json
// message-api-spec/messages/header/metadata_update_header.json
// message-api-spec/messages/header/preservation_event_header.json
// DO NOT EDIT!

package specdata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _schemasArticleJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4f\x6f\xe2\x3a\x10\xbf\xf3\x29\x22\xbf\x77\xa4\xe4\xbd\xcb\x1e\xb8\x55\x74\x2b\xd1\x5d\xb5\x88\xd2\xaa\x52\x55\x55\x6e\x32\x09\x66\x1d\x3b\x1d\xdb\x8b\xd0\x8a\xef\xbe\x72\x08\xd4\x29\x26\xc0\x06\x2d\xb4\x47\x6c\x3c\xbf\x3f\x1e\x7b\xc6\xf9\xd5\x0a\x02\xf2\x2f\x8b\x49\x37\x20\x63\xad\x73\xd5\x0d\xc3\xe9\x74\xda\x99\x30\x15\x75\x68\xd4\x31\x3f\x42\x8c\x95\x0a\x55\x34\x86\x8c\x86\x14\x35\x8b\x38\x74\x26\x4a\x8a\xf0\x1f\xd2\x2e\x56\x2f\xe6\x96\x11\xba\x61\x68\x67\xcf\x16\xa3\x1d\x89\x69\x18\x23\x4d\xf4\xd9\x7f\x5f\xca\x28\xe5\xba\x18\x12\x26\x98\x66\x52\x28\xd2\x0d\x2c\x91\x20\x20\xe7\x0b\x80\xd5\x40\x10\x10\x3d\xcb\xed\x6f\x22\x5f\x26\x10\xe9\x62\x6d\x31\x9e\xa3\xcc\x01\x35\x03\xe5\xfc\x3b\x58\xfe\xef\xee\xae\x7f\x51\x19\xb7\x4c\x11\x92\x1d\x85\x5a\x50\x55\xca\x0c\x1d\xa6\x61\x11\x77\x15\x74\xde\x7e\x8f\x3b\x62\xba\x42\xff\x60\xc0\xd7\x52\x7c\xcd\x72\x3d\xbb\xd5\xc8\x44\x5a\x47\x61\x00\xa8\xa4\x18\xca\x75\x1e\x4b\x2b\x29\x22\x9d\x91\xb6\x3b\x65\x04\x7b\x35\xd0\xd7\x90\x59\x3b\x35\x1a\xa8\x4c\xb3\x72\xc2\x0d\xb7\x9f\x30\x04\x05\x14\xa3\xf1\xf3\x82\xa4\x4f\xa2\x43\xdc\x81\x99\x57\x88\x64\x4c\x2c\x49\xfe\x5f\xe3\xc1\x05\xa8\x08\x59\x6e\xe3\x6e\x31\x21\x38\x35\x17\x5c\xea\xae\x0d\x35\x6a\x87\x2c\x1d\xeb\xf7\xc4\x0e\x4c\xab\xc4\xa8\xf3\x9c\xea\x8f\x96\x71\x05\xe5\xa6\xb9\xf6\x0d\x66\x53\x89\xf1\x29\x49\xdf\xfb\x16\xa9\xcf\xaf\x1e\xd5\x90\x4a\x9c\x7d\x62\x89\x43\x50\xd2\x60\x04\xa3\x85\x24\xaf\x4c\xb5\x88\x58\x11\x02\xc2\x64\xa4\x1b\x3c\x92\xb2\x34\x92\xa7\x1a\x90\x7b\xca\x4d\x93\xe2\x60\xc1\x00\xa9\xd5\xe9\x53\x7e\xe3\x80\xd4\xb0\xe8\xc7\x20\x34\x4b\x18\xe0\x29\xed\xe7\x0e\xa7\xd5\x21\xde\xf4\xcc\x0e\x81\x53\x0d\xf1\x27\xb0\xa2\x50\x62\xc7\xc6\x2c\xdf\x35\xd9\x6f\x30\xa5\x82\xa9\x62\xdd\x07\xec\x13\xd6\xe8\x37\xcd\x86\x4b\x76\x5a\x1e\x30\xa1\x81\x73\x88\xb4\xa1\xfc\x99\x2a\x05\x5e\x1b\x0a\xd6\x5b\x77\x3c\x41\x80\x91\x1c\x02\x5d\x2b\x50\x4b\x42\xd5\xa8\xe7\xdf\xfb\x97\x6f\x4b\x9c\x90\x6f\x8d\x12\x89\xe4\x4f\x40\x9a\x36\xb9\xca\x22\x99\x65\x52\x3c\xdb\x2c\xb6\x2d\xbc\x4f\x5f\x6f\x89\xe2\xd5\xc5\xa9\x48\x8d\x87\xc3\xa7\xa8\x49\x65\x31\x19\xa0\x8c\x40\x29\x26\xd2\xde\x98\x62\x23\xbf\xb7\x94\x8e\x61\xff\xe6\xe1\x61\x04\x98\xa9\xf3\x41\x6f\xc3\xae\xe7\xe6\x85\xb3\xa8\x08\x71\x0f\xa8\x3c\xad\xf5\xe1\xf8\x0c\xd6\xb1\xfc\xa4\x26\xd2\xa0\xa0\x7c\xb7\xdc\xbe\x2a\xff\xdc\x7a\xef\xfe\xca\x7b\x82\xf0\x6a\x18\x82\x3d\x2c\x8f\xde\x37\xe5\x86\x17\x5f\xdd\x2b\xac\xf6\x75\xb2\xa9\x99\xf7\xb7\xd7\xf5\x7d\xcb\x86\x86\xa3\xae\x03\xd8\x5e\x1b\x7c\x67\xae\x5d\x9b\x15\xe5\xe4\xd3\xca\x54\x1a\xc7\xc5\x0e\x50\x3e\x70\x1f\xed\x09\xe5\x0a\x5a\x8e\xff\xa4\x7a\xf9\x34\xf8\x08\xa0\x34\x45\xef\x83\xe4\x10\xa7\x79\xc4\x32\x50\x9a\x66\xb9\xff\x66\x02\x11\xff\x4d\xe4\xb5\x14\xde\xd9\xed\xab\xb5\xb3\xb3\xb7\xcf\xfd\xdb\xdb\xeb\x63\x7d\xed\x48\x0c\xe7\x47\xfd\xdc\x52\xde\x3d\xf7\x92\x9b\xec\x68\x24\x12\x86\x4a\x0f\x9a\x15\xe3\x46\x04\x38\x3d\x2e\x7e\xb9\x0b\x7d\xa5\x1a\xbd\xad\xf6\xe7\xb0\x63\xed\x28\x8e\x88\xa7\x64\x95\x69\xe3\xce\xbc\xed\xa5\xcf\xdf\x4d\x9a\xff\xe0\xba\xb5\x98\xf3\xd6\xbc\xf5\x3b\x00\x00\xff\xff\x05\x9a\xa6\x7c\xff\x15\x00\x00")

func schemasArticleJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasArticleJson,
		"schemas/article.json",
	)
}

func schemasArticleJson() (*asset, error) {
	bytes, err := schemasArticleJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/article.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasCommon_entitiesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x4d\x8f\xd3\x30\x10\xbd\xe7\x57\x58\x5e\x8e\x6c\xcc\x89\x43\xaf\x68\x85\xb8\xa0\x15\xe5\x86\x10\x9a\xb5\x27\x59\x97\xd8\x93\x1d\x4f\xa8\x22\xd4\xff\x8e\x9c\x7e\x6c\xd2\xa6\xb0\xcb\x42\x0f\x55\x93\xf9\x78\xf3\xfc\xe6\xc5\x3f\x0b\xa5\xf4\x2b\xef\xf4\x42\xe9\x7b\x91\x36\x2d\x8c\x59\xaf\xd7\xe5\xca\x27\x5b\x82\x2d\xbb\xef\x86\x5d\x4a\x26\xd9\x7b\x0c\x60\x2c\x85\x40\xf1\x1b\x46\xf1\xe2\x31\x95\xab\x44\xd1\x5c\xe9\xd7\x03\xca\xb6\x66\x8f\xb4\x30\x26\x67\xaf\xb7\xd1\x92\xb8\x36\x8e\xa1\x92\xeb\x37\x6f\x77\x68\xbb\x3e\x87\x95\x8f\x5e\x3c\xc5\xa4\x17\x2a\x13\x52\x4a\xbf\xa3\x1f\xc8\x50\xe3\x21\xa2\x94\x96\xbe\xcd\xef\x9a\xee\x56\x68\x65\x68\x1e\xe2\x2d\x53\x8b\x9c\xf9\x8c\xaa\x95\xd2\x35\x52\x6a\x41\x3c\x34\x33\x68\x13\x44\x60\x86\xfe\x00\x38\xa4\xba\xe8\x1f\x3a\xfc\x20\x18\x32\xaa\x70\x87\x93\xb4\xdf\x25\xc6\x70\x59\x03\xc6\x2a\x03\x5e\x99\xd1\xa9\xcc\xfb\x53\x22\xa3\xb6\xcd\xe1\x79\xf3\x38\x42\x0b\x86\x96\xf8\xb1\x63\x29\xc0\x72\xcc\x7f\x3f\xee\x09\x9b\xcb\x47\xdd\xef\x6b\x42\xee\xb3\x0f\x98\x04\x42\xab\x9f\xc4\xe3\x26\xba\x4b\xb1\x28\x8e\xd8\x68\x70\x6e\x28\x87\xe6\x76\xbc\xf2\x0a\x9a\x84\xc5\xb6\x54\xe5\x7f\x3d\x23\xf8\xcb\x7c\xd4\x90\x85\x3c\xf9\x96\x7c\x3c\xde\xc2\xef\xd6\x3e\xed\x9b\x15\x78\x82\xde\xf4\x35\xc5\x3f\xb8\x54\xfd\x47\x9b\x9e\xe1\x7b\xce\xa4\x63\xee\x0d\xd8\x93\xef\xeb\x5f\x38\xe3\x23\xc5\x9b\xd0\x4a\xbf\x14\xf6\xb1\x9e\xd7\xd0\x12\xb1\xf3\x11\x04\x3f\x61\x85\x8c\xd1\xe2\xb2\x4f\x82\xe1\xa2\x84\xfe\xc6\xaf\xdb\xdb\xee\x44\xf9\x17\xb8\xb5\x01\xf1\xd2\xb9\xb3\x77\x5d\xec\xc2\x1d\xf2\xbc\x8e\x0d\xc5\xfa\x79\xcd\x27\x67\x66\x7c\xe8\x3c\x63\xbe\x24\xbe\xcc\x90\x9a\x1d\xb6\x8b\x7d\x7d\x86\x70\x45\xfe\x6d\x8a\x5f\x01\x00\x00\xff\xff\x71\xee\xf8\x2d\xbf\x06\x00\x00")

func schemasCommon_entitiesJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasCommon_entitiesJson,
		"schemas/common_entities.json",
	)
}

func schemasCommon_entitiesJson() (*asset, error) {
	bytes, err := schemasCommon_entitiesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/common_entities.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasDatasetJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x97\x4d\x6f\x1a\x31\x10\x86\xef\xfc\x0a\xcb\xed\x91\xe0\xf6\xd2\x03\xd7\xd0\x4a\xa8\x52\x13\xd1\xa4\x97\x28\x42\xee\xee\xb0\x98\xee\xda\x9b\xf1\x6c\x10\xaa\xf8\xef\x95\xf7\x83\x1a\x58\x0c\x88\x44\xda\xe4\x6a\xaf\x67\x9e\xf7\x5d\x7f\xcc\xfc\xed\x31\xc6\x3f\xaa\x98\x0f\x19\x9f\x13\xe5\x76\x28\xc4\x72\xb9\x1c\x2c\x94\x8d\x06\x32\x1a\x14\x7f\x04\xc6\xd6\x0a\x1b\xcd\x21\x93\x22\x96\x24\x2d\xd0\x60\x61\x8d\x16\x1f\x78\xbf\x5c\x5d\xcd\x35\x11\x86\x42\xb8\xd9\xab\x6a\x74\x60\x30\x11\x31\xca\x19\x5d\x7d\xfa\x52\x47\xa9\xd7\xc5\x30\x53\x5a\x91\x32\xda\xf2\x21\x73\x20\x8c\xf1\x51\x95\x60\x33\xc0\x18\xa7\x55\x0e\x2e\xb8\xf9\xbd\x80\x88\xca\xb5\xe5\x78\x8e\x26\x07\x24\x05\xd6\xfb\x9a\x35\xdf\xdd\xdf\x8f\x47\x5b\xe3\x8e\x14\x61\x76\xa2\x50\x97\xd4\xd6\x32\x85\x47\x2a\xca\xb8\x9b\xa0\xeb\xfe\x6e\xde\x3b\x45\x29\xbc\x46\xe2\x1f\x46\x7f\xcd\x72\x5a\xfd\x24\x54\x3a\x09\x21\xdc\x02\x5a\xa3\x27\x66\x9f\xa3\xb1\x52\x22\xca\x15\xef\xfb\x53\x85\x56\x4f\x05\x8c\x09\x32\x67\x27\x61\x01\x5b\xd3\xaa\x9e\xf0\xc3\x9d\x27\x0c\xc1\x82\xc4\x68\x3e\xad\x20\xdb\x24\x7a\xe0\x5e\x9a\xf5\x16\x48\xa6\x74\x03\xf9\x39\xe0\xc1\x08\x6c\x84\x2a\x77\x71\x8f\x98\xc0\xba\xe6\x82\x8f\xee\xdb\x10\x50\x3b\x51\xc9\x9c\x76\xc1\x5e\x18\xab\xce\x11\xf2\x5c\xd2\x5b\xdb\x71\x25\xf2\xa5\x7b\xed\x3b\xac\x96\x06\xe3\x2e\x49\x3f\xfb\x16\x09\xef\xaf\x6b\x49\x90\x18\x5c\xbd\x63\x89\x13\xb0\xa6\xc0\x08\xee\x2a\x49\xad\x32\x6d\x15\x71\x4b\x08\xe8\x22\xe3\x43\xf6\xc0\xeb\xa7\x91\x3f\x06\x92\xfc\x92\x69\x71\xc9\xe3\xe0\x92\x01\x4a\xa7\xb3\x4d\xf9\x8d\x97\x24\x40\x31\x8e\x41\x93\x9a\x29\xc0\x2e\xfd\xcf\x13\x4e\xab\x07\x7e\xe9\x99\x9d\x40\x2a\x09\xe2\x77\x60\x45\xa9\xc4\x8d\xcd\x55\x7e\xea\x66\xbf\xc1\x44\x6a\x65\xcb\x75\x6f\xb0\x4e\xd8\xc3\xbf\x74\x37\x7c\x53\xdd\xf2\x40\x69\x82\x34\x85\x88\x0a\x99\x4e\xa5\xfd\x5f\x71\x6f\xd9\x50\x52\x1f\xfd\xe3\xa9\xd4\x49\x21\x93\x4e\xe9\x7b\xb1\xbb\x3b\x32\xcf\x80\xfb\xe2\xce\xa3\x89\x4c\x96\x19\x3d\x75\x07\xca\x75\x13\x6d\x5c\xd7\x4d\x9e\x56\x8a\x67\x40\xdb\x52\x68\xbe\x6a\xd5\xdf\xdb\xc1\xe0\x08\x4f\x85\x42\x70\x65\xc8\x43\x6b\x33\x74\xa0\x55\x09\xb5\x0f\xc1\xb2\xfa\x50\x15\xda\x5e\x17\x86\x1f\xdc\x03\x2f\x65\xe8\xe9\x3a\x7e\xa9\xd5\x1f\x3c\x6e\x2c\x92\x71\x5c\xda\x2a\xd3\x5b\xbf\x77\x9c\xc9\xd4\x42\xaf\x71\x75\xdd\x5b\xf7\xfe\x05\x00\x00\xff\xff\xb7\x51\x0f\x96\x16\x0f\x00\x00")

func schemasDatasetJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasDatasetJson,
		"schemas/dataset.json",
	)
}

func schemasDatasetJson() (*asset, error) {
	bytes, err := schemasDatasetJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/dataset.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasEnumerationJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x59\x4d\x73\xe3\x38\xce\xbe\xf7\xaf\x70\xf9\x7d\x8f\x33\xc9\x7e\xd4\xcc\x21\x37\xb7\x9d\x9e\x76\x6d\x3b\x76\xd9\x71\xa6\xab\xb6\xf6\x00\x53\x90\x84\x36\x45\x6a\x00\xca\x8e\x67\x6b\xfe\xfb\x16\x25\x7b\x5a\x24\xe5\x38\x73\x48\xa5\xf0\x80\x02\x40\x90\x78\x08\xd2\xff\xfd\x30\x1a\x8d\xff\x9f\xb2\xf1\xc3\x68\x5c\x3a\x57\xcb\xc3\xfd\xfd\xf1\x78\xbc\xfb\x46\xa2\xee\x40\xdd\x35\xfb\x7b\xce\x44\xee\x45\x95\x58\xc1\x3d\x9a\xa6\x42\x06\x47\xd6\xdc\x7d\x13\x6b\xee\xff\x6f\xfc\x43\x6b\xa1\xd3\x5f\xac\x3c\xdc\xdf\x7b\xed\x8f\x1d\x7a\x67\xb9\xb8\xcf\x18\x72\xf7\xe3\xdf\x7e\x3e\x5b\x3a\x7f\x97\x61\x4e\x86\xbc\x39\x19\x3f\x8c\x7c\x30\xa3\xd1\x78\xa2\x14\x8a\x3c\x9f\x6a\xfc\x13\x1b\x8d\xc6\xde\xf5\xf8\x61\xf4\xef\xb3\x3c\x1a\x8d\x6d\x8d\xa6\x35\x73\x96\x05\x72\x2c\x1a\xe0\x0c\xb3\x3e\xac\xac\x71\x6c\xb5\x0e\x51\x46\x71\x4c\xca\x45\x63\xb5\x15\xcc\xc6\x67\xe0\x3f\xed\xff\x3f\x3a\xfd\x78\x5a\xa2\xda\x4b\x53\xdd\x0e\xac\xca\x7e\x0a\xe2\x2a\xe1\x1f\x3f\xfd\x3c\x6c\x74\x06\x0e\x6f\x1b\x04\xa5\xb0\x8e\x42\x85\xba\x66\x7b\x88\xb0\x03\x90\x86\x9d\xc6\x00\x3c\x0e\xa4\x44\x6b\x4c\xe6\x6e\xeb\x13\x53\x51\xc6\x30\x23\x44\x10\x89\x34\x21\x52\xd9\x8c\x72\x0a\xb1\xda\x4a\xf4\x5d\xdd\xec\x34\x49\x79\x2d\xc1\x9f\x48\xe3\x56\x6e\x2d\x3a\x53\x41\x06\xb4\x1f\xdc\xb7\xed\xca\xa6\xda\x19\x20\x3d\xaf\xa0\x08\x34\xf8\xea\x18\xfc\x64\x9f\xf1\xd5\x05\xe1\x30\x0a\xf2\xa1\xdd\xcd\x0b\x10\x87\x1c\x1b\x25\xe3\x90\x2b\xcc\x08\x1c\xc6\x3a\xff\x29\xa9\x04\x76\x0c\x46\x14\x53\xed\x86\x27\x39\xcf\xd0\x38\x9f\x2b\xbe\xbd\xec\x93\xf5\xbf\x82\x85\xe4\xaf\x74\xe8\x03\x3b\xda\x29\x9b\x05\xee\x67\xcb\x79\x5f\x7c\x9c\x3c\xfd\xfd\x9f\x01\x30\xdf\x6c\x9e\xfa\xc0\x67\x30\x59\x38\x83\xf9\xe6\xe3\x53\x28\x6f\x22\xf9\x79\xda\x97\xbf\xc4\x03\xbe\x6c\xe6\xb3\xbe\xbc\x5a\x44\xf2\x36\x96\xd7\x5f\xfa\xf2\xc6\x36\xac\x30\x1c\xb3\x5d\x05\x3e\xa3\x2f\xb6\xeb\x20\x80\xad\x77\x30\x98\xfd\x05\x8a\x40\x81\x53\x0d\x22\x6f\xe7\x7e\x6a\xab\x0a\x4c\xb0\x7d\x1f\x0f\x68\x82\x0d\x34\xb3\xaa\xa9\x3c\xf6\x96\xaf\xdb\xcb\xbc\x40\x07\x19\x38\x98\xb6\x95\xd6\x77\x70\xd1\x6c\xeb\xec\x8a\x66\x86\x1a\x87\x35\x6b\x84\x20\xfa\x55\x6f\xb7\x77\x33\x19\x8c\x7a\xb9\xfb\x86\xca\xbd\x80\x6e\x6e\x44\x6d\x2c\x57\xa0\xfb\x1e\x4a\x2a\xca\xbe\x7c\x40\x3e\x7d\xf6\xd8\xb0\x23\x2e\xc0\x90\xb4\xf1\xac\xad\xbe\xc5\x80\xd9\xc1\x2a\x50\xa7\xa0\x1e\x1a\x57\x5a\x4e\xa8\x8e\x4c\x31\x37\xe2\xc8\x35\xde\x74\x5f\x9d\x91\xe7\xfc\x5d\xe3\xc2\xaf\xf2\xc6\x64\x18\x20\xa5\x15\x77\xdd\xcc\x85\xc6\x38\x3c\x4f\x0a\x6f\xbd\x9d\xce\xa4\x40\x13\x86\x1a\x68\xdb\xb0\xc9\x85\x03\x3c\xf1\xca\x67\xab\xa3\x48\xa4\xb6\x46\x2c\xdf\x4e\xe1\xed\x6d\xb6\x23\xad\xc9\x14\x01\xb7\x97\x10\x07\xa2\x6c\x55\x21\x2b\x0a\x97\x36\x23\xa9\x35\x9c\xde\xce\x5a\xde\xb0\x2b\x91\x1f\xb3\x46\x41\x9c\xb3\xc2\x1e\x90\x4d\x15\x15\x50\x89\xa0\x5d\x19\x22\x4c\x2e\x22\x70\xbf\xaf\xae\x98\xb5\x2e\x5a\x86\x9a\x6d\x8e\x22\x64\x0d\xe8\x8f\x36\x8b\x16\x41\x10\x58\x05\xfe\x44\x95\xd6\x06\x53\x95\x3d\x69\x2d\xc3\x09\x5f\x21\x8b\x35\x7f\x85\xc2\x97\xeb\x69\x48\x64\x97\x20\x90\xaf\x71\x54\xe7\xe4\x3d\x25\x51\x91\xe9\x76\x55\x54\x05\x49\x5d\xf8\x16\x08\x94\xeb\x2c\x07\xeb\x0a\x0e\x26\x06\xf4\x49\xc2\x34\xb6\x74\xd4\x35\x09\x36\x55\x78\x9e\x4a\xe1\x05\x18\x28\x22\x33\x58\x5b\x21\x5f\x4a\xdb\xc8\x01\x66\x14\x99\x20\x73\x40\x71\x54\xc4\xa6\x87\x96\x38\x6b\x54\x82\x79\xda\xfa\x82\x90\x0d\x2a\x16\x58\xed\x22\xc5\x70\x11\x6b\xdf\xeb\xa4\x79\xfa\xbe\x6a\xc3\xe8\x2f\x6c\x9b\xfa\xaf\xd4\x73\x1f\x6a\x6a\xdf\x4a\x5c\xad\xf2\x84\xb8\xdf\xd7\x2f\xb6\x45\x10\x37\x8c\x40\x12\x16\xb6\x82\xda\x35\x8c\x11\x03\xf8\xce\x28\xfe\xbc\xed\x03\x63\x42\xc5\x41\x4f\x19\x5e\xb1\x91\xa1\xe2\x53\x9d\x5a\xd1\x98\x52\x75\x41\x0e\xf4\x86\x0a\x03\x3e\xc0\x5f\xd0\x9c\xef\x1d\x6f\x8d\x7a\x01\x4d\xd9\xc0\x28\x11\xac\xc8\x24\x0a\x34\x43\xe1\xe4\xa4\xd1\x40\x85\xd3\x12\x4c\x48\x44\x39\xbd\x92\x3b\xb5\xf7\x80\x00\xb6\x8c\x46\x48\x7d\xc2\x36\x88\xae\x9e\x48\xa2\x21\x15\xb8\x0b\x71\xa4\x3c\x46\x15\x14\x11\x37\x93\xe9\x3e\x22\x6b\x56\xa0\xf6\xbe\x6b\x19\x58\x81\x74\xd4\x02\xf9\xb6\xa9\x4d\xad\xc9\xb9\x64\x58\xe1\x2b\x30\x76\x70\x06\x1f\xc3\x66\xe8\x4f\x7c\xe3\x80\x03\x52\xaf\xba\xbe\x67\x46\x7e\xc0\x14\xb4\x6a\x74\x12\x76\x75\x6e\x52\x1e\xbb\xde\xfc\x8a\x76\xd1\xde\x2a\xd2\x6c\x55\x54\xa4\x7b\xa1\xba\x32\xb8\xeb\x53\xe8\xf7\x44\x51\x83\xda\x47\x19\xa8\xad\x26\x75\x9a\x88\x50\x91\x9c\x55\xbf\x35\xc0\x60\x1c\x19\x0c\x29\x40\xf9\x93\x2d\x3a\x67\xb2\x74\x4e\x8c\x39\xa3\x94\xb1\x55\xc6\x5a\x0f\x04\xdd\xde\x22\xf2\x90\x3a\x1a\x33\x10\x71\x63\x86\xe3\x3a\x0c\x56\xc2\x81\xb8\x91\x6e\xff\x0e\x52\xcd\x1a\xf5\x7b\x9b\x09\x10\xcc\x96\x66\x06\x0e\x02\x92\x20\x87\x12\x93\x09\xe9\x18\xf3\xe1\x36\x21\x98\x9d\x7b\xe9\x00\x2c\x41\x7c\x1f\x1e\x77\x0d\x20\x97\x26\x37\x82\x57\xc0\xe9\xd8\x55\xb4\x3f\x4b\x90\x75\xc7\xf3\x0b\x70\xc8\x51\xa7\xd3\x6a\x6b\x1d\x2c\x28\xc9\x64\xbe\x5a\xe6\x21\xf4\xb1\xcb\x40\x02\x92\x7c\x8a\x0e\x36\x99\x92\xc3\xec\x63\x64\xf2\x3c\xb1\xd8\xc2\xb4\x4b\xd8\xc0\xf0\x2e\x69\x89\x62\x86\x4c\x07\xcc\x3e\xb1\xad\x22\xc5\x39\xa3\xe9\x27\x1d\x0f\x29\xd0\xcf\x36\x54\x5c\xd2\x9a\xcc\xe0\x09\x8f\x2f\xc8\x9e\xce\xe3\x34\x2c\x2f\xf7\x71\xcb\x55\xac\xeb\x96\x63\x00\x4d\x31\xc6\x03\xd9\x46\xae\x38\x59\x63\x8e\x8c\x46\xa5\x53\x69\xd7\x2a\x9e\xc6\x1a\x7f\x6b\x88\x87\x06\x1f\x08\x8f\x29\xde\x5d\x38\x63\xa7\x9b\xa6\xae\x35\x0e\x67\xf0\xbb\x2e\xf6\xfd\x02\x4c\x60\x5c\x9a\x0e\xbe\xcc\x41\x42\xb4\x0d\x35\xc2\x7c\x98\x57\x5a\xd0\x35\x4a\x1b\xed\x3b\x9a\x00\x76\x33\xf4\x4c\x36\x77\x18\x6c\x0d\x60\x47\x2a\x7a\x23\x6a\x32\x0a\x26\xb2\xb3\x76\x1f\xcb\x1b\x4c\x58\x4d\x59\x73\x9e\xd5\xaf\x96\xf7\x52\xda\x3a\x76\xe6\xb7\x93\x60\x50\x80\xf8\x0a\xd5\x0a\xea\x90\xdd\x28\x7e\xb6\x49\x0f\xad\xbe\x56\x23\xb0\x21\x53\x74\xd7\xd5\xf0\x1c\x38\xf8\xab\x5b\x6c\xae\x6a\x84\x94\x2f\xae\xb6\x21\xbd\x75\x8b\x00\x17\xf1\x48\x8d\xdc\x86\x63\x14\x86\xed\x25\xd6\x4c\x09\xa5\x5b\x76\xe9\x82\x06\x3d\x5f\x69\x8f\x8f\xaf\x25\xed\x92\x58\xc4\xe6\xee\x08\x61\x47\xe6\xa2\x87\x2b\x57\xa2\x90\xcc\x7c\x5b\xc3\x2e\x21\xf9\xc6\xec\x8d\x3d\x06\xd0\x11\x77\x42\xe1\x33\xc1\xd1\xf2\x3e\xd7\xf6\x38\xbc\xcb\x36\xce\xb2\x6f\x13\x1c\xb8\xe6\xc6\x43\x89\x35\x3a\x3a\x7b\x0c\x02\xc7\x98\xcd\xf3\x16\x7a\xcb\xdb\xed\x2d\xbd\x09\xde\xb2\x3e\x3f\x3f\xaf\x86\x0d\x6e\x6b\x6d\x21\x7b\x4f\xf4\xcd\x65\x24\x47\x6f\x95\x9d\xc2\x6f\x98\xf8\x81\xa5\xd3\x4c\x76\xb6\xfd\x64\xd0\xff\x0c\xbb\x27\xc0\x77\x1d\xa5\xb0\x93\xb6\x09\x1a\xff\x30\xea\x95\xcd\x77\x0b\x01\x5e\xa1\x2b\x6d\x26\x01\x26\xc8\x84\x32\xff\x5e\x2f\xc1\x5e\x81\x9d\xc6\x65\xee\x8f\x8f\xf8\x74\x75\xa8\x4a\xe3\x8f\x01\xff\x69\x5a\x0f\xa3\x61\xfe\x99\x2f\xbf\x7e\x7d\x46\xae\x64\xb2\x9a\xbe\x3d\xb1\x1a\x28\x7c\xfe\xf5\xc4\x03\x5a\x9f\x7e\x05\x8a\x1e\xae\xf3\x66\x10\x36\xd6\x4d\x4b\xe0\x22\x41\x2f\x0c\x3f\xb4\xef\x07\xc3\x5e\xf9\xeb\x5e\xd7\x67\x9d\xcf\x98\x1b\x4f\xaf\xcb\xbe\xe9\xcd\x62\xbb\xee\xcb\x93\x45\x5f\x5a\xf5\x85\x17\x1b\x8c\x9c\x46\xf2\x63\x24\x3f\x4d\xae\xfc\xd8\xe0\x6f\xec\x64\xde\xf3\xc4\xf0\x3b\xd5\x61\x76\xae\x95\xd9\x99\x46\xdf\xf1\xee\x3c\x0f\xa6\x34\x0b\xc5\xcd\x3c\xae\xba\x0f\xfe\xef\x8f\x0f\xff\x0b\x00\x00\xff\xff\x37\xd1\x50\x50\x4c\x1a\x00\x00")

func schemasEnumerationJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasEnumerationJson,
		"schemas/enumeration.json",
	)
}

func schemasEnumerationJson() (*asset, error) {
	bytes, err := schemasEnumerationJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/enumeration.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasInformation_packageJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x94\xbf\x6f\xe2\x30\x14\xc7\xf7\xfc\x15\x96\xef\x46\x88\x6f\xba\x21\xeb\xc1\xc0\x72\x8a\x74\xc7\x2d\xa7\xaa\x72\x93\x17\x30\x24\xb6\xfb\xec\x80\x50\xc5\xff\x5e\x39\x09\x10\xd2\x24\x84\xb6\xd0\x81\x01\xe7\xf9\xfb\xfd\xbc\x5f\x7e\xf1\x08\xa1\xdf\x45\x4c\x03\x42\x97\xd6\x6a\x13\x30\xb6\xdd\x6e\xfd\x95\x30\x91\xcf\x23\x3f\x5f\x33\x8c\x8d\x61\x26\x5a\x42\xc6\x99\x90\x89\xc2\x8c\x5b\xa1\xe4\xa3\xe6\xd1\x9a\x2f\xc0\x5f\x19\x25\xd9\x37\x3a\x2a\x94\xca\xb8\x83\x5a\xc0\x98\xfb\x3a\x2e\x4f\x7d\x85\x0b\x16\x23\x4f\xec\xf8\xc7\xcf\x4a\xb1\xba\x17\x43\x22\xa4\x70\xb2\x86\x06\xc4\x41\x11\x42\x67\x27\xb3\xb0\xf4\x3a\x7e\x23\x84\xda\x9d\x76\xff\xa9\x7a\x5a\x41\x64\x0b\x99\xe2\x5c\xa3\xd2\x80\x56\x80\xa9\x45\x93\x43\xdc\x7c\x3e\x9b\x9c\x9d\x3b\x68\x84\x64\x60\xfe\xce\xd4\x54\x19\xb3\x1a\x34\x2b\x74\x8f\xa2\xfb\xd1\xc9\xb7\x2a\xd3\x97\x19\xff\x2d\xeb\x54\x37\xbe\xce\x1a\x64\x9e\x01\x16\x6d\x68\x03\x08\x6b\x36\x7d\x1c\xbf\x94\xb4\x5c\x48\xc0\x5b\x03\x9d\x1b\xf5\x21\x4d\xc0\x44\x28\xb4\xbb\x76\x8b\xd6\xfc\x56\x72\x9a\x69\xbb\xfb\x63\x51\xc8\x45\x2f\x49\x88\x60\x00\x37\x45\x4e\xd3\x0d\x48\xfb\x01\x9e\xee\x1d\x3d\xef\xdb\x1b\xcb\x13\xa0\xd7\x00\xa5\x08\xcf\xb9\x40\x70\xcf\xc4\xff\xd6\x95\xea\x18\xf8\x8e\x71\xbc\x34\x1d\x43\x0a\x54\x85\x3c\x1c\x19\x79\x1c\x17\xa9\xf1\x34\xac\x3f\x01\x09\x4f\x0d\x78\xb5\x74\x68\x5f\xb1\xaf\x7e\x56\x74\x53\xec\x1f\x4f\xf3\xe6\x7c\xdf\x6f\x9c\x9a\x34\x2d\xcb\xf6\x99\xbb\xdf\x6a\x37\x8c\x6c\x02\x96\x8b\xf4\xae\x85\x1a\x38\xd6\x1d\x2d\xbd\x58\xe6\x77\x4c\xa4\xe7\x7e\x7b\xef\x35\x00\x00\xff\xff\x12\x11\x4c\x70\x86\x07\x00\x00")

func schemasInformation_packageJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasInformation_packageJson,
		"schemas/information_package.json",
	)
}

func schemasInformation_packageJson() (*asset, error) {
	bytes, err := schemasInformation_packageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/information_package.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasIntellectual_assetJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\xc1\x52\xdb\x30\x10\xbd\xe7\x2b\x3c\x6e\x8f\x10\xd3\x4b\x0f\xb9\x75\x12\xd2\x32\x03\x34\x43\xa0\x97\x4e\x87\x51\xec\x4d\x22\xb0\x25\x23\xad\xc9\xd0\x4e\xfe\xbd\x23\xc5\x49\xed\x20\xd9\x4e\x5c\xdb\x70\xe0\x10\xcb\xda\xf7\x76\xf7\xed\xae\x64\xfe\xf4\x1c\xc7\xfd\x48\x03\x77\xe0\xb8\x4b\xc4\x58\x0e\x3c\x6f\xb5\x5a\xf5\x1f\xa8\xf4\xfb\xc4\xef\x27\x8f\x9e\x08\xa4\xf4\xa4\xbf\x84\x88\x78\x94\x21\x84\x21\xf8\x98\x90\xf0\x9e\x48\x09\xd8\x7f\x90\x9c\x79\x1f\xdc\x13\x6d\x68\xf3\xda\xd6\xd8\xc0\xf3\xd4\xea\xe9\xe6\x69\x9f\x8b\x85\x17\x08\x32\xc7\xd3\xb3\xcf\xa9\xc1\x74\x5f\x00\x73\xca\x28\x52\xce\xa4\x3b\x70\x14\x27\xc7\x71\xc7\x34\x84\xdd\x2f\xc7\x71\xf1\x25\x56\xbf\x5d\x3e\x7b\x00\x1f\xf5\x46\xfd\x3c\x16\x3c\x06\x81\x14\x64\xe6\x6d\xc7\x71\xe7\x34\x84\xbb\xbb\x8b\x51\xee\xa9\x22\x29\x60\x5e\xd1\x5d\x05\x29\x53\x0f\xbd\x0c\x49\x4f\xdb\xdd\x19\x5d\x9f\xe4\x51\x2f\x02\x60\x48\xe7\x14\x44\x13\xd8\xd7\x9c\x9d\x47\x31\xbe\x4c\x51\x50\xb6\xb0\xb3\xb8\x26\x11\x74\x89\x3f\xa5\xbf\x5f\xe1\x6f\x73\xa8\x74\xb4\x00\xe1\x9e\x64\x17\x23\xca\x68\x94\x44\xee\xc0\x39\xb3\x1a\xbd\x24\x33\x08\xbb\xf4\x6a\x44\x10\x86\x02\x08\x42\xd0\x04\x8d\x5b\x1a\x81\x44\x12\xc5\x76\x06\x37\x74\xb1\x44\x59\x03\x5c\x80\x04\x22\xfc\xe5\xfd\xa6\x92\x4c\x34\x52\x0c\x2b\x87\xe1\x12\xfc\x47\xa9\x73\x65\xcc\x2f\x11\x82\xbc\xe4\xb3\x9b\x30\xfa\x94\xc0\x05\x42\xa4\xb8\xa3\x48\x20\xb7\x4c\xd3\x85\xac\xb9\x8c\x5b\x79\x7a\x3b\xf8\xcc\xcb\xeb\x7d\x2d\x6d\xa1\x3e\x59\xbd\x18\x73\x11\x11\xbc\xdd\x70\xee\x4c\x51\x43\x1e\xc5\x5c\xea\x4d\x97\xf0\xdc\xad\xba\xbf\x11\x79\x45\x23\x30\x85\x64\x9b\xda\x19\xe7\x21\x10\x56\x5c\x21\x57\x3c\x50\xfd\xef\x55\x89\x34\xa6\x8f\xff\x5c\x73\x47\xc9\x69\x92\xd0\xf7\xe1\xb0\x4d\x0d\x8e\xb3\xb6\x3a\x77\x27\xeb\x14\x09\xb0\x24\x02\x41\x14\xbc\x89\xd0\x38\x05\xb0\x87\x56\xf5\x2c\xf1\xac\x0d\x9c\x3f\x03\xc3\x76\x03\xf3\x2a\x18\x71\xc8\x49\x30\x45\x82\x49\x9d\x46\x5c\x12\x95\x1c\x8a\x7d\xcc\x22\x17\x64\x01\x4d\x93\xc9\xc3\x14\xcc\x67\x89\x23\xbe\x62\x8a\x79\x67\x13\xf2\x16\xfc\x25\xa3\x3e\x09\xbf\x20\x0a\x3a\x4b\xd0\xda\xcc\xde\x7d\x59\xa6\x69\xb9\xe4\xbe\xce\x9c\xcd\x4f\xb9\x31\x99\xf3\x64\xae\xa7\x9f\x5a\x4d\x04\x2d\xd5\xd7\x24\x24\xa8\x76\xd8\x52\x6a\x54\xcb\x6e\x53\x6f\xdf\x93\x1d\x8a\x2b\xe0\x29\xa1\x42\x6b\xe5\xa7\xe1\xf0\x6e\x3f\x5a\x9b\x8e\xbb\xa6\x23\xa8\xed\xe8\x52\x36\x86\x8b\xc6\x9a\xa1\x39\x16\xb5\x88\xc2\x92\x2d\xc9\x68\x49\x3a\xd2\xd5\x5f\xbb\x78\x92\x20\xd0\x4e\x90\x70\x92\xbd\x18\xcd\x49\x28\xa1\x97\x09\xbd\x6b\x4f\xec\xc1\x57\x2d\x99\x37\xd5\xfe\xad\x6b\x8f\x40\x97\x57\x9f\x3d\x2a\x35\x4f\x97\xd5\xba\xb2\x06\xa9\xc2\x66\xc8\xe5\xfe\xe8\x6c\x36\x30\x15\xcb\xdd\x24\xa0\x92\xf4\x96\x84\xbc\x24\x06\xc7\x97\x8d\xe1\xea\x73\x70\xbd\xf8\xa9\x8d\xf6\x0b\x65\x8b\xdc\xac\x2c\x87\x59\x94\x42\x1e\x3f\x48\x98\xb4\x5b\xaa\x15\x15\x99\x4b\x91\x2d\x80\x56\x87\x8e\x97\xd7\x57\x41\x72\xa7\xdb\x83\xb5\xb5\x50\x06\xda\x17\x96\x86\xed\xfe\xc3\x97\xa6\x31\x4e\x58\x50\x8b\x42\x85\x2f\x24\xdf\xc5\x82\x30\x2a\x75\x09\xdc\xf0\xd0\x22\x73\x4d\x67\x8a\x44\x34\xd2\x75\x4b\x8e\xc2\x1a\xfc\x9c\x75\x71\x0a\xd7\xd0\x6f\xb6\xb6\xff\x95\x48\x81\x80\x2d\xa2\x32\x27\xd7\x14\xf5\xe3\x7b\xc0\x44\x70\x5d\xeb\x35\xba\x40\xbc\x31\xd1\x7e\x1f\x48\x81\xed\x9d\xa0\xcb\xab\x57\x85\xba\xce\x10\xcf\x5e\xc0\x0e\xfb\x1a\x94\x06\xa1\xcb\x63\x68\x4a\x61\x04\xd2\x17\x34\x36\xdd\x0d\x5b\x66\x32\xe4\xfa\x1f\x47\x05\x97\xd4\x37\xaa\x88\x0c\xf1\xda\x8a\xd8\x9f\xee\xcd\xfa\x9f\xf7\x63\x83\x9d\x75\xa1\x88\x69\x57\x43\x2b\x85\x6f\x71\x6c\x55\x1c\x1a\xd9\x8e\x5a\xd8\xef\x2c\x7d\xa0\xb8\x36\x0b\xeb\xc5\x96\x1d\x73\xd8\x8e\x98\x3b\x3d\xf5\xb7\xee\xfd\x0d\x00\x00\xff\xff\x61\x77\xec\x94\x0d\x1e\x00\x00")

func schemasIntellectual_assetJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasIntellectual_assetJson,
		"schemas/intellectual_asset.json",
	)
}

func schemasIntellectual_assetJson() (*asset, error) {
	bytes, err := schemasIntellectual_assetJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/intellectual_asset.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasMaterial_assetJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x8f\xd3\x30\x10\xbd\xf7\x57\x58\x66\x8f\xbb\x35\x5c\x38\xf4\x86\xc4\x57\x91\xd8\xad\xb4\x94\x0b\x42\xc8\xc4\x93\xee\x94\xd8\xce\x8e\x1d\x4a\x85\xfa\xdf\x91\x93\x6c\x70\x42\x93\xd2\x56\xdb\xee\x21\x17\x4f\xe6\xcd\x9b\x37\xe3\x19\xff\x1e\x31\xc6\x2f\x50\xf1\x09\xe3\x77\xde\xe7\x6e\x22\xc4\x6a\xb5\x1a\x2f\xd1\x25\x63\x99\x8c\x8b\x1f\x82\x94\x73\xc2\x25\x77\xa0\xa5\xd0\xd2\x03\xa1\xcc\xbe\x49\xe7\xc0\x8f\x97\xce\x1a\xf1\x8c\x5f\x96\x20\xd5\x2f\x0f\x40\x13\x21\x82\xf5\xaa\x3a\x1d\x5b\x5a\x08\x45\x32\xf5\x57\xcf\x5f\xd6\x60\xb5\x9f\x82\x14\x0d\x7a\xb4\xc6\xf1\x09\x0b\x7c\x18\xe3\x37\xb4\x90\x06\x9d\x0c\xc7\xcd\x29\x63\xdc\xaf\x73\x08\x11\xec\xf7\x25\x24\xbe\x04\x28\xcf\x73\xb2\x39\x90\x47\x70\xd1\xdf\x8c\x71\x1b\xe1\x7c\x40\x97\x4c\x55\xcb\x1e\x21\xa2\xf1\xb0\x00\xe2\x8d\x6d\x73\xb9\x1d\xe6\x5a\x6a\xe8\x82\x5c\x10\xa4\xff\xa9\x60\x88\xe7\x6a\xe1\x44\x94\xbb\xb8\xb6\xe6\x8d\xce\xfd\xfa\xd6\x13\x9a\xc5\x6e\x1e\x9f\x2a\xe2\x87\xf2\x00\x53\x68\xa0\x12\x69\x1b\x9b\x9b\x6e\xa4\x9d\x7c\x5e\x29\x45\xe0\xdc\x49\xa5\x19\x75\x28\x71\x82\xfb\x02\x09\x42\x95\xbf\x0c\x76\xc1\x50\x71\x6b\xd3\xd7\x06\x55\x2a\x55\x32\x91\xd9\x2c\xee\xb3\x54\x66\x0e\x46\x11\x01\x3e\x03\x72\xc7\x35\x6c\x5e\x22\xcc\xe7\xd3\xd7\x8f\x21\x64\x89\xbb\xb5\x92\x55\xdc\xa9\x02\xe3\x31\x45\xa0\xbe\x6b\x22\x89\xe4\x3a\x52\x8f\x31\x5e\x18\xbc\x2f\x60\xea\x41\x87\x5c\x3c\x15\xd0\x32\x63\x6d\x88\xe1\xa2\x74\xda\x04\x67\x5d\x1a\x91\xd3\xa6\x05\xab\xd1\x3c\x84\x7c\x31\x90\xd1\x7b\x6b\x2c\x61\x8a\xc9\x8c\x20\xc5\x5f\xe7\xba\xb8\x15\x99\x77\xf8\x13\xca\x16\x3b\xed\x2d\xf9\x87\xc7\x5b\xa9\x31\x5b\x3f\x01\x22\x4d\x75\x6e\x8b\xf4\xec\xd5\xf9\x28\x31\xeb\x6b\x7b\x57\x79\xb7\x3a\x30\xb5\xa4\xa5\x0f\x56\xd0\xc1\x75\x00\x3a\x9e\xa6\x73\x83\xbe\x2f\xd1\xfe\x19\x5c\x7a\xed\x3d\xf8\xa2\x69\x32\x74\xd7\x87\x1a\x75\xb0\x79\x0e\x9f\x94\x03\x8a\x1c\xb5\xe4\x03\xd6\xe9\xa7\x67\x97\xc1\x53\x79\x23\xec\xdf\x67\xc7\x2d\xd7\x46\xfd\x5d\xda\xf4\xf1\x3d\x76\xf5\x6e\x5d\x60\x07\x2e\xe1\xbf\x58\x9f\x65\x56\x9c\xad\x9e\x5d\x32\x8f\xfb\xee\xeb\xca\xd8\x79\xfb\xed\x35\x77\xba\x02\xee\x4a\xea\x80\xe2\x8f\xc2\xb7\x19\xfd\x09\x00\x00\xff\xff\xd9\xdf\x8e\x90\xc6\x0c\x00\x00")

func schemasMaterial_assetJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasMaterial_assetJson,
		"schemas/material_asset.json",
	)
}

func schemasMaterial_assetJson() (*asset, error) {
	bytes, err := schemasMaterial_assetJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/material_asset.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasMessageHeaderJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x56\x4d\x6f\xda\x40\x10\xbd\xf3\x2b\x2c\xb7\xc7\x84\xed\xa9\x07\x6e\x55\xa8\x04\x95\xfa\x21\x91\xf4\x52\xe5\xb0\xf1\x0e\x66\xa8\xbd\x6b\x66\xd6\xa5\xa8\xe2\xbf\x57\x36\xc6\x18\xb3\xeb\x80\x82\x93\x0b\x12\x63\xef\x9b\x37\xf3\x66\x9e\xf7\xdf\x20\x08\xc2\xf7\xa8\xc2\x51\x10\x2e\xac\xcd\x78\x24\xc4\x7a\xbd\x1e\x2e\x91\xa3\xa1\x8c\x86\xf9\x6f\x41\x8a\x59\x70\xb4\x80\x54\x8a\x14\x98\x65\x0c\x62\x01\x52\x01\x0d\x97\x6c\xb4\x78\x17\xde\x94\x20\xbb\x57\xf6\x40\x23\x21\x8a\xa7\xb7\xbb\xe8\xd0\x50\x2c\x14\xc9\xb9\xbd\xfd\xf0\xb1\x02\xab\xce\x29\x98\xa3\x46\x8b\x46\x73\x38\x0a\x0a\x3e\x41\x10\x4e\x4a\xfc\xfa\x7f\x10\x84\x76\x93\x41\x81\x6d\x9e\x96\x10\xd9\xf2\x68\x19\xcf\xc8\x64\x40\x16\x81\x1b\x6f\x07\x41\x58\x31\x9d\xaa\xa3\x70\xc1\x93\x60\x7e\x66\xb5\x45\x4e\xae\x8a\x14\x0d\x9e\xe2\xe1\x61\x3a\x0e\x6b\xd0\xed\xcd\x21\x6d\x64\x88\x20\x91\xc5\x6b\xaf\x9d\xba\xaa\xf8\x2e\x91\xcc\xad\xcc\x97\xe5\x06\x9d\xa7\x40\x65\x0d\x2e\x06\x5f\x9b\x79\xba\x98\xdc\xef\x24\xeb\x9b\x48\x99\xc6\xc9\x83\xc0\xe6\xa4\x3f\x29\x45\x70\xd2\x92\xab\x88\xf1\xcd\xe8\xcf\x69\x66\x37\x33\x4b\xa8\xe3\xee\x66\x60\x8a\x3a\xf6\xb2\x38\xc6\x6d\x9d\xe9\xc2\x9d\xc1\x2a\x07\x1d\xb5\x1b\xdd\x0d\x5c\x1f\xea\x42\x9e\x20\x5b\x43\x9b\x8b\x80\xf7\x67\x9c\xb8\x7f\x80\x18\x8d\xee\x43\x88\x19\xa4\x3f\x81\xdc\x69\x81\xc8\xd0\x9d\x51\xde\x16\xf5\x3d\x01\x25\x81\x31\x70\x44\x98\xd9\x9e\x1a\x70\x0e\x8f\x18\x74\xb1\x4d\x86\xde\x8a\x80\x05\x2d\xb5\xfd\x82\x1c\x4d\xc7\x6d\x0e\x7b\x7f\x47\x6d\x21\x3e\x92\x72\xd0\x02\x0a\x09\x56\x39\x12\x14\xf6\xfa\xcb\x65\xf8\x3e\x4f\xf4\x38\x94\x7f\x57\x3b\xb6\xcd\x31\xd6\xce\x4e\xfb\xaa\xaf\xc2\x8f\x75\x51\x52\xa9\xb2\x93\x32\xf9\xd1\xfc\xa2\xcd\x65\xc2\x30\x68\xd4\xef\xf7\x93\x8b\x3f\x91\x59\xfe\x94\x20\x2f\x40\xdd\x63\x0a\x6c\x65\x9a\xf5\x31\x18\x07\x70\xf7\x72\xfc\xcd\x70\x67\xf1\xaf\xce\xe2\xcc\xc1\x72\xb4\xe9\xc5\xea\x39\x5c\xfb\x62\xf9\xf8\x19\xe7\xef\xe7\x96\x91\x19\x46\x97\x89\xf9\xf7\xb7\xb9\x02\xc6\xca\xe4\xea\x9b\xcf\x8e\xa5\xac\x69\x9e\x64\x7f\xb1\x76\xa7\xdf\xc5\xba\x04\x49\x24\x37\x07\xe5\x72\x8d\xab\x1c\xa6\x16\xd2\x02\xd0\x52\x0e\xf5\x23\xac\x82\x0d\x3d\x3d\xfa\xfb\x27\xa0\xa0\x24\xa3\x05\xea\xd3\x5b\x6e\xcf\xa6\x7e\xa4\xea\x81\x86\xfb\xa6\x75\x25\x2e\xd3\xec\x3b\x4d\x0c\x5b\x2d\x53\xf0\x33\xb1\x1e\x13\xe9\xcd\x45\x0e\x63\xda\xbe\x7b\x3a\x46\xf5\x48\xb1\xae\x0e\x7a\x6a\xaa\xa3\x8f\x8d\x4c\xcf\xce\xef\x9e\x62\xf1\xbb\x1d\x6c\x07\xff\x03\x00\x00\xff\xff\x16\x5b\x43\x70\xf4\x0d\x00\x00")

func schemasMessageHeaderJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasMessageHeaderJson,
		"schemas/message/header.json",
	)
}

func schemasMessageHeaderJson() (*asset, error) {
	bytes, err := schemasMessageHeaderJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/message/header.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasMessageMetadataCreate_requestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x31\x6f\xfa\x40\x0c\xc5\xf7\x7c\x8a\xd3\xfd\xff\x23\xe4\x3a\x75\xc8\xd6\x96\xa1\x4b\x45\x85\xba\x55\x08\xb9\x39\x87\x1c\x85\x24\xb5\x8d\x10\x42\xf9\xee\xd5\x25\x07\x3d\x68\x3a\x20\x56\x3f\xe7\xf7\xde\xd9\xce\x21\x51\x4a\xff\x77\x56\x67\x4a\x97\x22\x0d\x67\xc6\xec\x76\xbb\x74\xe5\x38\x4f\x21\x4f\xb7\x9f\x86\x2c\xb3\xe1\xbc\xc4\x0d\x98\x0d\x32\xc3\x12\xcd\x06\x05\x2c\x08\x98\x9c\x10\x04\x17\x84\x5f\x5b\x64\x49\x57\x5c\x57\xe6\x9f\x1e\x75\xd4\xfe\x9b\x23\x39\x33\xc6\xab\xe3\xbe\x9a\xd6\xb4\x34\x96\xa0\x90\xf1\xdd\x7d\xa0\x87\xef\x2c\x16\xae\x72\xe2\xea\x8a\x75\xa6\x7c\x40\xa5\xf4\x4b\x30\x7c\xea\xfc\x66\xbd\xdd\x49\x56\x4a\xcb\xbe\x41\x6f\x55\x7f\xac\x30\x97\x8e\xd4\xd5\x1b\xaa\x1b\x24\x71\xc8\x51\xb7\x52\x3a\xbc\xe4\x19\xc1\x22\x9d\x49\x3e\x3a\x61\x71\xe5\x44\xca\x0e\x14\x06\x60\xa2\x37\x98\x60\x71\xe2\xb7\xa3\x5f\x29\x1e\x6b\xbb\xbf\xcc\x00\xd5\x7e\xea\x43\xbc\x47\x45\xa5\x0e\xd7\x64\x23\x64\x04\xca\xcb\x45\x3f\x94\xa1\x70\xb3\xd0\x32\xed\xc7\x16\x65\xbb\xda\xcd\xaf\x87\x71\xd0\x65\xd2\x4b\x37\xe1\x81\xc4\xe5\x6b\x1c\xc2\x3f\xf4\xd2\x4d\x78\x29\x91\x1d\x2f\xac\x63\x46\x12\xf0\xe0\x21\xab\xb7\xae\x6d\x12\x75\xe9\x36\x32\x9d\xff\x6c\x39\xb9\xd8\xb6\xf6\xff\x88\x23\xb4\x67\x3b\xbd\xb8\xc3\x3f\x4e\x23\x54\xe7\x27\x16\x58\xdb\x05\x82\xf5\x6b\x7c\xdf\x05\xac\x19\x93\xa3\x7d\x9b\xb4\xc9\x77\x00\x00\x00\xff\xff\x2e\x67\x92\xf7\xe0\x03\x00\x00")

func schemasMessageMetadataCreate_requestJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasMessageMetadataCreate_requestJson,
		"schemas/message/metadata/create_request.json",
	)
}

func schemasMessageMetadataCreate_requestJson() (*asset, error) {
	bytes, err := schemasMessageMetadataCreate_requestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/message/metadata/create_request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasMessageMetadataDelete_requestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x3f\x4f\xc3\x30\x10\xc5\xf7\x7c\x0a\xcb\x30\xb6\x39\x26\x86\x8c\xa8\x03\x0c\x48\x08\xa9\x13\x42\xc8\xc4\x97\xc6\x21\x89\x83\xcf\x55\x54\xa1\x7c\x77\x64\xc7\x44\xf9\xd3\x50\x75\xb4\x9f\xef\xfd\xde\xb3\xfd\x13\x31\xc6\x6f\x95\xe4\x09\xe3\xb9\xb5\x0d\x25\x00\x6d\xdb\xc6\x85\xa2\x34\x16\x69\x7c\xfc\x02\x23\x89\x80\xd2\x1c\x2b\x01\x15\x12\x89\x03\x42\x85\x56\x48\x61\x05\x48\x2c\xd1\xe2\x87\xc1\xef\x23\x92\x8d\x0b\xd2\x35\xdc\xf0\x8d\x77\xed\x67\xfe\x9c\x13\x00\xa7\x6e\xfb\xdd\x58\x9b\x03\x48\x23\x32\xbb\xbd\xbb\x0f\xee\x61\x4e\x62\xa6\x6a\x65\x95\xae\x89\x27\xcc\x05\x64\x8c\x3f\x07\xe0\xce\xf3\x5e\x7b\xdc\x20\x33\xc6\xed\xa9\x41\x87\xd2\x9f\x05\xa6\xd6\x3b\xf9\xfd\xc6\xe8\x06\x8d\x55\x48\xa3\xd3\x8c\xf1\xd0\xe4\x11\x85\x44\x33\x91\x5c\x74\x83\xd9\x95\x37\x92\x7b\xa3\x70\x01\x30\xea\x00\x01\x31\xf8\x77\x9b\x45\x8a\x07\x2d\x4f\xf3\x0c\x2b\x85\xfe\x2b\xe5\xb5\xfe\xfc\x7e\xff\xb4\x5b\x68\xd7\x35\x73\x01\xe8\x5c\x21\xef\x3d\x31\xee\x46\xab\x6e\x92\xd4\x7d\x0c\x65\xd0\xfd\xaf\xb7\xd5\x9c\x23\xe1\x7d\x32\x2d\xa4\xf4\x4c\x51\xbe\x8c\x1b\x67\xa2\x24\x8c\x96\xf8\x01\x7d\x1e\x3b\x7b\xf3\x95\x67\x88\x66\x41\x2e\x87\x70\xf8\x2e\xea\xa2\xdf\x00\x00\x00\xff\xff\x71\x1a\x76\xc4\x4c\x03\x00\x00")

func schemasMessageMetadataDelete_requestJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasMessageMetadataDelete_requestJson,
		"schemas/message/metadata/delete_request.json",
	)
}

func schemasMessageMetadataDelete_requestJson() (*asset, error) {
	bytes, err := schemasMessageMetadataDelete_requestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/message/metadata/delete_request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasMessageMetadataRead_requestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xcf\x4e\xf3\x30\x10\xc4\xef\x79\x0a\xcb\xdf\x77\x6c\xb3\x9c\x38\xe4\x88\x38\xc0\x01\x09\x55\xea\x09\x21\xb4\xc4\x9b\xd6\xa5\x89\x83\xd7\x55\x54\xa1\xbc\x3b\xb2\x63\xa2\xfc\x69\x40\x3d\xc6\xe3\x9d\xf9\x4d\xbc\x5f\x89\x10\xf2\xbf\x56\x32\x13\x72\xef\x5c\xcd\x19\x40\xd3\x34\xe9\x41\x73\x9e\x62\x9e\x9e\x3e\xc0\x2a\x66\xe0\x7c\x4f\x25\x42\x49\xcc\xb8\x23\x28\xc9\xa1\x42\x87\x60\x09\xd5\x9b\xa5\xcf\x13\xb1\x4b\x0f\x6c\x2a\xf8\x27\x57\xc1\xb3\x9b\xf8\xf1\xcd\x00\xbc\xba\xee\x4e\x53\x63\x77\xa0\x2c\x16\x6e\x7d\x73\x1b\xbd\xe3\x9c\xa2\x42\x57\xda\x69\x53\xb1\xcc\x84\xc7\x13\x42\x3e\xc5\xb8\x0d\xa1\xda\x74\x61\xbd\x28\x84\x74\xe7\x9a\x7c\x90\x79\x3f\x50\xee\x82\x4f\x38\xaf\xad\xa9\xc9\x3a\x4d\x3c\xb8\x2d\x84\x8c\x2d\x1e\x08\x15\xd9\x91\xe4\xc1\x2d\x15\x57\xfe\x8d\x7d\x30\x8a\xf5\x61\xd0\x00\x62\x44\xef\xdf\xae\x66\x14\x77\x46\x9d\xa7\x0c\x0b\x85\x7e\x2b\x15\xb4\xee\xfe\x76\xfb\x78\x3f\xd3\xae\x6b\xe6\x01\xf8\x52\xa1\xe0\x3d\x32\x6e\x07\x5f\xed\x88\xd4\xaf\x85\xb6\xe4\x77\xeb\x65\x91\x73\x20\xbc\x8e\xa6\x51\xa9\x90\x89\xc7\xe7\x61\xe3\x02\x8f\x4c\xc9\x3c\xbe\x8f\xbe\x1c\x3b\x79\xf3\x85\x67\x48\x26\x20\x7f\x43\xf8\xf8\x36\x69\x93\xef\x00\x00\x00\xff\xff\x1b\x89\x9e\x42\x48\x03\x00\x00")

func schemasMessageMetadataRead_requestJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasMessageMetadataRead_requestJson,
		"schemas/message/metadata/read_request.json",
	)
}

func schemasMessageMetadataRead_requestJson() (*asset, error) {
	bytes, err := schemasMessageMetadataRead_requestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/message/metadata/read_request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasMessageMetadataRead_responseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\xbf\x6e\xc2\x30\x10\xc6\xf7\x3c\x85\xe5\x76\x84\xb8\x53\x87\x6c\xad\x18\xba\x54\x54\xa8\x5b\x85\xd0\x35\x77\x21\xa6\x90\xa4\x77\x46\x08\xa1\xbc\x7b\xe5\xc4\x50\x43\xd3\x01\x31\xfa\xee\xfc\xfb\xbe\xfb\x73\x48\x94\xd2\xf7\x16\x75\xa6\x74\xe9\x5c\x23\x99\x31\xbb\xdd\x2e\x5d\x59\xc9\x53\xc8\xd3\xed\x97\x61\x14\x31\x92\x97\xb4\x01\xb3\x21\x11\x58\x92\xd9\x90\x03\x04\x07\x86\x09\x70\xc1\x24\x4d\x5d\x09\xa5\x2b\xa9\x2b\x73\xa7\x47\x1d\xb4\xff\x72\x04\x67\xc6\xf8\xec\xb8\x8f\xa6\x35\x2f\x0d\x32\x14\x6e\xfc\xf0\x18\xe0\xe1\x1f\x52\x61\x2b\xeb\x6c\x5d\x89\xce\x94\xf7\xa7\x94\x7e\x0d\x7a\x33\x02\x9c\x05\xb5\x53\x56\x29\xed\xf6\x8d\x7f\xeb\xfa\x73\x45\xb9\xeb\x40\x5d\xbc\xe1\xba\x21\x76\x96\x24\xaa\x56\x4a\x87\x3e\x5e\x08\x90\xf8\x2c\xe5\x9d\x33\x15\x57\xce\xa3\xec\x40\xa1\x7f\x13\xb5\x60\x82\xc4\x89\xdf\x8e\xfe\xb8\x78\xae\x71\x7f\xe9\x01\xaa\xfd\xd4\x9b\xf8\x88\x82\x4a\x1d\xae\xf1\xc6\x24\x04\x9c\x97\x8b\x7e\x28\x43\xe6\x66\xa1\x64\xda\x8f\x2d\xf2\x76\xb5\x9a\xdf\x8e\xd0\xa0\xca\xa4\x4f\xdd\x84\x07\x76\x36\x5f\xd3\x10\xfe\xa9\x4f\xdd\x84\x77\x25\x89\x95\x05\x5a\x11\x62\x07\x1e\x3c\x24\xf5\xde\x95\x4d\xa2\x2a\xdd\x46\xa2\xf3\xdf\x2d\x27\x17\xdb\xd6\x4c\xdf\x5b\xcb\x84\x67\x3b\xbd\xb8\xc3\x7f\x4e\x23\x44\xe7\x27\x16\x20\x76\x86\x60\xfd\x16\xdf\x77\x01\x6b\xa1\xe4\x28\xdf\x26\x6d\xf2\x13\x00\x00\xff\xff\x75\xd0\x07\x4b\xde\x03\x00\x00")

func schemasMessageMetadataRead_responseJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasMessageMetadataRead_responseJson,
		"schemas/message/metadata/read_response.json",
	)
}

func schemasMessageMetadataRead_responseJson() (*asset, error) {
	bytes, err := schemasMessageMetadataRead_responseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/message/metadata/read_response.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasMessageMetadataUpdate_requestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x3f\x6f\xf2\x30\x10\xc6\xf7\x7c\x0a\xcb\xef\x3b\x42\xdc\xa9\x43\xb6\x56\x0c\x5d\x2a\x2a\xd4\x4e\x15\x42\xd7\xf8\x42\x4c\x21\x49\x7d\x87\x10\x42\xf9\xee\x95\xff\x40\x0d\x4d\x07\xc4\x7a\xcf\xe5\xf7\x3c\xbe\xbb\x1c\x32\x21\xe4\x7f\xa3\x65\x21\x64\xcd\xdc\x51\xa1\xd4\x6e\xb7\xcb\x57\x86\xca\x1c\xca\x7c\xfb\xa9\xac\x26\x52\x54\xd6\xb8\x01\xb5\x41\x22\x58\xa2\xda\x20\x83\x06\x06\xb5\xed\x34\x30\x2e\x2c\x7e\x6d\x91\x38\x5f\x51\xdb\xa8\x7f\x72\xe4\xa9\xe1\x9b\x23\xb9\x50\xca\xa9\xe3\x50\xcd\x5b\xbb\x54\xda\x42\xc5\xe3\xbb\xfb\x48\x8f\xdf\x69\xac\x4c\x63\xd8\xb4\x0d\xc9\x42\xb8\x80\x42\xc8\xe7\x68\xf8\xe6\xfd\x66\xc1\xee\x24\x0b\x21\x79\xdf\xa1\xb3\x6a\x3f\x56\x58\xb2\x27\xf9\x7a\x67\xdb\x0e\x2d\x1b\xa4\xa4\x5b\x08\x19\x5f\xf2\x84\xa0\xd1\x9e\x49\x2e\xba\xc5\xea\xca\x89\xd4\x1e\x14\x07\xa0\x92\x37\xa8\x68\x71\xe2\xf7\xa3\x5f\x29\x1e\x5b\xbd\xbf\xcc\x00\xcd\x7e\xea\x42\xbc\x27\x45\x21\x0e\xd7\x64\xb3\x48\x08\xb6\xac\x17\x61\x28\x43\xe1\x66\xb1\x65\x1a\xc6\x96\x64\xbb\xda\xcd\xad\x87\x70\xd0\x65\x12\xa4\x9b\xf0\x60\xd9\x94\x6b\x1c\xc2\x3f\x04\xe9\x26\x3c\xd7\x48\x86\x16\xda\x10\xa1\x65\x70\xe0\x21\xab\x57\xdf\x36\x49\xba\x64\x9f\x98\xce\x7f\xb6\x9c\x5d\x6c\x5b\xba\x7f\xc4\x58\xd4\x67\x3b\xbd\xb8\xc3\x3f\x4e\x23\x56\xe7\x27\x16\x68\xed\x03\xc1\xfa\x25\xbd\xef\x0a\xd6\x84\xd9\xd1\xbe\xcf\xfa\xec\x3b\x00\x00\xff\xff\x59\x00\x66\x20\xe0\x03\x00\x00")

func schemasMessageMetadataUpdate_requestJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasMessageMetadataUpdate_requestJson,
		"schemas/message/metadata/update_request.json",
	)
}

func schemasMessageMetadataUpdate_requestJson() (*asset, error) {
	bytes, err := schemasMessageMetadataUpdate_requestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/message/metadata/update_request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasMessagePreservationPreservation_event_requestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x92\x31\x4f\xc3\x30\x10\x85\xf7\xfc\x0a\xcb\x30\xb6\x39\x26\x86\x8c\x48\x48\xb0\x45\xac\x08\x55\x26\xbe\x24\x4e\x9b\xd8\xdc\xb9\x8d\x2a\x94\xff\x8e\x9c\xb8\x21\x05\x3a\xa0\x8e\xb9\x7b\x79\xdf\xbb\x3b\x7f\x26\x42\xc8\x5b\xa3\x65\x26\x64\xed\xbd\xe3\x0c\xa0\xef\xfb\xb4\x31\x5c\xa4\xaa\x48\xf7\x5b\x20\xcd\x0c\x5c\xd4\xd8\x2a\x68\x91\x59\x55\x08\x8e\x90\x91\x0e\xca\x1b\xdb\x9d\x7d\x6c\xf0\x80\x9d\xdf\x10\x7e\xec\x91\x7d\xda\xb0\xed\xe0\x46\xae\x46\xca\xe4\x71\x22\x65\x00\xa1\xbb\x9e\xaa\xa9\xa5\x0a\x34\xa9\xd2\xaf\xef\xee\x23\x2d\xfe\xa7\xb1\x34\x9d\x09\xe6\x2c\x33\x11\x02\x0b\x21\xf3\x05\xf3\x31\x20\x5f\x26\xe2\xac\x10\x42\xfa\xa3\xc3\x40\xb3\xef\x0d\x16\x7e\x34\x1b\xeb\x8e\xac\x43\xf2\x06\x79\xa1\x16\x42\xc6\xe1\x9e\x50\x69\xa4\xb3\x56\x48\x4f\x58\xfe\x73\x49\xf5\x68\x14\x77\x00\x8b\x31\x20\x22\x66\xff\x61\xf5\x2b\xc5\x83\xd5\xc7\x2b\x32\x98\xae\xb4\xd4\x4e\x27\x71\xaa\xd8\xaa\x0a\xff\x0a\xf2\xfc\x2d\xcb\x27\xd5\x22\x54\xf2\x23\x9c\x0c\x57\x35\x84\xe1\xb1\xbc\x5e\x5a\xdb\x85\x49\x62\xf5\x6d\xf6\x52\x5a\x8f\x19\xd4\x2e\x5f\x9e\xa3\x54\x3b\xc6\xe4\x84\x1f\x92\x21\xf9\x0a\x00\x00\xff\xff\x0a\xbf\xca\x07\xa2\x02\x00\x00")

func schemasMessagePreservationPreservation_event_requestJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasMessagePreservationPreservation_event_requestJson,
		"schemas/message/preservation/preservation_event_request.json",
	)
}

func schemasMessagePreservationPreservation_event_requestJson() (*asset, error) {
	bytes, err := schemasMessagePreservationPreservation_event_requestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/message/preservation/preservation_event_request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasResearch_objectJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x5a\x41\x6f\xa3\x3c\x10\xbd\xe7\x57\x20\xbe\xef\xd8\x86\xdd\xcb\x1e\x72\xab\xda\xae\x36\xda\xaa\xad\xd2\x76\x2f\xab\x55\xe5\x85\x49\xe2\x2e\x18\x6a\x1b\x45\xd1\xaa\xff\x7d\x85\x21\xc1\x80\x71\x30\x04\x48\x7b\xe8\x05\x9c\x99\xf7\xe6\x79\x3c\xc3\xb8\x7f\x27\x96\x65\xff\x8f\x3d\x7b\x66\xd9\x6b\xce\x23\x36\x73\x9c\xcd\x66\x33\x7d\xc1\xcc\x9d\x22\x77\x1a\xff\x71\xa8\xc7\x98\xc3\xdc\x35\x04\xc8\xa1\xc0\x00\x51\x77\xfd\x1c\xfe\x7e\x01\x97\x4f\x5f\x58\x48\x9c\xff\xec\x33\x61\x25\x5d\xb3\xb3\x34\x73\x9c\xe4\xed\x79\xfa\x74\x1a\xd2\x95\xe3\x51\xb4\xe4\xe7\x9f\xbe\x64\xd6\xb2\xdf\x79\xb0\xc4\x04\x73\x1c\x12\x66\xcf\xac\x04\x90\x65\xd9\x8b\xcc\xd1\x9d\xf0\xb3\x7f\x6e\x59\x36\xdf\x46\x90\xf8\x48\x11\x08\x13\xe2\x79\x44\xc3\x08\x28\xc7\xc0\xa4\xd5\xd6\x6e\xdd\xd3\xd3\xfc\xaa\xf0\x3c\x01\x4c\x61\xd9\x90\x77\xe2\x94\x65\x6c\x1d\x09\xb0\x23\xec\xee\x8d\xbe\x9d\x95\xfd\x3e\x62\xee\x43\x1f\x8e\x6f\x43\x72\x1d\x44\x7c\xfb\xc0\x29\x26\x2b\x1d\x84\x7b\xa0\x2c\x24\x8b\xb0\x8a\x63\x17\x4a\x44\x29\xda\xda\x67\xf2\xab\x98\xe0\xd7\x18\xe6\x1c\x82\x24\x9c\x9c\xc6\x50\x78\x8d\xb3\x17\xb2\x39\x89\x58\x11\xaa\x04\x40\x5a\xfe\x56\x30\x18\x60\xb2\x73\xf6\x59\xc3\xe5\x0a\x98\x4b\x71\x94\xd8\x3d\x40\xc6\xea\x8b\x8d\x0c\x41\xa6\xa3\x41\xbd\xc0\xab\x35\x2f\x3b\xa8\x31\x9f\xad\xd5\xc5\x00\xf1\xb1\x94\x14\xae\xbb\x6a\xf8\x1d\xb6\x9b\x90\x7a\x83\x51\xe8\x23\xcb\xf4\x7a\x5f\x22\x0e\xab\x90\x6e\x3f\x30\xc5\x05\xb0\x30\xa6\x2e\x3c\xa6\x94\xda\xe3\x02\x12\x07\x40\x51\x82\x45\x85\xae\xe0\x47\x83\xe7\x07\xf2\xe3\x5e\x81\xdc\x49\x6e\x34\x38\xe6\x1e\x10\x8e\x97\x18\xe8\x48\x29\x2a\x01\xe8\x9a\xa8\x0b\xf0\x11\x07\xef\x84\x28\x09\x44\xc9\xb3\x35\x8e\x9a\xee\xd4\x3b\xba\x42\x04\x33\xf1\xbb\x11\x8b\x60\x05\x46\x57\x75\xbe\xe2\x01\xb9\x34\xc8\x1f\x4c\x38\xf8\x3e\xb8\x3c\x46\xfe\x33\x62\x0c\xb8\x2a\x8d\x04\x6a\xb5\x72\x93\x12\x53\x9b\xc2\x6b\x8c\x29\x24\x95\xe2\xa7\xb2\x9f\xab\xe9\xb6\x74\x1d\x90\xb6\xa3\xa8\x2b\xdc\xea\x12\xac\x3f\x13\x75\x27\xc3\xe1\x3d\x9a\x2d\xf8\xb5\x8f\x05\xf2\x3c\x11\x41\xe4\xdf\xcb\x7d\xee\x12\xf9\x0c\x26\x52\xd8\xec\x9a\x64\xe9\xd0\x40\xe3\xda\xfc\x6f\x7e\x02\xc9\xdb\x97\x66\xb8\x14\xa5\xe3\xa8\x85\x43\xf2\x62\xbc\xc9\xb0\x52\x2c\xaa\xb0\xd9\x49\xa2\xe3\xc8\xa2\xaa\x7d\x83\x7d\x63\xe4\x30\xfa\xd5\x73\x5e\xf4\xd3\x41\xd1\x34\x5c\xf5\x14\xda\x0b\x5b\xe9\xf3\x8d\x45\xa5\xc2\xc2\x03\x47\x1c\x02\x20\xfc\x94\xce\xf7\xa3\x35\x90\x29\xc7\x6f\xa1\xef\x0d\xd8\x51\x0c\x49\xd0\xc7\x2e\x10\x77\xac\x46\xe3\x26\xf3\xde\xbe\xbf\x40\xae\x0b\xac\xf2\xb9\x3a\x10\xfc\x8b\xd4\xb9\x21\xfa\x86\x87\xc0\x4e\x99\x2a\xd9\xf6\x49\x7f\x53\x51\xdb\x38\xeb\x33\x58\xb7\x28\x18\xed\x18\xcf\x20\xd4\xf7\xfa\x83\x02\x61\xf0\xc0\x11\x55\x4e\x3a\x8e\x81\xe3\x11\x07\xc0\x38\x0a\x22\x2d\x84\x6b\xe2\x0d\x09\xc0\x6c\x0b\x57\x9b\xac\x16\x5b\xf7\xa2\x9c\xe8\xc6\x3b\x37\xcd\x9e\x7e\x2b\xff\x45\xee\x43\x73\x5c\xd5\xd6\xcc\x5e\x37\x6e\x43\xd1\x50\x85\x42\x0b\xb5\x2e\x43\xf1\x79\x55\x1c\x7d\x1a\x2b\xe6\xee\xad\x0c\x3f\x12\xcf\x7d\x8f\x79\xd4\xe5\x28\x2a\x97\x0b\xd6\x90\x03\x81\xd4\xf9\xc1\x6e\x22\x87\xfb\x91\x07\xa7\x39\xcb\x0f\x3d\x3c\xcd\x69\x36\xbf\xc9\x38\x79\xa6\x66\xdd\x65\x1e\x02\xf5\xb5\xc8\x40\xe9\x57\xbe\x67\xe9\xc0\xe3\x84\x06\xa4\x26\x3b\xf0\xbd\x8f\x77\x73\x26\xa7\x7a\xc3\x79\xa8\xfc\xbc\x83\xc9\xb4\x71\xab\x53\xea\x2f\xea\xab\xff\xc1\x53\x51\x77\x66\xb4\xef\xa2\x34\x41\x37\xff\xd7\x02\xc9\x56\x87\x6e\x26\x40\x1c\x28\xd6\x4d\xcd\x65\xd0\x35\x43\x55\xc5\xfe\x39\xe2\xe5\x57\xed\x16\x69\x3c\xb5\x97\x19\x94\x71\xb7\x57\x53\x99\xf9\xc6\x3a\x46\xc2\x4a\xaf\x0a\xa6\x40\xc7\xd0\x4e\x75\x36\x35\x55\x2d\x0b\xcc\xf1\xf4\x2a\x7d\x50\x1b\x2b\xe5\x21\x0e\xbd\x8d\xbb\x0f\x8c\x05\x12\xdf\xfd\x7e\xe9\x5e\xed\x3c\x18\x0b\x95\xc7\x45\x05\xb8\x83\x5e\xca\x2e\xd5\x5c\xb6\xdc\xcc\xa8\x97\x15\x12\x8e\x9e\x95\x2c\x39\x32\x17\xb4\x1c\x31\x0d\x8b\x16\xf2\x4e\x92\xbf\xb7\xc9\xbf\x00\x00\x00\xff\xff\x32\x3f\x23\xfc\xfe\x27\x00\x00")

func schemasResearch_objectJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasResearch_objectJson,
		"schemas/research_object.json",
	)
}

func schemasResearch_objectJson() (*asset, error) {
	bytes, err := schemasResearch_objectJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/research_object.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasThesis_dissertationJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x98\xcd\x6e\xe3\x38\x0c\xc7\xef\x79\x0a\x43\xbb\xc7\x36\xde\xbd\xec\x21\xb7\x45\xbb\x0b\x04\xbb\x68\x8b\x4c\x3a\x97\xa2\x08\x34\x36\xe3\xb0\x63\x4b\x2e\x45\x37\x08\x06\x7d\xf7\x81\xec\xa4\x95\x13\x45\x75\x3e\xa6\x93\xe9\x21\x17\xc9\x21\x7f\xfc\x93\x16\x29\x7f\xeb\x45\x91\xf8\x1d\x53\x31\x88\xc4\x8c\xb9\x34\x83\x38\x9e\xcf\xe7\xfd\x07\x34\x49\x5f\x26\xfd\xea\x6b\x4c\xa9\x31\xb1\x49\x66\x50\xc8\x98\x67\x60\xd0\x4c\x52\x34\x06\x88\x25\xa3\x56\xfd\x07\xa3\x55\xfc\x9b\x38\xab\x2d\x35\xcf\xad\xac\x0d\xe2\xd8\xee\x9e\x37\xab\x7d\x4d\x59\x9c\x92\x9c\xf2\xf9\x1f\x7f\x2d\x2d\x2e\xff\x97\xc2\x14\x15\x5a\x73\x46\x0c\x22\x0b\x15\x45\x62\x5c\x3b\xbb\x74\x7c\xbd\xec\x45\x91\xe0\x45\x09\xd6\x8f\xfe\xf2\x00\x09\xd7\x66\xea\xf5\x92\x74\x09\xc4\x08\xc6\x79\x3a\x5a\x3d\x77\x7b\x3b\xbc\x6c\xad\x5b\x68\x82\x69\xd7\xf8\x17\x25\x98\x65\xc4\xb1\x03\x1d\xd7\x76\x5f\x8c\x3e\x9f\xad\xfb\x1d\x23\xe7\xf0\x23\x1c\x5f\x69\xf5\x4f\x51\xf2\xe2\x13\x13\xaa\x2c\x84\x70\x03\x64\xb4\x1a\xe9\x4d\x8e\x95\x94\x92\x48\x2e\xc4\x99\xbb\x55\x29\x7c\xac\x60\xc8\x50\x58\x39\x99\x2a\x68\x6d\xe3\x72\xc3\x35\xb7\x5b\x60\x04\x06\x24\x25\xb3\x49\x03\xe9\x0b\xd1\x01\x77\xdc\x3c\xb7\x40\x0a\x54\x2b\xc8\x3f\x03\x1a\x5c\x82\x49\x08\xcb\xb5\x5a\xf2\x89\x10\x9d\x9a\x0a\x2e\xba\x2b\x43\x20\xda\x11\x66\x33\x5e\x07\x3b\x32\xd6\xd2\x47\x48\x73\xc9\x47\xac\xb8\x44\x2b\x96\xa8\x02\x72\xb7\xf9\x9a\x43\xe4\xef\xb9\xa4\x14\xd2\x1a\x65\x6b\x0d\xbd\x4f\x1a\x83\x08\x1d\xcb\xf8\x3f\x58\xcc\x35\xa5\xa7\xf4\x1e\xef\x7c\x40\x85\x4b\xf7\x42\x32\x64\x9a\x16\x1f\x38\xc4\x11\x18\x5d\x51\x02\xe3\x26\x24\x6f\x98\xa6\xb1\xd8\x0a\x04\x54\x55\x88\x41\x74\x27\x78\xb3\x3f\xde\x07\xfc\x7d\x96\x79\xb5\xee\x68\x37\x01\xac\x67\x20\xb7\xeb\xb7\x64\xb8\x76\xdc\x04\x38\x86\x29\x28\xc6\x29\x02\x9d\x52\x72\x3b\xbc\xba\x0e\xf8\xa1\x2f\xf0\x08\x72\xc9\x90\x7e\x00\x29\xea\x48\xec\xda\x0c\xcb\xae\x95\x7f\x4d\x99\x54\x68\xea\xff\x1d\x77\x1e\xd9\xb5\x3b\xd4\x7d\x01\x55\x36\x54\x86\x91\x2b\xbb\xb8\x01\xf7\x73\xfb\x45\x77\x9c\x8e\xa5\xf7\x2f\x9e\xd6\x00\x88\x8a\x21\xcf\x21\xe1\x4a\xe6\x13\x69\x0c\x78\x65\xa8\xa9\xdf\x2c\xaf\x44\x3f\x01\xc9\xec\x90\x41\x3b\xd1\x45\xa1\xd5\xc4\x96\xb7\xbd\x43\xf8\x58\x2e\x56\x5e\xbc\x0c\xb9\x54\x59\xe5\x61\xf8\x85\x3b\xd7\xeb\x2c\x2c\x1e\x2b\x99\xe3\x14\x93\xba\x1e\xff\x87\x27\xc8\xdf\x17\xcc\x55\xba\xc5\x72\x25\x8b\xc3\x9a\xdb\xee\x28\xbd\x35\x24\x41\xf0\x58\x21\x81\x9d\xcb\xee\xbc\x17\xcf\x2d\xd7\xc2\xd0\x55\x2d\x78\x85\xd9\x36\xf1\xfb\x67\xf0\xf0\x04\xb2\x65\x5e\x08\xb5\xef\xb7\x0f\x76\xdf\x7b\xb1\x2d\x83\x4d\x35\x05\xf3\xbb\xdc\xbb\x7f\x51\x5c\xa6\x69\x9d\x25\x99\xdf\xb8\xd7\xfe\xa9\xcc\x0d\xf4\x9c\xe4\x88\xcd\x6b\xc0\x01\x9f\x12\x52\xc9\xe0\x9b\xa6\x8e\x52\x6e\x63\x2c\xc0\xb0\x2c\x4a\x7f\xd1\x5b\xdf\x7b\x4f\x8c\xb2\x89\xdf\x1d\x13\x3b\x16\xf1\x6b\xc8\x3e\x96\x7d\xf2\xd2\x1c\x2a\xa2\x4b\x07\x3e\xe4\xab\x8f\x63\xeb\x80\x6c\x15\x92\x81\x30\xd4\xa0\x5c\x68\x7f\xe6\x28\x30\xe9\xbc\x9d\xb5\xb6\x44\x7b\x64\xb0\xa5\xc4\x3a\xd6\x1e\x09\xec\xd9\xdf\x73\xef\x7b\x00\x00\x00\xff\xff\x51\xb9\xa4\xab\x41\x14\x00\x00")

func schemasThesis_dissertationJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasThesis_dissertationJson,
		"schemas/thesis_dissertation.json",
	)
}

func schemasThesis_dissertationJson() (*asset, error) {
	bytes, err := schemasThesis_dissertationJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/thesis_dissertation.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasTypesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x4d\x6f\xda\x40\x10\x86\xef\xfc\x8a\xd5\x96\x83\xf9\x58\x2f\x6e\x29\x02\x5f\xaa\x4a\xad\x54\xa4\xaa\x1c\x28\x39\xc4\x76\xa4\x0d\x5e\xc3\x12\xed\xda\xda\x9d\x04\x11\xb2\xff\x3d\xf2\x67\x70\x0e\x81\x28\xb9\x8d\x9e\xd7\xf3\xcc\x8c\xed\x63\x07\x21\xdc\x15\x31\xf6\x11\xde\x02\x64\xc6\xa7\x74\xbf\xdf\xbb\x3b\x61\xd6\x2e\x5b\xbb\xf7\x77\x54\xc7\xc6\x50\xb3\xde\x72\xc9\x28\x1c\x32\x6e\xdc\x9d\x49\x15\xfd\x82\x87\x45\x6f\x99\xd4\xfd\x3e\xa5\x79\x4a\x4a\xea\xa6\x7a\x43\x63\xcd\x12\x20\xa3\x49\xe5\xa8\xfa\x62\x9e\x08\x25\x40\xa4\xca\x60\x1f\xe5\x6b\x20\x84\xff\xa5\xea\xb7\xcc\xe0\xb0\x04\x2d\xd4\xa6\xe1\x08\xe1\x7c\x70\x3e\xc3\x94\xc9\xb0\xe6\x52\xa8\xbf\x5c\x6d\x60\x8b\x7d\xe4\x15\xd0\x96\x19\x5e\xad\xe6\xbf\x2e\x31\x64\x0c\x80\x6b\x95\x47\x37\xc1\x88\xcc\x18\x49\xa2\xe3\xd4\x92\xa6\x1e\x5b\x12\x78\xe4\x7b\xd4\x80\x6f\x96\x04\xd3\x19\xbb\x6d\x93\xba\xf6\xbe\xda\x2e\x6e\x6d\xb2\xe4\xf2\x8a\xeb\xf7\xee\xe2\x8c\x9e\x02\x8f\xcc\x8a\x21\x51\xbf\x17\x86\xee\x59\xe2\x10\x27\xaf\x7e\x92\x6b\x46\x1e\x49\x34\x08\x43\xb7\xd7\x6f\x91\xde\x0f\x27\x0c\x07\xe7\x9f\x7a\x75\xc1\x3c\x5b\xe8\x3f\xa9\x01\xc5\x24\x3f\xbd\x83\xa9\xc3\x22\xc1\x3e\x0a\x2a\x80\x9a\xe8\xad\x33\x8b\x2c\x49\xb5\x64\x50\xfc\x36\xb5\xb8\x89\xed\xf0\x23\x3e\x91\x3d\x8c\x3f\xd1\x35\x39\x71\x55\x55\xd4\x7a\x39\xff\x85\xe4\x06\x98\xcc\x2e\xf9\xc2\x2f\xea\x98\x01\x27\x20\xea\xbb\x73\xb7\xed\xd8\xce\x73\x00\x00\x00\xff\xff\xf2\x51\xa0\x0c\x91\x03\x00\x00")

func schemasTypesJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasTypesJson,
		"schemas/types.json",
	)
}

func schemasTypesJson() (*asset, error) {
	bytes, err := schemasTypesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/types.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataCreateReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x95\xc1\x6b\x22\x31\x14\xc6\xef\xf9\x2b\x1e\x78\xa9\xb0\x26\x3d\xec\xc9\x9b\x68\x2f\x05\x5b\x70\xbc\x49\x71\xde\x24\x4f\x27\x32\x93\xcc\xe6\x45\x58\xff\xfb\x25\x93\x51\x2c\x68\xe9\x42\xf7\xb4\x05\x0f\xe6\xfb\x92\xdf\xc7\x24\x5f\x66\x46\xb0\xa4\x88\x06\x23\xc2\x3c\x10\x46\x12\x62\x49\xcc\xb8\x27\x58\x9f\x3a\x9a\x42\x79\xf6\xb3\x5d\xca\x8b\x3f\x6f\x90\x79\x0a\xe5\xdc\xb7\x2d\x3a\x53\x4a\x21\x16\xc4\x3a\xd8\x8a\x18\x10\x9e\x8b\xd7\x17\xe8\xf0\xd4\x78\x34\xe0\x77\xd0\x9e\x73\xfc\x0e\x10\x36\x2b\x62\xc2\xa0\xeb\xd7\xea\x40\x3a\xbe\x3d\xd4\x31\x76\x3c\x55\x6a\x6f\x63\x7d\xac\xa4\xf6\xad\x7a\xb6\xac\x57\x8b\xa2\x50\x73\x74\xde\x59\x8d\xcd\x24\x01\x26\xad\x37\xd4\xa8\xaa\xf1\x95\xfa\x29\x1f\xe5\xa3\x5a\x24\x75\xd9\xab\xb7\xa6\xca\xd6\x1c\xc6\x3f\x60\x33\x0b\xd1\xea\x86\xbe\x2e\xcb\xbb\x48\x2e\xe6\x11\xab\x01\x3f\xd1\x83\xfc\x2e\x3b\x2d\x63\xfa\xc2\xe7\x7c\x9f\x3d\xe0\x6f\x64\x83\x0f\xb0\x59\xd7\xc4\x96\xff\x55\x78\xa6\xdf\xca\x8e\x35\x46\xb0\x0c\x7b\x72\x14\x30\x92\x01\x73\x0c\xd6\xed\x01\xa1\x9c\xaf\x9e\x66\xeb\xa7\x12\x7c\x97\x2c\xeb\x9d\x14\x62\x34\x82\x42\x93\xc3\x60\x3d\x0b\x31\x81\x82\x5c\x84\xe8\x81\x8f\x55\x2e\x56\xe0\x34\x74\x3e\xda\xdd\x29\xd3\x2f\xb5\xda\xf9\xf0\xdd\xab\xff\xa4\x57\x35\x32\x54\x44\x0e\x74\xff\x52\x32\xb9\x3a\x2b\xfa\x75\x24\x8e\xa9\x38\xe7\x16\x40\xae\x01\xd0\x6f\x6c\xbb\x86\xa6\xb0\x29\xc3\x60\x6d\x7d\x6f\x6d\x33\x62\x1b\xf2\x62\x79\x60\xef\xca\xb7\x87\x4f\xcc\x1a\x8b\x09\x0c\x67\x73\xcd\xc7\x2c\xdd\xe1\x7e\xe0\x26\xde\xb0\xdf\xd7\x3c\x93\xa5\x3b\xbc\x0f\xdc\xc4\xcb\x5b\x78\x8d\x8b\xbd\xb2\x35\x96\x99\x42\xec\x2f\xde\x1d\xf4\x27\x67\xa6\x98\x42\xd7\xd4\x62\xc2\x73\xff\x8f\x55\x9b\x3f\x12\xea\x7c\x3d\xd5\xed\x0c\x29\xd5\xe5\xf7\x37\x4b\xc7\xc3\x81\x73\xe7\x1d\x93\x10\x2f\x6a\x26\xc5\x9f\x00\x00\x00\xff\xff\xad\xc5\xe2\xb4\xcc\x06\x00\x00")

func messagesBodyMetadataCreateReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataCreateReadmeMd,
		"messages/body/metadata/create/README.md",
	)
}

func messagesBodyMetadataCreateReadmeMd() (*asset, error) {
	bytes, err := messagesBodyMetadataCreateReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/create/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataCreateArticle_create_requestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x58\xdf\x73\x9b\xb8\x13\x7f\xcf\x5f\xc1\xf0\x5c\x39\xe2\xa7\x21\x4f\xdf\x8e\x93\x36\xfe\x5e\xd2\x7a\x6c\xa7\xf7\x70\xd3\x07\x21\x16\x5b\x3d\x19\x79\x24\x91\x36\xd7\xc9\xff\x7e\x03\x06\x0c\x18\x13\x9c\xcb\x64\x3c\x36\xda\xcf\xee\x6a\xb5\xfb\xd9\x15\xbf\xaf\x0c\xc3\x14\xd1\x0f\xa0\xfa\xe9\x69\x7e\x6b\xde\x18\xa6\xe7\x07\x18\x02\xc0\xc8\x0e\x88\x87\xdc\xc8\xc6\x28\x74\x03\x40\x49\x8c\x63\x1c\x4c\x03\x0b\x70\x64\x7e\x38\xe2\xd6\x4c\x73\xc8\x81\x1f\x8d\x44\x02\x18\x1a\x7e\x69\x43\x69\xc9\xd2\x4d\x53\x6c\x01\x52\x89\x74\x29\x0a\xd9\xbf\xae\x0c\xc3\x30\x7e\x17\x9f\x86\x61\xee\x8b\x35\xf3\xa6\x7e\x52\x3f\xab\x9c\xb2\xa7\x81\x65\x11\x97\xa2\x90\x46\x1e\x72\xc1\x8f\x11\xc1\x7e\x88\x3c\x6a\x85\x76\x10\x24\x04\xbc\xa0\xb0\xd6\x42\xcf\x63\x48\x35\x4b\x18\xc8\xda\xe6\xe1\xef\x77\xe3\x7b\x8f\xf4\x37\xc2\xb3\xa1\x2d\x0d\x40\xd7\x2f\xfb\x02\xf9\x75\x39\x9b\xdf\x9a\x0d\xd9\xd7\xfa\xfb\xf7\x13\x3f\xef\x45\x2a\x24\x4b\x18\x5d\x48\x48\xd8\xaf\x37\x2d\x97\xb0\xcf\xec\x19\xd2\x2f\x64\x07\x6a\x2c\xe2\x13\xd9\x31\xfe\x72\x11\xa4\xf6\x6d\x95\x25\x17\xf8\xf6\x48\x18\xcf\x65\x0f\xbf\xfe\x97\x82\x3e\x95\xf9\x2a\x37\x24\x65\x8a\x68\x26\xd2\xa7\x94\xe9\x56\x02\xe4\x89\xd3\x59\xaf\x93\x21\x88\x60\x9a\x58\x3e\xc2\x30\xc5\xc8\xf5\xad\x04\x11\x3b\x8e\x50\x1c\xc6\x53\xea\xbb\x24\x48\xac\x69\xeb\x9c\x4e\x34\xe5\x11\x18\x71\xbe\x2d\x5c\xc7\xbb\xce\xea\xff\x99\xa2\xf3\xd8\xbc\x31\xac\x0f\xe7\x85\x46\x9a\xed\xa0\xaa\x94\xda\xb2\xcd\x16\xe4\x5d\x9c\xd1\x83\x3f\x03\x90\x8f\x71\x2c\x41\x9d\x3b\xe3\xde\xac\xac\xbe\xbd\x56\x6a\x4d\x79\xa8\x55\x93\x64\x7a\x2b\xe4\x01\x95\x4b\x7d\x6f\x54\xf5\x2d\x28\x2a\xd9\xbe\x8c\x4f\xa7\xac\xe3\xe3\xe2\x60\x45\x19\x3d\x80\x6a\xd3\x24\x52\x5a\x12\xaa\xfb\xcd\x2f\xd9\x66\xab\x55\x7d\x32\xa6\x2c\x7e\xaf\x34\xd1\xb0\x83\x54\x37\xaa\xfe\x6c\x1c\xca\x6a\x2c\xa1\xf7\x82\xc7\x2d\xb6\x78\x13\xc7\x19\x85\x94\x42\x03\xd2\x20\xb1\x72\x71\xd4\xb9\x57\xc2\x2d\xd2\x1a\x03\x51\xb0\xd2\x44\xea\x5b\xa2\x0b\x23\x36\xb6\x02\x84\x2d\x84\xad\x35\xc6\x37\xc5\x3f\x2a\x3e\x7b\x80\x77\x69\xdc\x82\x59\x36\x72\xac\xb5\xed\xdc\x78\xe1\x8d\x17\x96\xb0\xab\x66\x82\x54\xdb\x26\x94\x1e\x12\xac\x67\xd7\x87\xb5\xea\x04\xc5\x1e\x9a\xb9\x5a\xae\x36\xcf\x68\x20\x47\x4b\xa3\x57\x65\x5e\x56\x59\x77\xf0\xb9\x9b\x6e\x44\x43\x9d\x67\x36\xc6\x36\xb2\x30\xc2\xf6\xda\xaa\xa3\xe0\x35\xa3\x50\xc8\xd7\x69\x46\x29\xec\x35\xc4\xfd\x69\xf6\x07\xbc\xfc\x14\x32\xae\x4d\x9e\x71\xb8\x09\x99\x11\x0d\x1b\x21\x5f\x2e\xc1\x2c\x41\x89\x4c\xd2\xa3\x53\x52\x33\xca\xa1\xd9\x45\xeb\xfd\xa5\x42\xee\x08\x6f\x2e\xf5\x34\xbb\x3a\x34\xec\xa2\xd6\xd6\x10\xaf\x5c\x79\x5a\x3e\x9c\xa9\x40\xe0\x44\x43\x3c\xce\x78\xbb\xc3\x5f\xe6\x54\xaf\x5b\xb7\x5f\xe7\xe6\x29\x6f\xe5\x2e\x35\x28\x84\x32\x0d\xaa\xdf\xfb\x66\x07\xea\x1f\x4d\xce\x76\x80\x37\xd9\xff\x72\xe6\xbf\x90\xf5\x2f\x67\xfc\x53\x6e\xdf\x0a\xa5\x59\xba\x99\xa7\x4a\x33\x9d\x15\x06\x7a\x03\xf5\x89\xf5\x05\x27\x61\x1c\xaa\xa6\x0c\x96\x87\xa9\x4b\x22\x84\x9d\xbc\x29\x83\x47\x50\x30\xb5\x6d\x34\x4d\x22\xc7\xf1\xc3\x68\x8a\x1b\x4d\xb9\x40\x8e\x26\xba\x42\x7a\x44\x04\x0b\xb9\x15\xfb\x07\x9a\x07\x51\x3c\x7c\x20\x11\xf0\x31\xe8\x9c\x59\x66\x12\xf2\x94\x1e\xc9\x22\x39\xaa\xd3\x86\x8c\xe1\x56\x34\xc0\x06\x87\xbf\xe6\x80\x78\xa6\x2d\x5d\xa4\xe3\xb4\x45\x19\xa7\x33\xf0\x25\xad\xca\x78\x5f\xbb\x32\xfe\x4b\xcb\x32\xde\xd9\xb6\x8c\xb3\xb3\xf7\x49\x0b\xeb\x89\xca\x60\x2b\x33\x2e\x6e\x67\x1d\x67\x4e\xca\x32\x4f\xa6\xd9\x16\xe8\xdf\x2a\xdb\xb5\x1c\x6b\xcd\xc5\xb4\x94\xa8\x4a\x2f\x4e\x6c\x27\x72\xfd\x08\xf9\x91\xef\x22\x97\xb8\x18\x05\xae\x9d\x20\x8f\xc4\x8e\xef\x44\x91\x0f\x96\xd5\x9e\x6b\x2b\x0d\xd5\xc6\x76\xb1\xd7\x2f\x30\xc4\xcc\x27\xa3\xe3\xf7\xd6\x3e\x3e\xe5\x1d\x4a\x57\x16\xde\x2a\xbc\x99\xd8\xed\x85\x62\x39\x03\x3d\xc0\xf3\xb8\x62\xbd\x27\xea\x91\xed\xaa\x76\xa9\x65\x06\x27\xb5\xfc\x28\xe2\x3c\x37\xe3\x56\x30\x07\xca\xba\x77\x27\x8b\x8c\x75\x14\x9c\x8f\x46\x1b\xf9\xa4\x0e\x79\x23\xd9\x86\xa5\x84\x17\x2c\xda\x56\x2d\x41\x81\x7c\x2e\x28\xfc\xee\xf9\x7c\xfe\xb4\xb5\xee\xb9\x20\x71\x9e\x72\x59\x41\xf8\x59\xf1\x3b\x8f\x20\x07\xdd\x31\xb0\xd2\x42\x92\x0d\x1c\x85\x45\xca\x59\xda\x11\x7a\x20\x4a\xdf\x8a\x9f\x69\xae\xe6\x22\xe2\x5b\x03\xdd\xa6\x8c\x12\xfe\x51\x6b\xc9\xa2\x4c\xc3\xfb\xe2\x54\x7a\xf9\x20\x68\xd5\x68\xcd\xad\xd6\x7b\x75\x73\x7d\xad\x85\xe0\x6a\xc2\x40\x27\x13\x21\x37\xd7\x5b\xbd\xe3\xd7\x32\xa1\x4e\x18\xf8\xbd\x3b\x5d\x70\xa2\x13\x21\x77\x6d\x36\x56\xed\xc5\xaa\x72\x12\x3b\x74\x42\x0f\x5b\xc8\x8e\xec\x38\x6f\x5a\x14\x85\x56\x38\x45\x38\x26\xc4\x9b\x52\x1a\xf9\x76\xb3\x72\xba\x6a\xc6\x75\xf5\x0e\xa8\xaa\x88\xfb\xf5\x7a\x31\x20\x36\x13\x6a\xd4\x6c\x7c\xec\xd4\xb9\xdc\x5a\x2c\x81\xc4\xc7\x0b\x91\x6a\xd3\x2c\xf6\x11\xf6\x10\xf6\x1a\x34\xdb\x38\x54\x13\x5a\xbc\xea\xe6\xbc\x7a\x2a\x6b\xd4\xc3\x38\x15\xcf\x90\xbb\x7c\x34\xb7\x01\xa1\xf6\x44\x33\xc2\x67\xc7\xb5\x9e\x1b\xc2\x06\x04\x2f\xcf\x7a\x21\x58\x7a\x72\xf3\xcf\x07\x38\x9d\xc5\x39\xda\xf3\x26\x81\xe7\x63\xcb\x6f\xf1\x13\x17\xe9\xa6\x92\x40\xee\xc4\x0e\x3d\x1f\xbb\x47\x42\xaa\xaf\x94\x5d\x5b\xfc\x65\xd3\xb8\xa9\x76\xfd\x3a\xb1\xed\x4e\x5c\x6c\xdb\x5e\xd0\xd0\xd7\x67\x7e\xea\x84\x8e\xe7\x34\x39\xfe\xc3\x38\xfd\xfe\x04\x3b\x76\xe8\xfa\x83\xfa\xf1\xc4\xf7\x3d\xdf\xf1\x2e\xd7\xef\x5b\x13\x3c\x9d\x06\x6f\xea\x77\x2d\x37\xf0\x83\x77\xf8\x3f\x9d\x38\xd8\xb5\x3c\x6b\x50\x7f\x38\x71\xc2\xd0\x09\x82\x37\x1b\x72\xf3\xa4\x38\xa1\x23\x4a\x8b\x0a\x21\x63\x96\x12\x0d\x4b\x48\x40\xe6\xf3\xc8\xea\x45\x69\xc8\xab\xdf\xfc\xf3\xf3\xca\x08\xdc\xfe\xeb\xab\x86\xdd\x5e\xc8\x63\x9a\x16\xe3\x48\x99\xf7\x36\xc2\x3e\xb2\x9c\x33\x35\xd2\x45\xde\xa5\x71\x6b\x84\xb1\xcf\xd7\x0b\x27\xe9\x26\x6b\xd6\x84\x09\xd5\x25\x30\x17\xaa\xee\x7b\x0b\x29\xf2\x91\x82\xa5\x9b\xd9\x96\xc8\x42\xdc\xdc\x13\x16\x1f\x5e\x94\x98\xfb\x2c\xe2\xec\x10\xa5\x6f\x20\x55\x49\x97\xab\xc7\xa7\xe5\xe1\x36\xf8\x43\x64\x32\x25\xfc\x58\x94\xf3\xd5\xea\xcb\xf0\xab\x17\x33\xc9\x38\x1f\x7c\x8f\x5b\xca\x95\xba\xbf\x09\x9e\x9d\x67\xbe\x4a\x27\x93\x4a\x2f\x0e\xdb\x1d\x92\xe3\x64\x94\x58\x69\x7a\xae\xd4\xd0\x40\xf2\x7a\xf5\x7a\xf5\x6f\x00\x00\x00\xff\xff\x88\x87\xdc\x54\xd4\x16\x00\x00")

func messagesBodyMetadataCreateArticle_create_requestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataCreateArticle_create_requestJson,
		"messages/body/metadata/create/article_create_request.json",
	)
}

func messagesBodyMetadataCreateArticle_create_requestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataCreateArticle_create_requestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/create/article_create_request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataCreateDataset_create_requestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x57\x5d\x6f\xdb\xb8\x12\x7d\xcf\xaf\x10\xf4\x5c\x3a\xd4\xb7\xe4\xa7\x5b\x38\x69\x93\x7b\xd3\xdb\x20\x76\x76\x1f\x16\x7d\xa0\xc8\x91\xcc\x5d\x59\x34\x48\x2a\x6d\xb6\xe8\x7f\x5f\x48\x96\x64\x7d\xd9\x91\xb3\x41\x60\xd8\xe2\x9c\x99\xe1\x70\xe6\x1c\xea\xe7\x95\x61\x98\x22\xfe\x13\xa8\x7e\x7e\xbe\xbf\x31\x97\x86\xe9\xf9\x21\x86\x10\x30\xb2\x43\xe2\x21\x37\xb6\x31\x8a\xdc\x10\x50\xc2\x30\xc3\x61\x10\x5a\x80\x63\xf3\xc3\x11\xb7\xe1\x3a\x83\x12\xf8\xd1\x48\x24\x80\xa1\xe1\x87\x36\x94\x96\x3c\x4f\xbb\x66\x8f\x20\x95\xc8\x9f\x44\x65\xfb\xc7\x95\x61\x18\xc6\xcf\xea\xd3\x30\xcc\x7d\xb5\x66\x2e\xdb\x27\xed\xb3\x26\x29\x3b\x08\x2d\x8b\xb8\x14\x45\x34\xf6\x90\x0b\x3e\x43\x04\xfb\x11\xf2\xa8\x15\xd9\x61\x98\x10\xf0\xc2\x2a\x5a\x0f\x7d\xcf\x20\xd7\x3c\xe1\x20\xdb\x98\x87\xbf\x9f\x9d\xef\x13\xd6\xbf\x91\xac\x38\xb7\xa5\x33\xd0\xcd\xeb\xbe\x42\x7e\x7d\x5a\xdd\xdf\x98\x1d\xdb\x5f\xed\xf7\x6f\xa3\x3c\xef\x44\x2e\x24\x4f\x38\x7d\x94\x90\xf0\x1f\x6f\x46\xae\x61\x9f\xf9\x0b\xe4\xff\x27\x3b\x50\x73\x11\x9f\xc8\x8e\x67\xaf\x17\x41\xda\xdc\xd6\x45\x72\x41\x6e\x5f\x08\xcf\x4a\xdb\xc3\xaf\xff\xe4\xa0\xc7\x36\x5f\x65\x4a\x72\xae\x88\xe6\x22\x7f\xce\xb9\xee\x35\x40\xd9\x38\x83\xf5\xb6\x19\xc2\x18\x82\xc4\xf2\x11\x86\x00\x23\xd7\xb7\x12\x44\x6c\x16\x23\x16\xb1\x80\xfa\x2e\x09\x13\x2b\xe8\x9d\xd3\xc8\x53\x59\x81\x19\xe7\xdb\xc3\x0d\xb2\x1b\xac\xfe\x97\x2b\x7a\xcf\xcc\xa5\x61\x7d\x38\x6d\x34\x33\xec\x00\xd5\xb4\xd4\x96\xa7\x5b\x90\xb7\xac\xa0\x87\x7c\xce\x40\x3e\x32\x26\x41\x9d\x3a\xe3\xc9\xae\x6c\xbe\xfd\x6a\xdc\x9a\xf2\x30\xab\x26\x29\xf4\x56\xc8\x03\xaa\xb4\xfa\xd6\x99\xea\x1b\x50\x54\xf2\x7d\x5d\x9f\xc1\x58\xb3\xe3\xe2\xd9\x89\x32\x26\x00\xcd\xa6\x49\xac\xb4\x24\x54\x4f\x87\x7f\xe2\xe9\x56\xab\xf6\x64\x4c\x59\xfd\x5e\x6b\xa2\x61\x07\xb9\xee\x4c\xfd\xc9\x3a\xd4\xd3\x58\x43\xef\x44\xc6\x7a\x6c\xf1\x26\x2e\xe3\x14\x72\x0a\x1d\x48\x87\xc4\xea\xc5\x59\xe7\xde\x18\xf7\x48\x6b\x0e\x44\xc1\x5a\x13\xa9\x6f\x88\xae\x82\xd8\xd8\x0a\x11\xb6\x10\xb6\x36\x18\x2f\xab\x7f\x54\x7d\x4e\x00\x6f\x73\xd6\x83\x59\x36\x72\xac\x8d\xed\x2c\xbd\x68\xe9\x45\x35\xec\xaa\xdb\x20\xcd\xb6\x09\xa5\x87\x06\x9b\xd8\xf5\x61\xad\x39\x41\xb1\x87\x6e\xaf\xd6\xab\xdd\x33\x3a\xd3\xa3\x75\xd0\xab\xba\x2f\x9b\xae\x3b\xe4\x3c\x6c\x37\xa2\xa1\xed\x33\x1b\x63\x1b\x59\x18\x61\x7b\x63\xb5\x55\xf0\xba\x55\xa8\xec\xdb\x36\xa3\x14\xf6\x1a\xd8\x74\x9b\xfd\x0f\x5e\xbf\x0b\xc9\xda\x90\x27\x12\xee\x42\x56\x44\x43\x2a\xe4\xeb\x25\x98\x27\x50\xa2\x90\xb4\x4d\x8a\x11\x4d\x54\x4d\x9c\xb5\x49\xbb\xbf\x5c\xc8\x1d\xc9\xba\x4b\x13\x62\xd7\x96\x86\x5f\x24\x6d\x1d\xf3\x26\x95\xe7\xa7\x87\x13\x13\x08\x19\xd1\xc0\xe6\x05\xef\x2b\xfc\x65\x49\x4d\xa6\x75\xf3\xf5\xde\x1c\xf3\x56\x99\x52\x87\x42\x28\xd7\xa0\xa6\xb3\xef\x2a\xd0\xf4\xd5\xe4\xa4\x02\xbc\xc9\xfe\x97\x33\xff\x85\xac\x7f\x39\xe3\x8f\xb9\x7d\x2b\x94\xe6\x79\x7a\x9f\x2b\xcd\x75\x51\x05\x98\x2c\xd4\x27\x3e\x55\x9c\x84\x67\xd0\x88\x32\x58\x1e\xa6\x2e\x89\x11\x76\x4a\x51\x06\x8f\xa0\x30\xb0\x6d\x14\x24\xb1\xe3\xf8\x51\x1c\xe0\x8e\x28\x57\xc8\xd9\x44\x57\x59\xcf\xa8\x60\x65\xb7\xe6\x7f\x43\xf7\x20\xaa\x87\x0f\x24\x86\x6c\x0e\xba\x64\x96\x95\x84\xb2\xa5\x67\xb2\x48\x89\x1a\xc8\x90\x71\x5e\x8a\xce\xb0\xc1\xe1\xaf\x7b\x41\x3c\x21\x4b\x17\xf9\x18\x4b\x94\x31\xbe\x03\x5f\x22\x55\xc6\xfb\xe4\xca\xf8\x37\x92\x65\xbc\x53\xb6\x8c\x93\x77\xef\x91\x84\x4d\x54\xe5\xac\x94\x19\x17\xcb\xd9\x20\x99\xd1\x58\x96\xcd\xb4\xda\x02\xfd\x4b\x15\xbb\x5e\x62\xbd\x7b\x31\xad\x2d\x9a\xd1\x63\x89\xed\xc4\xae\x1f\x23\x3f\xf6\x5d\xe4\x12\x17\xa3\xd0\xb5\x13\xe4\x11\xe6\xf8\x4e\x1c\xfb\x60\x59\xfd\x7b\x6d\xe3\xa1\xd9\xd8\x8e\x79\xd3\x06\xe7\x98\x79\x74\x75\xfc\xd6\xdb\xc7\xa7\x52\xa1\x74\x13\xe1\xad\xc1\x5b\x89\xdd\x5e\x28\x5e\x32\xd0\x03\xbc\xcc\x1b\xd6\x3b\xa2\xbe\xf0\x5d\x23\x97\x5a\x16\x30\x9a\xe5\x2f\x82\x95\xbd\xc9\x7a\xc5\x3c\x33\xd6\x93\x3b\x79\x2c\xf8\xc0\xc1\xe9\x6a\xf4\x91\xcf\xea\xd0\x37\x92\xa7\x3c\x27\x59\xc5\xa2\x7d\xd7\x12\x14\xc8\x97\x8a\xc2\x6f\x5f\x4e\xf7\x4f\xdf\xeb\x3e\x13\x84\x95\x2d\x57\x54\x84\x5f\x54\xbf\xcb\x0a\x66\xa0\x07\x01\xd6\x5a\x48\x92\xc2\xd1\x58\xe4\x19\xcf\x07\x46\x0f\x44\xe9\x1b\xf1\x3d\x2f\xdd\x5c\x44\x7c\x1b\xa0\xdb\x9c\x53\x92\x7d\xd4\x5a\xf2\xb8\xd0\xf0\xbe\x3a\xd5\x59\x3e\x08\xda\x08\xad\xb9\xd5\x7a\xaf\x96\xd7\xd7\x5a\x88\x4c\x2d\x38\xe8\x64\x21\x64\x7a\xbd\xd5\xbb\xec\x5a\x26\xd4\x89\x42\x7f\x72\xa7\x8f\x19\xd1\x89\x90\xbb\x3e\x1b\xab\xfe\x62\x33\x39\x89\x1d\x39\x91\x87\x2d\x64\xc7\x36\x2b\x45\x8b\xa2\xc8\x8a\x02\x84\x19\x21\x5e\x40\x69\xec\xdb\xdd\xc9\x19\xba\x99\xa7\xea\x03\x50\x33\x11\x77\x9b\xcd\xe3\x19\xb3\x95\x50\xb3\xee\xc6\x47\xa5\xa6\xe2\x05\x4a\x0f\xc7\xd7\xa1\x14\x84\xda\x13\xcd\x49\xb6\x3a\xae\x4d\x5c\xd8\x53\x10\x59\x5d\xfa\x47\xc1\xf3\xd1\x8b\x78\x79\x9f\xd2\x05\x2b\xd1\x9e\xb7\x08\x3d\x1f\x5b\x7e\x8f\x2e\x32\x91\xa7\x8d\x05\x72\x17\x76\xe4\xf9\xd8\x3d\xf2\x43\xfb\x86\x37\x8c\x95\xbd\xa6\x9d\x17\xc7\x61\x5e\xa3\xd8\xee\xc2\xc5\xb6\xed\x85\x1d\x7f\x53\xe1\x03\x27\x72\x3c\xa7\x4b\xb9\x1f\xe6\xf9\xf7\x17\xd8\xb1\x23\xd7\x3f\xeb\x1f\x2f\x7c\xdf\xf3\x1d\xef\x72\xff\xbe\xb5\xc0\x41\x10\xbe\xe9\xdf\xb5\xdc\xd0\x0f\xdf\x91\x7f\xb0\x70\xb0\x6b\x79\xd6\x59\xff\xd1\xc2\x89\x22\x27\x0c\xdf\xd4\xc7\xee\x49\x65\x84\xce\xe8\x74\x2a\x84\x64\x3c\x27\x1a\x9e\x20\x01\x59\x5e\x0f\xd6\xaf\x4a\x43\x39\x8c\xe6\xef\x9f\xd7\x46\xe8\x4e\xbf\x4d\x6a\xd8\xed\x85\x3c\xb6\x69\x75\x3b\xa8\xe5\xdd\x46\xd8\x47\x96\xd3\xb9\x19\x74\x78\x68\x84\xbc\xcd\x59\xef\x46\x61\x0f\x71\x46\xfb\x2e\x99\x91\x3c\x2d\xba\x33\x61\x42\xf3\x4e\x56\x1a\x99\x2f\x20\x55\x4d\x46\x53\x43\xf8\xeb\xea\x9f\x00\x00\x00\xff\xff\x81\xfd\x8a\x64\x3d\x15\x00\x00")

func messagesBodyMetadataCreateDataset_create_requestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataCreateDataset_create_requestJson,
		"messages/body/metadata/create/dataset_create_request.json",
	)
}

func messagesBodyMetadataCreateDataset_create_requestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataCreateDataset_create_requestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/create/dataset_create_request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataCreateResearch_object_create_requestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\x5d\x73\xab\x36\x10\x7d\xf7\xaf\x60\x78\xbe\xba\x11\x98\x4f\x3f\xf5\x8e\x7d\xd3\xb8\x4d\x9a\x4c\xe2\xf4\xa5\x93\x07\x21\x2d\xb6\x5a\x8c\x3c\x92\xc8\xbd\x69\x26\xff\xbd\x03\x18\xc2\x97\x1d\x48\x33\x19\x0f\xa0\x3d\xda\xd5\x6a\xf7\x9c\x7d\x9d\x19\x86\x29\xa2\xbf\x81\xea\xc7\xc7\xf5\xca\x5c\x18\xa6\xeb\x05\x18\x02\xc0\xc8\x0e\x88\x8b\x9c\xc8\xc6\x28\x74\x02\x40\x31\xc3\x0c\x07\x7e\x60\x01\x8e\xcc\x2f\xef\xb8\x0d\xd7\x09\xe4\xc0\x6f\x46\x2c\x01\x0c\x0d\x3f\xb5\xa1\xb4\xe4\xe9\xb6\x69\x76\x07\x52\x89\xf4\x5e\x14\xb6\x7f\xcd\x0c\xc3\x30\x5e\x8b\x5f\xc3\x30\x0f\xc5\x9a\xb9\xa8\xbf\xd4\xdf\xaa\xa0\x6c\x3f\xb0\x2c\xe2\x50\x14\xd2\xc8\x45\x0e\x78\x0c\x11\xec\x85\xc8\xa5\x56\x68\x07\x41\x4c\xc0\x0d\x0a\x6f\x2d\xf4\x9a\x41\xaa\x79\xcc\x41\xd6\x3e\xcb\xbf\xd7\xc6\xf3\x80\xf5\x9f\x24\xc9\xce\x1d\xe9\x0c\x74\xf3\x72\x28\x90\xb7\xf7\xcb\xf5\xca\x6c\xd8\xbe\xd5\xcf\x4f\xbd\x38\xaf\x44\x2a\x24\x8f\x39\xbd\x93\x10\xf3\x9f\x1f\x7a\x3e\xc2\x7e\xe5\xcf\x90\xfe\x41\xf6\xa0\xc6\x22\x2e\xc9\x9e\x27\x2f\x93\x20\x75\x6c\x0f\x59\x3c\x21\xb6\x1b\xc2\x93\xdc\xb6\x7c\xfb\x25\x05\xdd\xb7\xb9\x95\x5b\x92\x72\x45\x34\x17\xe9\x63\xca\x75\xab\x00\xf2\xc2\xe9\xac\xd7\xc5\x10\x44\xe0\xc7\x96\x87\x30\xf8\x18\x39\x9e\x15\x23\x62\xb3\x08\xb1\x90\xf9\xd4\x73\x48\x10\x5b\x7e\xeb\x9e\x7a\x3b\xe5\x19\x18\x71\xbf\x2d\x5c\x27\xba\xce\xea\x6f\x5c\xd1\x35\x33\x17\x86\xf5\xe5\xb4\xd1\x48\xb7\x1d\x54\x55\x52\x3b\xbe\xdd\x81\xfc\xce\x32\x5a\xc6\x73\x06\xf2\x8d\x31\x09\xea\xd4\x1d\x0f\x56\x65\xf5\xf4\x56\x6d\x6b\xca\xb2\x57\x4d\x92\xe9\x9d\x90\x25\x2a\xb7\x7a\x6a\x74\xf5\x0a\x14\x95\xfc\x70\xcc\x4f\xa7\xad\xd9\xfb\xe2\xd9\x8e\x32\x06\x00\xd5\xa1\x49\xa4\xb4\x24\x54\x0f\xbb\xbf\xe7\xdb\x9d\x56\xf5\xcd\x98\xb2\x78\x7f\xd0\x44\xc3\x1e\x52\xdd\xe8\xfa\x93\x79\x38\x76\xe3\x11\x7a\x25\x12\xd6\x62\x8b\x0f\x71\x09\xa7\x90\x52\x68\x40\x1a\x24\x76\x5c\x1c\x75\xef\x95\x71\x8b\xb4\xc6\x40\x14\x3c\x68\x22\xf5\x8a\xe8\xc2\x89\x8d\xad\x00\x61\x0b\x61\x6b\x83\xf1\xa2\xf8\x47\xc5\xef\x00\xf0\x7b\xca\x5a\x30\xcb\x46\x73\x6b\x63\xcf\x17\x6e\xb8\x70\xc3\x23\x6c\xd6\x2c\x90\xea\xd8\x84\xd2\xb2\xc0\x06\x4e\x5d\xae\x55\x37\x28\x21\x8f\x9b\x6a\x60\xcd\x00\x4a\x9b\xe6\x4d\x9d\xa9\xd4\xa3\xeb\xd9\xb1\x3a\xab\xda\x2b\x23\xef\x16\x1d\xd1\x50\x57\x9b\x8d\xb1\x8d\x2c\x8c\xb0\xbd\xb1\xea\x5c\xb8\xcd\x5c\x14\xf6\x75\xb1\x51\x0a\x87\x3c\xd0\xc1\x62\xfb\x1d\x5e\x7e\x08\xc9\x6a\x97\x27\x02\x6e\x42\x96\x44\xc3\x56\xc8\x97\x29\x98\x7b\x50\x22\x93\x14\xde\xf3\x77\x10\x52\x37\xa5\xb4\x3e\x5e\x2a\xe4\x9e\x24\xcd\xa5\x01\xc5\xab\x33\xc3\x27\xe9\x5b\xc3\xbc\x8a\xe4\xf1\xfe\xfa\x44\x1b\x42\x42\x34\xb0\x71\xce\xdb\x32\x3f\x2d\xa8\xc1\xb0\x56\xb7\x6b\xb3\x4f\x5e\x79\x48\x0d\x1e\xa1\x5c\x83\x1a\x8e\xbe\x29\x43\xc3\xf3\xc9\x49\x19\xf8\x50\x02\xa6\xd3\xff\x44\xea\x9f\x4e\xfb\x7d\x82\xdf\x09\xa5\x79\xba\x5d\xa7\x4a\x73\x9d\x15\x0e\x06\x13\x75\xc9\x87\x92\x13\xf3\x04\x2a\x65\x06\xcb\xc5\xd4\x21\x11\xc2\xf3\x5c\x99\xc1\x25\x28\xf0\x6d\x1b\xf9\x71\x34\x9f\x7b\x61\xe4\xe3\x86\x32\x17\xc8\xd1\x6c\x57\x58\x8f\xc8\x60\x61\xf7\xc0\xff\x85\xe6\x45\x14\x1f\xaf\x49\x04\xc9\x18\x74\x4e\x2c\x4b\x09\x79\x49\x8f\x24\x91\x1c\xd5\xd1\x22\xe3\xbc\x1e\x9d\x21\x83\xf2\xaf\x39\x25\x9e\xd0\xa6\x49\x7b\xf4\x75\xca\xe8\x0f\xc2\x53\xf4\xca\xf8\x9c\x66\x19\xff\x47\xb7\x8c\x4f\x6a\x97\x71\x72\x00\xef\xe9\xd8\x40\x56\xda\x7a\x26\x0e\xd0\x9b\xbd\x26\xa9\x59\x27\x98\x5e\x5b\xe6\xc5\xb4\xdc\x01\xfd\x47\x65\xfb\x56\x60\xad\xe1\x98\x1e\x2d\xaa\xd6\x63\xb1\x3d\x8f\x1c\x2f\x42\x5e\xe4\x39\xc8\x21\x0e\x46\x81\x63\xc7\xc8\x25\x6c\xee\xcd\xa3\xc8\x03\xcb\x6a\x0f\xb7\xd5\x0e\xd5\xc1\xf6\xcc\x1d\x36\x38\xc7\xcc\xbd\xf9\xf1\xa9\x75\x8e\xcb\x5c\xa1\x74\xe5\xe1\xa3\xc6\x5b\x8a\xfd\x41\x28\x9e\x33\xd0\x35\x3c\x8f\x6b\xd6\x2b\xa2\x6e\xf8\xbe\x52\x4b\x2d\x33\xe8\xf5\xf2\x8d\x60\x79\x6d\xb2\x56\x32\xcf\xb4\xf5\xe0\x49\xee\x32\xde\xd9\xe0\x74\x36\xda\xc8\x47\x55\xd6\x8d\xe4\x5b\x9e\x92\xa4\x60\xd1\xf6\xd6\x12\x14\xc8\xe7\x82\xc2\xbf\x3f\x9f\xae\x9f\xf6\xae\x87\x44\x10\x96\x97\x5c\x56\x10\x7e\x56\xbc\xe7\x19\x4c\x40\x77\x1c\x3c\x68\x21\xc9\x16\xde\x8d\x45\x9a\xf0\xb4\x63\x74\x4d\x94\x5e\x89\x1f\x69\xbe\xcd\x24\xe2\xdb\x00\xdd\xa5\x9c\x92\xe4\x9b\xd6\x92\x47\x99\x86\xcf\xe5\xe9\x18\xe5\xb5\xa0\x95\xd0\x9a\x3b\xad\x0f\x6a\x71\x71\xa1\x85\x48\xd4\x57\x0e\x3a\xfe\x2a\xe4\xf6\x62\xa7\xf7\xc9\x85\x8c\xe9\x3c\x0c\xbc\xc1\x93\xde\x25\x44\xc7\x42\xee\xdb\x6c\xac\xda\x8b\x55\xe7\xc4\x76\x38\x0f\x5d\x6c\x21\x3b\xb2\x59\x2e\x5a\x14\x85\x56\xe8\x23\xcc\x08\x71\x7d\x4a\x23\xcf\x6e\x76\x4e\x77\x9b\x71\xaa\xde\x01\x55\x1d\x71\xb5\xd9\xdc\x9d\x31\x5b\x0a\x35\x6a\x34\x2e\x94\x7a\xf6\x36\xfb\x2f\x00\x00\xff\xff\xc4\x5a\x23\xe0\xcf\x11\x00\x00")

func messagesBodyMetadataCreateResearch_object_create_requestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataCreateResearch_object_create_requestJson,
		"messages/body/metadata/create/research_object_create_request.json",
	)
}

func messagesBodyMetadataCreateResearch_object_create_requestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataCreateResearch_object_create_requestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/create/research_object_create_request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataCreateThesis_dissertation_create_requestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x58\x4b\x73\xdb\xb6\x13\xbf\xfb\x53\x70\x78\x0e\x64\xf0\x4d\xfa\xf4\xcf\xd8\x4e\xec\x7f\x9d\xc6\x63\xcb\xed\xa1\x93\x03\x08\x2c\x29\xb4\x14\xa1\x02\xa0\x13\x37\x93\xef\xde\xe1\x53\x7c\x49\xa6\xdc\x9e\xaa\xf1\x68\x44\x62\x7f\xbb\x8b\xc5\x3e\x7e\xf0\xf7\x33\xc3\x30\x45\xfc\x3b\x50\xfd\xf4\x74\x7b\x65\x5e\x18\xa6\xe7\x87\x18\x42\xc0\xc8\x0e\x89\x87\xdc\xd8\xc6\x28\x72\x43\x40\x09\xc3\x0c\x87\x41\x68\x01\x8e\xcd\x77\x7b\xdc\x9a\xeb\x0c\x4a\xe0\x7b\x23\x91\x00\x86\x86\x6f\xda\x50\x5a\xf2\x3c\xed\x8b\xdd\x83\x54\x22\x7f\x10\x95\xec\x6f\x67\x86\x61\x18\xdf\xab\x6f\xc3\x30\x77\xd5\x9a\x79\xd1\xbd\xe9\xde\xb5\x4e\xd9\x41\x68\x59\xc4\xa5\x28\xa2\xb1\x87\x5c\xf0\x19\x22\xd8\x8f\x90\x47\xad\xc8\x0e\xc3\x84\x80\x17\x56\xd6\x06\xe8\x5b\x06\xb9\xe6\x09\x07\xd9\xd9\xac\x3f\xdf\x7b\xbf\x67\xa4\x7f\x21\x59\x71\x6c\x4b\x47\xa0\xeb\x97\x5d\x85\xfc\xfc\x70\x79\x7b\x65\xf6\x64\x7f\x74\xbf\xbf\x4c\xfc\xbc\x11\xb9\x90\x3c\xe1\xf4\x5e\x42\xc2\xbf\xbd\x6a\xb9\x81\x7d\xe4\xcf\x90\xff\x4c\xb6\xa0\x96\x22\x3e\x90\x2d\xcf\x5e\x4e\x82\x74\xbe\x3d\x16\xc9\x09\xbe\x7d\x22\x3c\x2b\x65\xeb\xa7\xff\xe5\xa0\xa7\x32\x9f\x65\x4a\x72\xae\x88\xe6\x22\x7f\xca\xb9\x1e\x24\x40\x99\x38\xa3\xf5\x2e\x19\xc2\x18\x82\xc4\xf2\x11\x86\x00\x23\xd7\xb7\x12\x44\x6c\x16\x23\x16\xb1\x80\xfa\x2e\x09\x13\x2b\x18\x9c\xd3\x44\x53\x19\x81\x05\xe7\x3b\xc0\x8d\xbc\x1b\xad\xfe\x9f\x2b\x7a\xcb\xcc\x0b\xc3\x7a\x77\x58\x68\xa1\xd9\x11\xaa\x4d\xa9\x0d\x4f\x37\x20\xaf\x59\x41\x6b\x7f\x8e\x40\xde\x33\x26\x41\x1d\x3a\xe3\xd9\xac\x6c\x7f\xfd\x68\xd5\x9a\xb2\xae\x55\x93\x14\x7a\x23\x64\x8d\x2a\xa5\xbe\xf4\xaa\xfa\x0a\x14\x95\x7c\xd7\xc4\x67\x54\xd6\x6c\xbf\x78\xb4\xa2\x8c\x19\x40\xbb\x69\x12\x2b\x2d\x09\xd5\xf3\xe6\x1f\x78\xba\xd1\xaa\x3b\x19\x53\x56\xcf\x8f\x9a\x68\xd8\x42\xae\x7b\x55\x7f\x30\x0e\x4d\x35\x36\xd0\x1b\x91\xb1\x41\xb7\x78\x15\x97\x71\x0a\x39\x85\x1e\xa4\xd7\xc4\x9a\xc5\x45\xe7\xde\x0a\x0f\x9a\xd6\x12\x88\x82\x47\x4d\xa4\xbe\x22\xba\x32\x62\x63\x2b\x44\xd8\x42\xd8\x5a\x63\x7c\x51\xfd\xa1\xea\x7b\x06\x78\x9d\xb3\x01\xcc\xb2\x91\x63\xad\x6d\xe7\xc2\x8b\x2e\xbc\xa8\x81\x9d\xf5\x13\xa4\xdd\x36\xa1\xb4\x4e\xb0\x99\x5d\xd7\x6b\xed\x09\x2a\x92\x40\x5a\x10\xc9\x80\xf5\x3d\xa8\x85\xfa\x47\x75\x24\x55\x1b\xdb\x67\x4d\x7a\xb6\xc9\x57\xbb\x3e\xce\x3a\xa2\xa1\x4b\x37\x1b\x63\x1b\x59\x18\x61\x7b\x6d\x75\xc1\xf0\xfa\xc1\xa8\xe4\xbb\x6c\xfb\x5a\xfb\x79\xd6\xab\x84\x7f\x47\x31\xa5\xb0\xd3\x9d\xe6\x51\x1a\xff\x04\x2f\x5f\x85\x64\xdd\x5e\x0e\x44\xa2\x0f\xb9\x24\x1a\x52\x21\x5f\x4e\xc1\x3c\x80\x12\x85\xa4\x9d\x53\x7a\x03\x8a\xab\x2b\xae\x14\x48\xbd\xef\x29\x8d\x74\xb7\xd5\x5c\xc8\x2d\xc9\xfa\x4b\x33\x73\xb5\x8b\x12\x3f\x69\x8a\xf6\xc4\x5b\xaf\x9e\x1e\xee\x0e\x14\x3b\x64\x44\x03\x5b\x66\x7c\x48\x26\x4e\x73\x6a\xd6\xad\xab\xcf\xb7\xe6\xb4\x45\x96\x2e\xf5\xba\x15\xe5\x1a\xd4\xbc\xf7\xfd\x61\x37\xcf\x82\x0e\x0e\x9b\x57\x07\xcd\xe9\x43\xe6\xc4\x01\x73\xfa\x70\x99\x19\x23\x65\x6d\xf1\x3c\xbd\xcd\x95\xe6\xba\xa8\x2c\xcc\xd6\xd9\x7f\x3c\x0e\x1b\xa1\xf4\x6c\x18\x46\x09\xf3\x81\xcf\x25\x49\xc2\x33\x68\x79\x10\x58\x1e\xa6\x2e\x89\x11\x76\x4a\x1e\x04\x1e\x41\x61\x60\xdb\x28\x48\x62\xc7\xf1\xa3\x38\xc0\x3d\x1e\x54\x21\x17\xcf\x96\x4a\x7a\x41\x04\x2b\xb9\x47\xfe\x17\xf4\x0f\xa2\x7a\x79\x47\x62\xc8\x96\xa0\xcb\x2e\x7e\x29\xa1\x2c\xed\x85\x8d\xb5\x44\x8d\x26\xbf\x71\x7c\xfa\x1f\x69\x90\xf5\xa7\xcf\xc9\x0f\x30\x81\x93\x74\x4c\x59\x81\x31\xbd\x76\x9c\xc2\x0e\x8c\xb7\x31\x04\xe3\x9f\xb0\x04\xe3\x8d\x4c\xc1\x38\x78\xdd\x99\xb0\x86\x99\xa8\x0c\xd9\x83\xd8\xc1\x84\xe9\x9e\x44\x1d\x46\xce\x4c\xca\xb2\x4c\xa6\xcb\x0d\xd0\x3f\x54\xb1\x1d\x38\x36\xb8\x8a\xd0\x46\xa2\x2d\x3d\x96\xd8\x4e\xec\xfa\x31\xf2\x63\xdf\x45\x2e\x71\x31\x0a\x5d\x3b\x41\x1e\x61\x8e\xef\xc4\xb1\x0f\x96\x35\xbc\x4a\xb4\x1a\xda\x8d\x6d\x99\x37\x2f\x70\x6c\x42\x4d\xd8\xfa\x97\xc1\x3e\x3e\x94\x93\x5a\xb7\x16\x5e\x2b\xbc\x4b\xb1\xdd\x09\xc5\xcb\x0e\x74\x07\xcf\xcb\x8a\xf5\x86\xa8\x4f\x7c\xdb\x32\x08\x2d\x0b\x98\xd4\xf2\x27\xc1\xca\xdc\x64\x83\x60\x1e\x29\xeb\xd9\x9d\xdc\x17\x7c\xa4\xe0\x70\x34\x86\xc8\x27\x55\xe7\x8d\xe4\x29\xcf\x49\x56\x75\xd1\xa1\x6a\x09\x0a\xe4\x73\xd5\xc2\xaf\x9f\x0f\xe7\xcf\x50\xeb\x2e\x13\x84\x95\x29\x57\x54\x0d\xbf\xa8\x9e\xcb\x08\x66\xa0\x47\x06\x1e\xb5\x90\x24\x85\xbd\xb0\xc8\x33\x9e\x8f\x84\xee\x88\xd2\x57\xe2\x6b\x5e\xaa\x39\xa9\xf1\xad\x81\x6e\x72\x4e\x49\xf6\x5e\x6b\xc9\xe3\x42\xc3\xdb\xe2\xd4\x78\x79\x27\x68\x3b\x68\xcd\x8d\xd6\x3b\x75\x71\x7e\xae\x85\xc8\xd4\x8a\x83\x4e\x56\x42\xa6\xe7\x1b\xbd\xcd\xce\x65\x42\x9d\x28\xf4\x67\x77\x7a\x9f\x11\x9d\x08\xb9\x1d\x76\x63\x35\x5c\x6c\x2b\x27\xb1\x23\x27\xf2\xb0\x85\xec\xd8\x66\xe5\xd0\xa2\x28\xb2\xa2\x00\x61\x46\x88\x17\x50\x1a\xfb\x76\xbf\x72\xc6\x6a\x96\x4d\xf5\x11\xa8\xad\x88\x9b\xf5\xfa\xfe\x88\xd8\xa5\x50\x8b\xee\x21\xcd\xa4\x2e\x47\x75\x46\xf2\xb4\x20\xe9\xfe\x0c\x4c\xe8\x3c\x31\x53\x49\x6b\x0a\x5e\x5e\x70\x4d\x2a\x9e\x41\xd6\xa2\xcd\x6d\x35\x05\xa1\x76\x44\x73\x92\x5d\xee\xd7\x66\xee\x53\x29\x88\xac\x39\xa6\x7b\xc1\xf3\xc9\xff\x49\x4a\x0e\xaa\x0b\x56\xa2\x3d\x6f\x15\x7a\x3e\xb6\xfc\x41\x6b\xc9\x44\x9e\xb6\x12\xc8\x5d\xd9\x91\xe7\x63\x77\xdf\x4b\xba\x0b\xf8\xd8\x56\xf6\x92\xf6\xee\xf5\x63\xbf\x26\xb6\xdd\x95\x8b\x6d\xdb\x0b\x7b\xfa\xe6\xcc\x07\x4e\xe4\x78\x4e\xbf\x3d\xbf\x5b\xa6\xdf\x5f\x61\xc7\x8e\x5c\xff\xa8\x7e\xbc\xf2\x7d\xcf\x77\xbc\xd3\xf5\xfb\xd6\x0a\x07\x41\xf8\xaa\x7e\xd7\x72\x43\x3f\x7c\x83\xff\xc1\xca\xc1\xae\xe5\x59\x47\xf5\x47\x2b\x27\x8a\x9c\x30\x7c\x75\x96\xf6\x4f\x2a\x23\x74\x41\x55\x50\x21\x4a\x06\x4e\x34\x3c\x40\x02\xb2\xa4\x12\x8f\x2f\x4a\x43\x59\xb8\xe6\xaf\x1f\x1f\x8d\xd0\x9d\xbf\xec\x6b\xd8\xee\x84\xdc\xa7\x69\xc5\x24\x1a\x2a\x60\x23\xec\x23\xcb\xe9\xb1\x88\x5e\xcf\x9a\x20\xaf\x73\x36\x60\x1f\xf6\x18\x67\x74\x77\xfc\x3f\x0b\x92\xf1\x84\xd7\x3b\x3c\x3a\xa0\x8c\x89\xf8\x91\x2e\x71\xf6\xe3\xec\xef\x00\x00\x00\xff\xff\x03\xbb\x39\xf9\xf5\x16\x00\x00")

func messagesBodyMetadataCreateThesis_dissertation_create_requestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataCreateThesis_dissertation_create_requestJson,
		"messages/body/metadata/create/thesis_dissertation_create_request.json",
	)
}

func messagesBodyMetadataCreateThesis_dissertation_create_requestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataCreateThesis_dissertation_create_requestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/create/thesis_dissertation_create_request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataDeleteReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x94\x41\x8b\x22\x31\x10\x85\xef\xf9\x15\x05\x5e\x14\xc6\x64\x0e\x7b\xf2\x26\xb6\x87\x1d\xd6\x19\x50\xe7\x24\x83\x49\x77\x4a\x3b\xd2\x9d\xea\x4d\xc5\x65\xfd\xf7\x4b\x4c\xb7\x20\x78\xd8\x85\xd9\xd3\x2e\xf4\xa1\x53\x2f\x79\x8f\x84\xaf\x6a\x04\x2b\x8c\xc6\x9a\x68\xa0\xc0\x06\x23\x0a\xb1\x42\x66\x73\x44\xd8\x5e\x3a\x9c\x81\x1e\xf4\x2c\x6b\x79\xd3\x17\x8d\x61\x9e\x81\x5e\x50\xdb\x1a\x6f\xb5\x14\xa2\x40\xae\x82\x2b\x91\xc1\xc0\xcb\xe6\xed\x15\x3a\x73\x69\xc8\x58\xa0\x03\xb4\x43\x0e\x1d\xc0\xc0\x6e\x8d\x8c\x26\x54\xf5\x5b\x79\xc2\x2a\x7e\x8c\xeb\x18\x3b\x9e\x29\x75\x74\xb1\x3e\x97\xb2\xa2\x56\xbd\x38\xae\xd6\xc5\x66\xa3\x16\xc6\x93\x77\x95\x69\xa6\xc9\x60\xda\x92\xc5\x46\x95\x0d\x95\xea\x8b\x7c\x96\xcf\xaa\x48\xd5\xd5\xb5\xfa\x68\xab\x6c\xed\x69\xf2\x04\xbb\x79\x88\xae\x6a\xf0\xf3\xb2\xc8\x47\xf4\x31\xaf\x58\xf5\xf6\xd3\xaa\x2f\xdf\x65\xa7\x63\x8c\x9f\x78\xcf\xfb\xec\xde\xfe\x41\x36\x50\x80\xdd\xb6\x46\x76\xfc\xb7\xc2\xb3\xfb\xa3\xec\x58\x9b\x08\x8e\xe1\x88\x1e\x83\x89\x68\xc1\x9e\x83\xf3\x47\x30\xa0\x8b\xe5\xb7\xe5\x76\xa9\x81\xba\x24\x39\xf2\x52\x88\xd1\x08\x36\x15\x7a\x13\x1c\xb1\x10\x53\xd8\xa0\x8f\x10\x09\xf8\x5c\x66\xb0\x02\xa7\xa5\xa7\xe8\x0e\x97\xec\x7e\xc3\xea\x40\xe1\x3f\x57\xff\x08\x57\xb5\x61\x28\x11\x3d\xd8\xeb\x50\xb2\x19\x9d\x35\x7e\x3f\x23\xc7\x04\xce\x40\x01\x64\x0c\x00\x7f\x9a\xb6\x6b\x70\x06\x3b\x1d\x7a\x69\x4f\x57\x69\x9f\x2d\xf6\x21\x1f\x96\x27\x26\xaf\x3f\xc6\xbf\xb1\x6b\x92\x00\xad\x6a\x6c\x4d\xb2\xe5\xeb\x1f\xab\x36\x4f\x47\x35\x70\xa9\x1e\xfb\x4b\xa9\x6e\xdf\x9f\x1c\x9d\x08\x31\xf6\xb2\x94\x30\x67\x88\x35\xde\x06\x6c\xa2\x3f\xd6\xc8\x08\xbd\x0b\x43\x45\x9e\x1d\x47\x4e\x03\x37\x6d\xd5\xf9\x2a\xef\xef\x5f\x0b\x3d\xd4\x72\x09\x4a\x4c\x4d\xd9\x3f\xe6\x13\x18\x3f\x3c\x58\x6a\xde\x2e\xd0\x0f\x67\xd1\x02\xf9\xe6\x72\x0d\xd2\xf7\x4d\xa6\xe5\xa4\x7f\x7f\xee\xc8\x33\x0a\xf1\xaa\xe6\x52\xfc\x0a\x00\x00\xff\xff\x83\xe3\x6b\x50\x5b\x06\x00\x00")

func messagesBodyMetadataDeleteReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataDeleteReadmeMd,
		"messages/body/metadata/delete/README.md",
	)
}

func messagesBodyMetadataDeleteReadmeMd() (*asset, error) {
	bytes, err := messagesBodyMetadataDeleteReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/delete/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataDeleteResearch_object_delete_requestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\xca\x4f\xca\x4a\x4d\x2e\x09\x0d\xf5\x74\x51\xb2\x52\x50\x4a\x4d\x36\x36\x33\x4b\x33\x32\xd7\x4d\x4b\x31\x31\xd6\x35\x31\x49\x4a\xd3\x4d\x32\x35\xb6\xd4\x35\x36\x36\xb0\x34\x37\x37\x4d\x31\x35\x37\x48\x52\xe2\xaa\xe5\x02\x04\x00\x00\xff\xff\xfe\x89\x03\x6c\x3b\x00\x00\x00")

func messagesBodyMetadataDeleteResearch_object_delete_requestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataDeleteResearch_object_delete_requestJson,
		"messages/body/metadata/delete/research_object_delete_request.json",
	)
}

func messagesBodyMetadataDeleteResearch_object_delete_requestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataDeleteResearch_object_delete_requestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/delete/research_object_delete_request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataReadReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x55\x41\x6f\x1a\x3d\x10\xbd\xef\xaf\x18\x29\x97\x20\x05\x3b\x87\xef\xc4\x2d\x82\xef\xd0\x48\x34\x15\x24\x27\x14\xb1\xb3\xeb\x81\x35\xda\xf5\x6c\x3c\xa6\x0d\xff\xbe\xf2\x7a\x97\x82\x8a\x94\xa6\x4a\x4f\xad\xc4\x01\xe6\xcd\xbc\x27\x3f\xbf\x31\x57\x30\xa7\x80\x06\x03\xc2\x82\xd0\x64\xd9\x9c\x44\x70\x4b\xf0\x78\x68\x69\x02\xf9\x80\x46\x30\x57\x47\x74\x5a\xa3\xc8\x04\xf2\x29\x37\x0d\xba\x88\x64\x33\x92\xd2\xdb\x82\x04\x10\xee\x97\x0f\x9f\xa1\xc5\x43\xcd\x68\x80\x37\xd0\x0c\x1a\xbc\x01\x84\xd5\x82\x84\xd0\x97\xd5\x43\xb1\xa3\x32\x3c\x5f\x57\x21\xb4\x32\xd1\x7a\x6b\x43\xb5\x2f\x54\xc9\x8d\xbe\xb7\x52\x2e\x66\xcb\xa5\x9e\xa2\x63\x67\x4b\xac\xc7\x91\x60\xdc\xb0\xa1\x5a\x17\x35\x17\xfa\x3f\x75\xab\x6e\xf5\x2c\x56\xe7\x5d\xf5\x52\xab\x6a\xcc\x6e\x74\x03\xab\x3b\x1f\x6c\x59\xd3\xc7\x69\xb1\x0b\xe4\x42\xfa\x25\xba\xa7\x1f\x97\x7d\xf9\x4c\x3b\x8e\x09\x7d\xe0\x39\xcf\xb5\x7b\xfa\x0b\xda\xc0\x1e\x56\x8f\x15\x89\x95\x3f\x25\x9e\xd8\x2f\x69\x87\x0a\x03\x58\x81\x2d\x39\xf2\x18\xc8\x80\xd9\x7b\xeb\xb6\x80\x90\x2f\xfe\xbf\x9b\xe5\xc0\x6d\x04\x2c\x3b\x95\x65\x57\x57\xb0\x2c\xc9\xa1\xb7\x2c\x59\x36\x86\x25\xb9\x00\xc5\x01\x64\x5f\xa4\x58\x79\x81\x6f\x15\x39\x08\x15\xfd\x88\xd3\x86\x3d\xa0\x03\x7a\xb5\x12\x22\xf5\xbf\x64\xfd\x0d\xc9\xb2\x02\x9e\x5e\xf6\xd6\x93\x49\xc9\x59\xd0\xcb\x9e\x24\xc4\xdc\x0c\x01\x80\x94\x00\xa0\x57\x6c\xda\x9a\x26\xb0\xca\x7d\x0f\xad\xb9\x83\xd6\x9e\xd0\xac\x7d\x1a\x55\x3b\x61\x97\x3f\x5f\xbf\xd9\x33\x8a\xd9\x2c\x2b\x6a\x30\x52\x4a\xf7\x4d\x74\x93\x9e\x45\x3d\x04\x53\x5f\xe2\x56\x4a\x1f\x3f\xbf\x3e\x38\xca\xb2\x6b\xa7\x0a\x05\x77\xd2\x65\x7f\x78\x55\x63\xf4\x43\x45\x12\xb7\xa1\xe3\x10\x28\xd9\x89\x95\x20\xf1\x95\x8d\xad\x79\x3a\xc4\xd3\xd3\xa7\xb8\x6c\xa9\x96\x4a\x50\x50\x5c\x97\x5e\x87\xcc\x4d\xda\xa2\xce\xaa\x68\x6f\xeb\xf9\xab\x35\x64\x80\x5d\x7d\xe8\xa4\xf2\xf3\xcd\xca\xd5\xa8\x77\x5e\x5a\x76\x42\xbf\x67\x7d\x9a\x7d\xc3\xfb\x93\xa6\xf7\x99\x7f\xce\xfe\x1e\xf7\xcf\x24\x7b\xfb\xbf\x24\xdf\xe5\x92\xf1\xe8\x09\xac\x21\x17\x62\xd0\xc1\xba\xd8\xd3\x40\x60\x08\x15\x0b\x25\xff\x86\x3f\xd2\xa9\x27\x0c\x94\x1f\x87\x6f\x40\x38\xd9\x8c\x3f\x99\x7c\xbc\xec\xd3\x2b\x41\x39\xb9\x2c\x35\xca\xbe\x07\x00\x00\xff\xff\xb9\xc4\xe3\x45\xc2\x07\x00\x00")

func messagesBodyMetadataReadReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataReadReadmeMd,
		"messages/body/metadata/read/README.md",
	)
}

func messagesBodyMetadataReadReadmeMd() (*asset, error) {
	bytes, err := messagesBodyMetadataReadReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/read/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataReadResearch_object_read_requestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\xca\x4f\xca\x4a\x4d\x2e\x09\x0d\xf5\x74\x51\xb2\x52\x50\x4a\x4d\x36\x36\x33\x4b\x33\x32\xd7\x4d\x4b\x31\x31\xd6\x35\x31\x49\x4a\xd3\x4d\x32\x35\xb6\xd4\x35\x36\x36\xb0\x34\x37\x37\x4d\x31\x35\x37\x48\x52\xe2\xaa\xe5\x02\x04\x00\x00\xff\xff\xfe\x89\x03\x6c\x3b\x00\x00\x00")

func messagesBodyMetadataReadResearch_object_read_requestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataReadResearch_object_read_requestJson,
		"messages/body/metadata/read/research_object_read_request.json",
	)
}

func messagesBodyMetadataReadResearch_object_read_requestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataReadResearch_object_read_requestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/read/research_object_read_request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataReadResearch_object_read_responseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\x5d\x73\xab\x36\x10\x7d\xf7\xaf\x60\x78\xbe\xba\x11\x98\x4f\x3f\xf5\x8e\x7d\xd3\xb8\x4d\x9a\x4c\xe2\xf4\xa5\x93\x07\x21\x2d\xb6\x5a\x8c\x3c\x92\xc8\xbd\x69\x26\xff\xbd\x03\x18\xc2\x97\x1d\x48\x33\x19\x0f\xa0\x3d\xda\xd5\x6a\xf7\x9c\x7d\x9d\x19\x86\x29\xa2\xbf\x81\xea\xc7\xc7\xf5\xca\x5c\x18\xa6\xeb\x05\x18\x02\xc0\xc8\x0e\x88\x8b\x9c\xc8\xc6\x28\x74\x02\x40\x31\xc3\x0c\x07\x7e\x60\x01\x8e\xcc\x2f\xef\xb8\x0d\xd7\x09\xe4\xc0\x6f\x46\x2c\x01\x0c\x0d\x3f\xb5\xa1\xb4\xe4\xe9\xb6\x69\x76\x07\x52\x89\xf4\x5e\x14\xb6\x7f\xcd\x0c\xc3\x30\x5e\x8b\x5f\xc3\x30\x0f\xc5\x9a\xb9\xa8\xbf\xd4\xdf\xaa\xa0\x6c\x3f\xb0\x2c\xe2\x50\x14\xd2\xc8\x45\x0e\x78\x0c\x11\xec\x85\xc8\xa5\x56\x68\x07\x41\x4c\xc0\x0d\x0a\x6f\x2d\xf4\x9a\x41\xaa\x79\xcc\x41\xd6\x3e\xcb\xbf\xd7\xc6\xf3\x80\xf5\x9f\x24\xc9\xce\x1d\xe9\x0c\x74\xf3\x72\x28\x90\xb7\xf7\xcb\xf5\xca\x6c\xd8\xbe\xd5\xcf\x4f\xbd\x38\xaf\x44\x2a\x24\x8f\x39\xbd\x93\x10\xf3\x9f\x1f\x7a\x3e\xc2\x7e\xe5\xcf\x90\xfe\x41\xf6\xa0\xc6\x22\x2e\xc9\x9e\x27\x2f\x93\x20\x75\x6c\x0f\x59\x3c\x21\xb6\x1b\xc2\x93\xdc\xb6\x7c\xfb\x25\x05\xdd\xb7\xb9\x95\x5b\x92\x72\x45\x34\x17\xe9\x63\xca\x75\xab\x00\xf2\xc2\xe9\xac\xd7\xc5\x10\x44\xe0\xc7\x96\x87\x30\xf8\x18\x39\x9e\x15\x23\x62\xb3\x08\xb1\x90\xf9\xd4\x73\x48\x10\x5b\x7e\xeb\x9e\x7a\x3b\xe5\x19\x18\x71\xbf\x2d\x5c\x27\xba\xce\xea\x6f\x5c\xd1\x35\x33\x17\x86\xf5\xe5\xb4\xd1\x48\xb7\x1d\x54\x55\x52\x3b\xbe\xdd\x81\xfc\xce\x32\x5a\xc6\x73\x06\xf2\x8d\x31\x09\xea\xd4\x1d\x0f\x56\x65\xf5\xf4\x56\x6d\x6b\xca\xb2\x57\x4d\x92\xe9\x9d\x90\x25\x2a\xb7\x7a\x6a\x74\xf5\x0a\x14\x95\xfc\x70\xcc\x4f\xa7\xad\xd9\xfb\xe2\xd9\x8e\x32\x06\x00\xd5\xa1\x49\xa4\xb4\x24\x54\x0f\xbb\xbf\xe7\xdb\x9d\x56\xf5\xcd\x98\xb2\x78\x7f\xd0\x44\xc3\x1e\x52\xdd\xe8\xfa\x93\x79\x38\x76\xe3\x11\x7a\x25\x12\xd6\x62\x8b\x0f\x71\x09\xa7\x90\x52\x68\x40\x1a\x24\x76\x5c\x1c\x75\xef\x95\x71\x8b\xb4\xc6\x40\x14\x3c\x68\x22\xf5\x8a\xe8\xc2\x89\x8d\xad\x00\x61\x0b\x61\x6b\x83\xf1\xa2\xf8\x47\xc5\xef\x00\xf0\x7b\xca\x5a\x30\xcb\x46\x73\x6b\x63\xcf\x17\x6e\xb8\x70\xc3\x23\x6c\xd6\x2c\x90\xea\xd8\x84\xd2\xb2\xc0\x06\x4e\x5d\xae\x55\x37\x28\x21\x8f\x9b\x6a\x60\xcd\x00\x4a\x9b\xe6\x4d\x9d\xa9\xd4\xa3\xeb\xd9\xb1\x3a\xab\xda\x2b\x23\xef\x16\x1d\xd1\x50\x57\x9b\x8d\xb1\x8d\x2c\x8c\xb0\xbd\xb1\xea\x5c\xb8\xcd\x5c\x14\xf6\x75\xb1\x51\x0a\x87\x3c\xd0\xc1\x62\xfb\x1d\x5e\x7e\x08\xc9\x6a\x97\x27\x02\x6e\x42\x96\x44\xc3\x56\xc8\x97\x29\x98\x7b\x50\x22\x93\x14\xde\xf3\x77\x10\x52\x37\xa5\xb4\x3e\x5e\x2a\xe4\x9e\x24\xcd\xa5\x01\xc5\xab\x33\xc3\x27\xe9\x5b\xc3\xbc\x8a\xe4\xf1\xfe\xfa\x44\x1b\x42\x42\x34\xb0\x71\xce\xdb\x32\x3f\x2d\xa8\xc1\xb0\x56\xb7\x6b\xb3\x4f\x5e\x79\x48\x0d\x1e\xa1\x5c\x83\x1a\x8e\xbe\x29\x43\xc3\xf3\xc9\x49\x19\xf8\x50\x02\xa6\xd3\xff\x44\xea\x9f\x4e\xfb\x7d\x82\xdf\x09\xa5\x79\xba\x5d\xa7\x4a\x73\x9d\x15\x0e\x06\x13\x75\xc9\x87\x92\x13\xf3\x04\x2a\x65\x06\xcb\xc5\xd4\x21\x11\xc2\xf3\x5c\x99\xc1\x25\x28\xf0\x6d\x1b\xf9\x71\x34\x9f\x7b\x61\xe4\xe3\x86\x32\x17\xc8\xd1\x6c\x57\x58\x8f\xc8\x60\x61\xf7\xc0\xff\x85\xe6\x45\x14\x1f\xaf\x49\x04\xc9\x18\x74\x4e\x2c\x4b\x09\x79\x49\x8f\x24\x91\x1c\xd5\xd1\x22\xe3\xbc\x1e\x9d\x21\x83\xf2\xaf\x39\x25\x9e\xd0\xa6\x49\x7b\xf4\x75\xca\xe8\x0f\xc2\x53\xf4\xca\xf8\x9c\x66\x19\xff\x47\xb7\x8c\x4f\x6a\x97\x71\x72\x00\xef\xe9\xd8\x40\x56\xda\x7a\x26\x0e\xd0\x9b\xbd\x26\xa9\x59\x27\x98\x5e\x5b\xe6\xc5\xb4\xdc\x01\xfd\x47\x65\xfb\x56\x60\xad\xe1\x98\x1e\x2d\xaa\xd6\x63\xb1\x3d\x8f\x1c\x2f\x42\x5e\xe4\x39\xc8\x21\x0e\x46\x81\x63\xc7\xc8\x25\x6c\xee\xcd\xa3\xc8\x03\xcb\x6a\x0f\xb7\xd5\x0e\xd5\xc1\xf6\xcc\x1d\x36\x38\xc7\xcc\xbd\xf9\xf1\xa9\x75\x8e\xcb\x5c\xa1\x74\xe5\xe1\xa3\xc6\x5b\x8a\xfd\x41\x28\x9e\x33\xd0\x35\x3c\x8f\x6b\xd6\x2b\xa2\x6e\xf8\xbe\x52\x4b\x2d\x33\xe8\xf5\xf2\x8d\x60\x79\x6d\xb2\x56\x32\xcf\xb4\xf5\xe0\x49\xee\x32\xde\xd9\xe0\x74\x36\xda\xc8\x47\x55\xd6\x8d\xe4\x5b\x9e\x92\xa4\x60\xd1\xf6\xd6\x12\x14\xc8\xe7\x82\xc2\xbf\x3f\x9f\xae\x9f\xf6\xae\x87\x44\x10\x96\x97\x5c\x56\x10\x7e\x56\xbc\xe7\x19\x4c\x40\x77\x1c\x3c\x68\x21\xc9\x16\xde\x8d\x45\x9a\xf0\xb4\x63\x74\x4d\x94\x5e\x89\x1f\x69\xbe\xcd\x24\xe2\xdb\x00\xdd\xa5\x9c\x92\xe4\x9b\xd6\x92\x47\x99\x86\xcf\xe5\xe9\x18\xe5\xb5\xa0\x95\xd0\x9a\x3b\xad\x0f\x6a\x71\x71\xa1\x85\x48\xd4\x57\x0e\x3a\xfe\x2a\xe4\xf6\x62\xa7\xf7\xc9\x85\x8c\xe9\x3c\x0c\xbc\xc1\x93\xde\x25\x44\xc7\x42\xee\xdb\x6c\xac\xda\x8b\x55\xe7\xc4\x76\x38\x0f\x5d\x6c\x21\x3b\xb2\x59\x2e\x5a\x14\x85\x56\xe8\x23\xcc\x08\x71\x7d\x4a\x23\xcf\x6e\x76\x4e\x77\x9b\x71\xaa\xde\x01\x55\x1d\x71\xb5\xd9\xdc\x9d\x31\x5b\x0a\x35\x6a\x34\x2e\x94\x7a\xf6\x36\xfb\x2f\x00\x00\xff\xff\xc4\x5a\x23\xe0\xcf\x11\x00\x00")

func messagesBodyMetadataReadResearch_object_read_responseJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataReadResearch_object_read_responseJson,
		"messages/body/metadata/read/research_object_read_response.json",
	)
}

func messagesBodyMetadataReadResearch_object_read_responseJson() (*asset, error) {
	bytes, err := messagesBodyMetadataReadResearch_object_read_responseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/read/research_object_read_response.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataUpdateReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x54\x41\x6b\xe3\x3c\x10\xbd\xeb\x57\x0c\xf4\xd2\x40\x23\xf5\xf0\x9d\x72\x0b\xc9\x77\x29\xa4\x2d\x49\x7a\x0a\x25\x1e\x5b\x93\x58\xc1\xd6\x78\x35\xca\xb2\xf9\xf7\x8b\x2c\xc7\x10\xc8\x61\x17\xba\xa7\x5d\xf0\xc1\xd2\xd3\x7b\x0f\xcb\x6f\xde\x03\xac\x28\xa2\xc5\x88\xf0\xd1\x59\x8c\xa4\xd4\x8a\x44\xf0\x48\xb0\xbd\x74\x34\x83\xe2\x8a\x67\xb8\xd0\x23\xbe\x68\x50\x64\x06\xc5\x82\xdb\x16\xbd\x2d\xb4\x52\x4b\x92\x2a\xb8\x92\x04\x10\x5e\x36\x6f\xaf\xd0\xe1\xa5\x61\xb4\xc0\x07\x68\xaf\x3e\x7c\x00\x84\xdd\x9a\x84\x30\x54\xf5\x5b\x79\xa2\x2a\x7e\x3e\xd6\x31\x76\x32\x33\xe6\xe8\x62\x7d\x2e\x75\xc5\xad\x79\x71\x52\xad\x97\x9b\x8d\x59\xa0\x67\xef\x2a\x6c\xa6\x49\x60\xda\xb2\xa5\xc6\x94\x0d\x97\xe6\x3f\xfd\xac\x9f\xcd\x32\xed\xae\xfa\xdd\x7b\x47\x75\x6b\x4f\x93\x27\xd8\xcd\x43\x74\x55\x43\x5f\xe7\xc5\x3e\x92\x8f\x79\x25\x66\x90\x9f\x56\xc3\xf6\x8d\x77\xa2\x09\x7d\xe1\x77\xde\x7a\x0f\xf2\x77\xbc\x81\x03\xec\xb6\x35\x89\x93\x3f\x65\x9e\xd5\xef\x79\xc7\x1a\x23\x38\x81\x23\x79\x0a\x18\xc9\x82\x3d\x07\xe7\x8f\x80\x50\x7c\xbc\x2f\xe7\xdb\xff\x0b\xe0\x2e\x41\x8e\xbd\x56\xea\xe1\x01\x36\x15\x79\x0c\x8e\x45\xa9\x29\x6c\xc8\x47\x88\x0c\x72\x2e\x73\xb0\x82\xa4\xa5\xe7\xe8\x0e\x97\xac\x3e\xc6\xea\xc0\xe1\x5f\xae\xfe\x92\x5c\xd5\x28\x50\x12\x79\x38\xf7\xa5\x64\x73\x74\xd6\xf4\xed\x4c\x12\x53\x70\xae\x29\x80\x1c\x03\xa0\x1f\xd8\x76\x0d\xcd\x60\x57\x84\x01\xda\x73\x0f\xed\xb3\xc4\x3e\x64\xb2\x3e\x09\xfb\xe2\xf3\xf1\x17\x4e\x4d\x52\x40\xab\x9a\x5a\x4c\xb2\xd2\xbf\x89\x69\x73\x3b\x9a\x6b\x2e\xcd\x7d\x7d\xad\xcd\xf8\xfc\x0e\x75\xa2\xd4\xa3\xd7\xa5\x86\xf7\xdc\xac\xd2\xe7\x3e\xd6\x24\x04\x03\x5f\x00\x03\x81\xb3\xe4\x63\xba\x76\x70\x3e\x9d\x69\xd3\xe0\xc4\x9a\x85\x7a\xc6\x58\xeb\x8b\x40\xa9\xd6\x47\xf2\x13\x08\x03\xfb\xe6\x92\x66\xf4\x76\x98\x8a\xb1\xce\x9d\x40\x17\xf8\xbb\xb3\x64\x01\x05\xd0\x5f\x2f\x58\x4f\x86\x3f\x21\x1d\x7b\x21\xa5\x5e\xcd\x5c\xab\x9f\x01\x00\x00\xff\xff\x42\xcf\x1f\x00\x65\x06\x00\x00")

func messagesBodyMetadataUpdateReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataUpdateReadmeMd,
		"messages/body/metadata/update/README.md",
	)
}

func messagesBodyMetadataUpdateReadmeMd() (*asset, error) {
	bytes, err := messagesBodyMetadataUpdateReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/update/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataUpdateResearch_object_update_requestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\xdf\x73\xa3\x36\x10\x7e\xf7\x5f\xc1\xf0\x7c\xba\x08\x0c\x18\xfc\xd4\x1b\xfb\xd2\xb8\x4d\x9a\x4c\xe2\xf4\xa5\x93\x07\x21\x2d\xb6\x5a\x8c\x3c\x92\xc8\x5d\x9a\xc9\xff\xde\x01\x1b\x22\x7e\xd8\x81\x34\x93\xf1\x00\xda\x4f\xbb\x5a\xed\x7e\xdf\xbe\x4e\x2c\xcb\x16\xf1\xdf\x40\xf5\xe3\xe3\x6a\x69\xcf\x2d\xdb\x0f\x42\x0c\x21\x60\xe4\x86\xc4\x47\x5e\xec\x62\x14\x79\x21\xa0\x84\x61\x86\xc3\x59\xe8\x00\x8e\xed\x2f\xef\xb8\x35\xd7\x29\x14\xc0\x6f\x56\x22\x01\x2c\x0d\x3f\xb5\xa5\xb4\xe4\xd9\xc6\x34\xbb\x03\xa9\x44\x76\x2f\x4a\xdb\xbf\x26\x96\x65\x59\xaf\xe5\xaf\x65\xd9\xfb\x72\xcd\x9e\xd7\x5f\xea\x6f\x55\x50\xee\x2c\x74\x1c\xe2\x51\x14\xd1\xd8\x47\x1e\x04\x0c\x11\x1c\x44\xc8\xa7\x4e\xe4\x86\x61\x42\xc0\x0f\x4b\x6f\x0d\xf4\x8a\x41\xa6\x79\xc2\x41\xd6\x3e\x0f\x7f\xaf\xc6\x73\x8f\xf5\x9f\x24\xcd\xcf\x1d\xe9\x0c\x74\xfd\xb2\x2f\x91\xb7\xf7\x8b\xd5\xd2\x36\x6c\xdf\xea\xe7\xa7\x4e\x9c\x57\x22\x13\x92\x27\x9c\xde\x49\x48\xf8\xcf\x0f\x3d\x1f\x61\xbf\xf2\x67\xc8\xfe\x20\x3b\x50\x43\x11\x97\x64\xc7\xd3\x97\x51\x90\x3a\xb6\x87\x3c\x19\x11\xdb\x0d\xe1\x69\x61\x7b\x78\xfb\x25\x03\xdd\xb5\xb9\x95\x1b\x92\x71\x45\x34\x17\xd9\x63\xc6\x75\xa3\x00\x8a\xc2\x69\xad\xd7\xc5\x10\xc6\x30\x4b\x9c\x00\x61\x98\x61\xe4\x05\x4e\x82\x88\xcb\x62\xc4\x22\x36\xa3\x81\x47\xc2\xc4\x99\x35\xee\xa9\xb3\x53\x91\x81\x01\xf7\xdb\xc0\xb5\xa2\x6b\xad\xfe\xc6\x15\x5d\x31\x7b\x6e\x39\x5f\x4e\x1b\x0d\x74\xdb\x42\x55\x25\xb5\xe5\x9b\x2d\xc8\xef\x2c\xa7\x87\x78\xce\x40\xbe\x31\x26\x41\x9d\xba\xe3\xde\xaa\xac\x9e\xde\xaa\x6d\x6d\x79\xe8\x55\x9b\xe4\x7a\x2b\xe4\x01\x55\x58\x3d\x19\x5d\xbd\x04\x45\x25\xdf\x1f\xf3\xd3\x6a\x6b\xf6\xbe\x38\xa4\xa3\x4c\xfb\xea\xcc\x24\x56\x5a\x12\xaa\xfb\xbd\xdf\xf3\xcd\x56\xab\xfa\x62\x6c\x59\xbe\x3f\x68\xa2\x61\x07\x99\x36\x9a\xfe\x64\x1a\x8e\xcd\x78\x84\x5e\x89\x94\x35\xc8\xe2\x43\x5c\xca\x29\x64\x14\x0c\x88\xc1\x61\xc7\xc5\x41\xd7\x5e\x19\x37\x38\x6b\x08\x44\xc1\x83\x26\x52\x2f\x89\x2e\x9d\xb8\xd8\x09\x11\x76\x10\x76\xd6\x18\xcf\xcb\x7f\x54\xfe\xf6\x00\xbf\x67\xac\x01\x73\x5c\x34\x75\xd6\xee\x74\xee\x47\x73\x3f\x3a\xc2\x26\x66\x7d\x54\xc7\x26\x94\x1e\xea\xab\xe7\xd4\x87\xb5\xea\x06\x25\x14\x71\x53\x0d\xcc\x0c\xe0\x60\x63\xde\xd4\x99\x42\x3d\xba\x9e\x1c\x8b\xb3\x2a\xbd\x43\xe4\xed\x9a\x23\x1a\xea\x62\x73\x31\x76\x91\x83\x11\x76\xd7\x4e\x9d\x0b\xdf\xcc\x45\x69\x5f\x17\x1b\xa5\xb0\x2f\x02\xed\x2d\xb6\xdf\xe1\xe5\x87\x90\xac\x76\x79\x22\x60\x13\xb2\x20\x1a\x36\x42\xbe\x8c\xc1\xdc\x83\x12\xb9\xa4\xf0\x9e\xbf\xbd\x90\xda\x54\xd2\xfa\x78\x99\x90\x3b\x92\x9a\x4b\x3d\x82\x57\x67\x86\x8f\x92\x37\xc3\xbc\x8a\xe4\xf1\xfe\xfa\x44\x1b\x42\x4a\x34\xb0\x61\xce\x9b\x2a\x3f\x2e\xa8\xde\xb0\x96\xb7\x2b\xbb\xcb\x5d\x45\x48\x06\x8f\x50\xae\x41\xf5\x47\x6f\xaa\x50\xff\x78\x72\x52\x05\x3e\x54\x80\xf1\xec\x3f\x92\xf9\xc7\xb3\x7e\x97\xdf\xb7\x42\x69\x9e\x6d\x56\x99\xd2\x5c\xe7\xa5\x83\xde\x44\x5d\xf2\xbe\xe4\x24\x3c\x85\x4a\x98\xc1\xf1\x31\xf5\x48\x8c\xf0\xb4\x10\x66\xf0\x09\x0a\x67\xae\x8b\x66\x49\x3c\x9d\x06\x51\x3c\xc3\x86\x30\x97\xc8\xc1\x6c\x57\x5a\x0f\xc8\x60\x69\xf7\xc0\xff\x05\xf3\x22\xca\x8f\xd7\x24\x86\x74\x08\xba\x20\x96\x85\x84\xa2\xa4\x07\x92\x48\x81\x6a\x69\x91\x75\x5e\x8f\xce\x90\xc1\xe1\xcf\x1c\x12\x4f\x68\xd3\xa8\x3d\xba\x3a\x65\x75\xe7\xe0\x31\x7a\x65\x7d\x4e\xb3\xac\xff\xa3\x5b\xd6\x27\xb5\xcb\x3a\x39\x7f\x77\x74\xac\x27\x2b\x4d\x3d\x13\x7b\xe8\x8c\x5e\xa3\xd4\xac\x15\x4c\xa7\x2d\x8b\x62\x5a\x6c\x81\xfe\xa3\xf2\x5d\x23\xb0\xc6\x6c\x4c\x8f\x16\x55\xeb\xb1\xc4\x9d\xc6\x5e\x10\xa3\x20\x0e\x3c\xe4\x11\x0f\xa3\xd0\x73\x13\xe4\x13\x36\x0d\xa6\x71\x1c\x80\xe3\x34\x67\xdb\x6a\x87\xea\x60\x3b\xe6\xf7\x1b\x9c\x63\xe6\xce\xf8\xf8\xd4\x38\xc7\x65\xa1\x50\xba\xf2\xf0\x51\xe3\x2d\xc4\x6e\x2f\x14\x2f\x18\xe8\x1a\x9e\x87\x35\xeb\x15\x51\x37\x7c\x57\xa9\xa5\x96\x39\x74\x7a\xf9\x46\xb0\xa2\x36\x59\x23\x99\x67\xda\xba\xf7\x24\x77\x39\x6f\x6d\x70\x3a\x1b\x4d\xe4\xa3\x3a\xd4\x8d\xe4\x1b\x9e\x91\xb4\x64\xd1\xe6\xd6\x12\x14\xc8\xe7\x92\xc2\xbf\x3f\x9f\xae\x9f\xe6\xae\xfb\x54\x10\x56\x94\x5c\x5e\x12\x7e\x5e\xbe\x17\x19\x4c\x41\xb7\x1c\x3c\x68\x21\xc9\x06\xde\x8d\x45\x96\xf2\xac\x65\x74\x4d\x94\x5e\x8a\x1f\x59\xb1\xcd\x28\xe2\x5b\x03\xdd\x66\x9c\x92\xf4\x9b\xd6\x92\xc7\xb9\x86\xcf\xe5\xe9\x18\xe5\xb5\xa0\x95\xd0\xda\x5b\xad\xf7\x6a\x7e\x71\xa1\x85\x48\xd5\x57\x0e\x3a\xf9\x2a\xe4\xe6\x62\xab\x77\xe9\x85\x4c\xe8\x34\x0a\x83\xde\x93\xde\xa5\x44\x27\x42\xee\x9a\x6c\xac\x9a\x8b\x55\xe7\x24\x6e\x34\x8d\x7c\xec\x20\x37\x76\x59\x21\x5a\x14\x45\x4e\x34\x43\x98\x11\xe2\xcf\x28\x8d\x03\xd7\xec\x9c\xf6\x36\xc3\x54\xbd\x05\xaa\x3a\xe2\x6a\xbd\xbe\x3b\x63\xb6\x10\x6a\xd0\x68\x5c\x2a\xf5\xe4\x6d\xf2\x5f\x00\x00\x00\xff\xff\x61\xfe\x07\x32\xce\x11\x00\x00")

func messagesBodyMetadataUpdateResearch_object_update_requestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataUpdateResearch_object_update_requestJson,
		"messages/body/metadata/update/research_object_update_request.json",
	)
}

func messagesBodyMetadataUpdateResearch_object_update_requestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataUpdateResearch_object_update_requestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/update/research_object_update_request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyPreservationReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\x4f\x6b\xdc\x3e\x14\xbc\xfb\x53\x3c\xc8\x65\x17\xb2\x52\x0e\xbf\xd3\xde\x42\x92\xc3\x2f\x90\x3f\xec\xe6\xb6\x84\xf8\x59\x7a\x6b\x6b\x6b\x3f\xb9\x7a\x52\xda\xfd\xf6\x45\x72\xb6\xb8\x34\x25\x50\x7a\x08\xf8\x60\x0f\xe3\xf1\xcc\x78\xd0\x19\x3c\x06\x12\x0a\xaf\x18\x9d\x67\xb8\x79\x25\x8e\x55\x75\x47\x22\xd8\x12\x3c\x1d\x47\x5a\x43\x3d\xa7\x14\x46\xad\x7e\x52\xae\x7a\x14\x59\x43\x7d\xc2\xab\x4b\xb8\xdd\x3e\xdc\xc3\x88\xc7\xde\xa3\x05\xe3\x59\x9c\x44\xc7\x2d\xf8\x3d\x20\xc3\xee\x7f\xde\xfb\x30\x14\xb1\x47\x34\x5f\xb0\xa5\xe7\x45\x17\xe3\x28\x6b\xad\x5b\x17\xbb\xd4\x28\xe3\x07\x7d\xeb\xc4\x6c\xae\xb7\x5b\x7d\x85\xec\xd9\x19\xec\x57\x16\x23\xae\x06\x6f\xa9\xd7\x4d\xef\x1b\xfd\x9f\xba\x50\x17\xfa\x3a\xa3\x77\x05\x9d\x49\xaf\xde\xb4\x7f\xc1\xc6\x09\x9b\x34\xd4\x60\x0f\xcb\x73\xf8\xd6\x39\xd3\x81\x25\x31\xc1\x35\x24\xd9\x22\xe5\x2c\x60\x53\xc8\xae\x63\x47\x30\xce\x3b\x9a\x62\xf8\xe6\x40\x26\xc2\x82\x54\xab\x00\x61\xb7\x21\x21\x0c\xa6\x7b\x28\xf8\x3f\x4b\xf4\x1e\xb5\x18\x5f\xaa\xaa\x3a\x3b\x83\xad\x21\xc6\xe0\xbc\x54\xd5\x0a\xb6\xd9\x76\xf4\x20\xa9\x99\xd2\x04\xc9\x8f\xec\xa3\xdb\x1f\x73\x90\x21\x9b\x2f\xe9\x04\xbc\x31\x29\x94\x84\x9f\x3d\x28\x3c\x75\x04\xfb\xd4\xf7\x10\x90\x5b\xca\xbe\x24\x8d\xa3\x0f\x91\xec\x29\x8d\x41\x86\x86\x60\xef\x13\x5b\x48\x6c\x29\xbc\x33\xdb\x3c\xe7\x1a\x1c\xc3\xae\x16\xd3\xd1\x80\xa2\x89\xd3\x40\xa1\x50\xd4\x41\x3c\xd7\xcf\x0b\xa5\xf4\x74\xfd\x89\xb3\x3c\x07\x64\x0b\x18\x08\xac\x37\x69\x20\xce\x46\x1c\x97\x06\x3f\xd7\xbc\x61\xba\x2d\x53\xd9\xd0\xd7\x44\x12\xf3\x50\x6e\xbe\xe3\x30\xf6\xb4\x86\x5d\x3d\xff\xe3\x2f\xa5\xcc\x97\x30\x11\x4f\x7d\x7c\xc0\x58\xe6\xe1\x95\xa6\xd6\xb3\x5e\x87\xe9\x78\xd0\xf3\x97\xf5\xc7\xdf\xfa\xad\xfb\xbf\xd1\x59\xbe\xc5\x95\xd1\xb3\x50\x55\xdd\xeb\x4b\x55\xfd\x08\x00\x00\xff\xff\x09\x35\x06\x5b\xe9\x04\x00\x00")

func messagesBodyPreservationReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyPreservationReadmeMd,
		"messages/body/preservation/README.md",
	)
}

func messagesBodyPreservationReadmeMd() (*asset, error) {
	bytes, err := messagesBodyPreservationReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/preservation/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyPreservationPreservation_event_requestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xbf\x4e\xc3\x30\x1c\x84\xf7\x3c\x85\xe5\x19\x4b\x4e\x9a\x04\xb7\x1b\x22\x0c\xdd\x32\x50\xf6\x9f\xe3\x73\x65\x28\x4e\xe4\x98\x8a\x3f\xea\xbb\x23\x87\x66\x08\x22\x8c\x3e\x7f\x9f\xcf\xf7\x95\x31\xc6\x07\xea\x5e\xe8\x88\xc3\x61\xdf\xf0\x1d\xe3\x55\xad\x24\x14\xa4\x28\x14\x55\xa2\xd4\x85\x14\xdb\x52\x41\x58\x23\x8d\x54\xb7\x2a\x87\xd4\xfc\x26\x89\xbd\x7e\x46\x17\x67\x4f\x92\x2c\xf2\xce\x6e\x84\xa5\xca\x8a\x52\xab\x5a\x90\x96\x5b\x51\x6f\x4a\x6d\x2a\x83\x9c\xb4\xf9\xf1\xae\x85\x8f\x1f\x03\x92\x78\xb7\x6f\x17\xf9\x7d\xef\x23\x39\x8f\x30\x03\x9f\x6e\x58\x00\x0d\xc6\x2e\xb8\x21\xba\xde\x4f\x3e\xb3\x01\x60\x11\xef\x91\x8d\x31\x38\x7f\x5c\xd0\x6d\xc0\x88\x70\xa6\x84\x3f\x9c\xe1\x23\xdf\xb1\xb4\x3b\x11\xbf\xaf\x9e\xe8\xf4\x86\x7f\xde\xfc\xcb\x99\x7f\xe9\xbc\xed\xc3\xeb\x94\xb7\xd7\x21\x01\xd3\x71\x55\x6d\x10\xc9\x9d\x56\xfa\x32\xc6\x2e\xd9\x25\xfb\x0e\x00\x00\xff\xff\xa4\xdc\xa8\x75\xa3\x01\x00\x00")

func messagesBodyPreservationPreservation_event_requestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyPreservationPreservation_event_requestJson,
		"messages/body/preservation/preservation_event_request.json",
	)
}

func messagesBodyPreservationPreservation_event_requestJson() (*asset, error) {
	bytes, err := messagesBodyPreservationPreservation_event_requestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/preservation/preservation_event_request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesExample_messageJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x5d\x6f\xdb\x36\x14\x7d\xcf\xaf\x10\xf4\x5c\x3a\xa4\xbe\xe5\xa7\x75\xc9\xba\x64\x6b\xd7\x20\x1f\x7b\x29\x8a\xe2\x8a\xbc\xb2\xd9\x4a\xa2\x47\xd2\x59\xb2\x21\xff\x7d\x90\x2c\xd9\x92\x6a\x0b\xca\xde\x06\x0c\x08\x92\x98\x3c\x87\x3c\xbc\x3c\xbc\xf7\xfa\xef\x33\xc7\x71\x4b\x34\x06\x56\x78\x85\x20\x50\xbb\x4b\xa7\x1e\x3c\x0c\x5f\x0b\x77\xe9\xb8\xe8\x03\x4b\xf2\x20\x21\x29\xe7\x39\x09\xc2\x28\x23\x69\xc4\x43\x12\x27\x01\x60\x82\x88\x91\x2f\xdc\x37\x03\xe2\x45\x01\xc6\xd4\xdc\x0b\x55\x96\x50\x8d\xa7\xef\x9f\x37\x58\xcf\x7e\x40\x0b\x02\x2c\x5c\x68\x04\x8b\x1d\x48\xa3\xdd\xea\xea\xad\x10\x1a\x77\x8b\xbc\x75\x72\x8d\xe8\x58\x7c\xb2\x8e\xb1\x5a\x56\xab\xf1\x7a\xb2\x94\xd5\xca\xec\xf5\x3b\x8e\xbb\xd9\x66\x85\x34\x6b\x14\xf7\xb2\x44\x63\xa1\xdc\xd4\x2b\x79\x94\x06\x84\x26\x84\xb2\x7b\x46\x97\xb4\xfe\x21\xcd\xef\x76\x41\xc7\x71\xf1\x69\x23\x35\x58\xa9\xaa\x99\xcc\x86\xf8\x32\x14\x74\x87\x7f\x6c\xb1\xe2\xd8\x57\x64\x0e\x63\x6e\x16\x45\x19\x32\xee\x11\x8c\x18\x25\x41\xc4\x90\x64\x3c\x48\x09\x0b\x20\xf0\x38\xcd\x42\xe1\x05\x07\x49\x1b\x65\x64\x2d\xc8\x5d\x3a\x6c\x3f\x68\x95\x85\xa2\x1e\x39\xb6\xff\x95\x34\x56\xe9\x67\x77\xe9\x7c\x6a\xf1\x9d\x8c\x1a\x03\x7c\x2d\xab\xf6\x72\x4f\xc6\xb6\x0f\xed\xdd\x45\x3b\xb2\xc0\x27\x28\x37\x05\x2e\xb8\x2a\xfb\x04\xfb\x8a\x98\x39\xce\x4b\xf3\xf7\x73\xab\xfd\x11\xb5\xd9\x9d\xd2\x0d\x16\x74\xd1\xdd\x89\xbb\xc2\x0a\x35\x58\xa5\xa7\xbd\x60\xb1\x82\xca\xfe\x22\x0d\xbf\xbe\x74\x97\x8e\x77\xd6\x46\xa5\x8b\xc9\x8f\x4a\x3c\x1f\x1c\xae\xb2\xaf\xc8\xed\xc3\x43\x83\x75\xc3\x28\xa1\x98\x20\x25\x5e\x02\x21\x09\x32\x8f\x92\x34\x48\x90\xe4\x82\x0a\x9a\xc4\x09\x43\x9a\x75\xfb\xec\x98\xf7\xd2\x16\x38\x2d\x68\x07\xbc\x41\x6d\x54\x75\xab\x1a\xf4\x91\xdb\xd8\x34\xf3\x3d\xa3\xf4\x46\x3b\x79\x82\xa5\x0c\x32\xe4\x24\x66\xb9\x20\x01\xa3\x48\xd2\xd4\x4b\x89\x9f\xb1\x44\xa4\x7e\x98\xc4\x19\xef\xdd\xc2\x9e\x7f\x2d\xb0\xb2\x32\x97\xcd\xd3\xfe\xd4\x9b\x77\x06\xbb\x1d\x65\xfc\x0e\xc5\x76\xfa\x80\x13\xe4\xee\x81\x6b\x34\x08\x9a\xaf\x51\x5f\x5f\xba\x03\xd2\x4b\xef\xd3\xe7\x23\xd2\xaf\x54\xa5\xb4\xcc\x25\xbf\xd1\x98\xcb\xa7\x19\x42\x5a\xe2\xcf\xf2\x11\xab\xdf\xa0\xc4\xe9\xd4\x31\xe0\xbc\x83\x52\x16\xcf\xaf\x24\xed\x15\xde\x6d\xf3\x57\x29\xfc\x00\xb2\x68\xf2\x6a\x09\xb2\xf8\x02\xbb\xb7\xf5\xc3\x57\x69\xf8\x02\xf8\x62\xfb\xed\x10\xa8\x97\xde\xcb\xd2\x3b\x07\xb9\xb0\xb5\x6b\xa5\xf7\x2f\xe8\xcd\xbf\x73\x94\x17\x27\x8c\x41\xc0\x49\xca\xb3\x90\x04\x18\x09\x02\x34\x4a\x49\xc8\x59\xea\x25\x49\x0e\x18\x26\xff\x3b\xea\xbf\xe6\x28\xf8\x52\xe0\x4a\x5a\x59\x82\xc5\x2f\x27\xed\x75\x64\x81\x8f\x7a\x05\x95\x34\x4d\xd9\x7b\xa8\xa4\x1d\x99\xa7\x4e\x66\x23\xc4\xde\x48\x49\x86\x71\xce\x22\x42\x31\x6e\x2a\x59\x4e\xc0\x13\x19\x11\xa9\x88\x79\x14\x40\x92\xb3\x78\x74\xbb\xdf\xad\x55\x87\x69\x96\x2f\x06\xcc\xef\x34\x8e\xe6\x9b\x4a\x20\xfa\x35\xf3\x28\x6c\xf6\xe6\x23\x5e\x67\xc8\x8d\x56\x39\x9a\xba\x70\x41\xd1\x94\x98\x49\xd6\x74\x57\x73\xd2\xcf\x2f\x93\x29\x01\x85\xb4\xbd\x94\x30\x28\xaa\xbb\x22\x74\x89\x86\x6b\xb9\x69\xc3\x76\xa4\x0a\x89\x03\x60\xde\x33\xed\x33\xba\x50\xf4\x86\xa6\xc4\xdc\xca\xd5\xda\x0e\x9a\x35\xdd\x8c\xdc\x59\xb0\x58\x62\x65\x07\xa9\x65\x22\x4e\xfb\x57\xde\x2e\x70\xa5\x0a\x31\x4a\x4c\xb3\xd8\x85\xe4\x6d\x63\x76\x20\x0e\x72\x67\x0b\x98\x69\x95\x0e\x3e\xc8\x95\xf3\x48\x06\xef\x2c\x68\x7b\x59\x77\xc3\x4d\x03\xc5\xea\xee\xa9\x6e\xa0\xe8\xf1\x76\xb5\x4f\xfd\xa9\x12\x03\x22\xf3\x88\xcf\xee\x3d\x7f\x19\xa6\xcb\x30\x1d\x76\x5e\x07\x4b\x1d\xc2\x00\x9c\xef\xac\x79\x22\x0a\xbb\xf9\xee\xb2\xd5\x06\xab\xa1\x8c\xdd\x7c\xff\x16\x27\x3d\xbe\x17\x30\x68\x60\x5b\xbf\xee\xce\x71\xcc\xa8\x60\x71\xef\x50\x8f\x52\x8f\x30\x4a\xa8\xd7\x6b\x30\xc3\x61\x7c\x1a\x46\x27\x9a\x37\x5f\x34\xc4\x94\x3b\x7f\xc5\xe7\x3f\x95\x16\xbd\xdd\x4f\x9e\x62\x48\xbc\x00\x8b\xab\x61\xd3\x3d\x93\x79\x8b\x46\x6d\x35\xdf\xab\xac\xe1\xc3\x26\x72\x7f\xe2\xb5\x5c\xad\x87\x53\x47\x2b\x72\x2f\x60\xf2\x95\xf5\xb7\x47\xe8\xf4\x3c\xdc\xbe\x9f\x7c\xcf\x58\xd4\x41\x9d\x2f\x64\xdc\x9a\xbc\x56\xe2\x51\x91\x97\x1f\xaf\x4f\x34\x4e\xb5\xbc\x5e\x96\xe2\xd2\xa2\x99\x3a\x4f\xbf\x18\x9e\xee\xdb\x27\x4a\xd1\x8c\x32\x34\xb7\x04\x4d\xe6\x7d\xb3\x51\x95\x99\x4e\xfc\xef\xe4\x29\xfd\xb9\x2c\xb0\x2b\xe2\xc8\x42\xca\x03\xc8\x08\xf5\xeb\x22\x8e\x21\x90\x24\xf6\x3c\x12\xe7\x99\xef\x47\x69\x16\xd3\x41\x11\x6f\xb8\xaf\xc8\x6e\x0d\x7e\x56\xf2\x6c\x90\x77\xf2\xaf\x1a\x19\x27\x29\xf3\xbd\xd1\xdc\xc5\x1a\xf9\x37\xb3\x2d\x47\xdd\xe7\xa8\x59\xe1\x2d\x6a\xff\xfd\x29\xf7\xfc\x2c\x88\x32\x12\x65\x51\x40\x02\x08\x28\x49\x02\x2f\x27\x21\x08\x3f\xf2\xb3\x2c\x42\xc6\xc6\xad\x46\xb7\x46\x67\x9b\x52\x84\xa7\x20\x53\xae\x3d\x5a\xc4\x3f\x8f\x4f\xa5\xca\xee\x3b\xfe\x7b\x7c\xc4\x62\x5e\x9c\xea\x24\xf9\x41\x89\xfa\x0e\xc4\x28\x1e\x13\x99\xf1\xa4\x88\x07\xb3\x33\x15\xea\x47\xc9\xb1\x31\xce\x18\xb1\x29\x14\x88\x3a\xc1\x6f\x9b\x0e\x66\xdb\x7d\xd6\x75\x4e\x1d\xdf\xa2\x55\x1a\x56\x78\x40\xab\xaa\x90\xd5\x77\x6b\xb6\xb0\xf7\x8a\x77\x2f\xc9\x5d\x5b\xbb\x31\xcb\xf3\x73\xab\x54\x61\x16\x12\x6d\xbe\x50\x7a\x75\xbe\xb6\x65\x71\xae\x73\xee\xa7\x49\x74\x62\x95\x9b\x02\x6c\xae\x74\x39\x7e\x8f\x66\x38\xdd\xd9\x22\xf7\x52\x3f\x0d\x29\x23\x5e\xe6\x89\xda\xf6\x9c\xa4\x2c\x8d\x09\x15\x00\x61\xcc\x79\x16\x79\x43\x5b\x8c\x17\x9a\xdb\x10\x8c\x68\x9d\xa5\xae\xee\xef\x6f\x26\x81\x17\xca\xcc\x2e\xa3\xed\xeb\x3f\xab\xff\x7b\x39\xfb\x27\x00\x00\xff\xff\x39\xc0\x32\x7e\xdd\x13\x00\x00")

func messagesExample_messageJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesExample_messageJson,
		"messages/example_message.json",
	)
}

func messagesExample_messageJson() (*asset, error) {
	bytes, err := messagesExample_messageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/example_message.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesHeaderMetadata_create_error_headerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x41\x8b\xdb\x30\x10\x85\xef\xf9\x15\x83\xce\xd5\x22\x5b\x8a\x1d\xfb\x56\xb2\x4b\xbb\x85\xf6\xb0\xcd\xad\xf4\x30\xb6\x46\x5e\x41\x2c\xb9\x92\x52\xba\x94\xfc\xf7\x22\x3b\x25\xce\x9e\x02\x46\xe0\xf9\xe6\xcd\x3c\x3f\xeb\xef\x06\x80\x8d\x14\x23\x0e\xf4\xac\x59\x0b\xac\x2b\xbb\xbe\xc6\x5a\x72\xa9\x3b\xc9\x95\x6a\x4a\xde\xf4\x52\x72\x59\x48\x85\x68\x2a\xd3\x6b\xc9\x3e\xac\x64\xfb\x23\xc6\x98\x95\x7b\x3f\x8e\xe8\xf4\x0d\x3c\xbc\x4d\x94\xd9\x57\x4a\xa8\x31\xe1\x3e\x10\x26\x5a\x5a\x02\xa5\x53\x70\x1f\xb5\x0e\xb4\x0c\x88\x29\x58\x37\xdc\xea\xed\x68\xdd\x90\x69\x76\x0a\xc0\xa6\x53\x77\xb4\xf1\x95\xf4\xc1\x8e\x14\x13\x8e\x53\x56\x96\x42\x28\x2e\x76\x5c\x14\x87\x42\xb4\x22\x3f\x7c\x3e\xe7\x61\x00\x8c\xfe\x4c\x36\x60\xb2\xde\xdd\xa9\xdb\x00\x9c\xd7\x46\xbe\xd3\xaf\x13\xb9\x9e\xae\x4e\xe2\xb5\xc2\xb6\xaa\xa9\x4c\xa5\x15\xef\x8b\x46\x72\x55\xa8\x2d\x6f\xea\x5d\xc3\x45\xd5\xed\x6a\x51\x11\x51\x89\xff\xad\x4c\x3e\xda\x6c\x84\xb5\x50\x5c\x4a\xc9\x27\x3c\xe6\xf7\xf7\x5b\x3f\xdb\x98\x7c\x78\x63\x2d\xfc\x98\x3b\x97\xd5\x99\x63\xff\x6a\xdd\xe5\x97\xad\x72\x5b\xc3\x55\xb2\x46\x17\xd4\x36\x46\x94\x6d\x57\xa2\x68\xb7\xa2\xaa\x5b\x63\x8c\x79\x77\x5c\x47\xa4\xbb\x53\x02\x38\x6f\x00\x7e\xce\xae\x7f\x53\x88\xcb\x97\x31\xf5\x20\x1e\x96\xf4\x19\x85\xe0\xc3\xde\xeb\x39\xa9\x4f\x4f\xdf\x9e\x5e\x5e\x84\x28\x56\xec\x91\x62\x1f\xec\x74\x09\xe5\xe6\x1a\x0c\xe4\x28\x60\xf2\x61\x0d\x20\x93\x44\x0e\x5d\xfa\x62\x63\xff\xfc\x38\x47\x77\xde\xfc\x0b\x00\x00\xff\xff\x1b\xbe\xa0\x15\xcd\x02\x00\x00")

func messagesHeaderMetadata_create_error_headerJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesHeaderMetadata_create_error_headerJson,
		"messages/header/metadata_create_error_header.json",
	)
}

func messagesHeaderMetadata_create_error_headerJson() (*asset, error) {
	bytes, err := messagesHeaderMetadata_create_error_headerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/header/metadata_create_error_header.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesHeaderMetadata_create_headerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x8f\x9b\x30\x10\x85\xef\xfc\x8a\x91\xcf\xf5\xca\xb8\x06\x07\xdf\xaa\xf4\xd0\xad\xd4\x53\x73\xab\x7a\x18\xf0\x98\xb5\x14\x0c\xb5\x9d\xaa\xab\x2a\xff\xbd\x32\xa4\x0a\xbb\xa7\x48\x68\x24\xe6\xf1\x66\xbe\x79\xfc\xad\x00\xd8\x44\x29\xe1\x48\xcf\x96\x19\x60\x43\xab\x75\xab\xea\x9e\x0f\x5a\x10\x57\xa8\x1d\xef\x0e\x42\x73\x42\x29\xb4\x92\xc3\x47\xd5\x12\xfb\xb0\xb3\x1d\xcf\x98\x52\x71\x1e\xe7\x69\xc2\x60\xdf\x88\xa7\xd7\x85\x8a\xf6\x8d\x32\x5a\xcc\x78\x8c\x84\xf9\xe6\x8f\x94\x2f\x31\x7c\xb2\x36\xd2\x36\x20\xe5\xe8\xc3\xf8\xd6\xef\x27\x1f\xc6\xa2\x16\x52\x00\xb6\x5c\xfa\xb3\x4f\x2f\x64\x4f\x7e\xa2\x94\x71\x5a\x8a\x53\x0a\xa1\xb8\x38\x70\x51\x9f\x6a\x61\x44\x79\xf8\x5a\xd7\x61\x00\x8c\xfe\x2c\x3e\x62\xf6\x73\x78\xd0\x57\x01\x5c\xf7\x20\xdf\xe9\xd7\x85\xc2\x40\x77\x92\x74\xef\xb0\x46\x0b\x6a\x94\x25\x6e\x2d\xf5\x5c\x69\xec\x78\xdf\xca\x8e\x4b\xac\x69\x90\xee\xd0\x68\xd9\xfe\x47\x59\xe6\xe4\x0b\x08\x33\x50\xdf\x5a\x79\xce\x78\x2e\xef\xef\xb7\x7e\xf1\x29\xcf\xf1\x95\x19\xf8\xb1\x7e\xb9\xad\x2e\x3a\x0e\x2f\x3e\xdc\x7e\xd9\x2e\xb7\xbd\xb8\x4b\xd6\xd9\x9a\x4c\xe7\x84\x34\xbd\x44\x61\x1a\xd1\x6a\xe3\x9c\x73\xef\xca\x7d\x44\x7e\x38\x25\x80\x6b\x05\xf0\x73\xa5\xfe\x4d\x31\x6d\x97\x31\xf5\x24\x9e\xb6\xf4\xd9\x48\x81\x22\xe6\x39\xee\x59\xa1\x28\x99\x02\x86\xfc\xd5\xa7\xe1\xf9\xf3\x7a\xfe\xb5\xfa\x17\x00\x00\xff\xff\x8b\x0f\x2d\x97\x91\x02\x00\x00")

func messagesHeaderMetadata_create_headerJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesHeaderMetadata_create_headerJson,
		"messages/header/metadata_create_header.json",
	)
}

func messagesHeaderMetadata_create_headerJson() (*asset, error) {
	bytes, err := messagesHeaderMetadata_create_headerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/header/metadata_create_header.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesHeaderMetadata_delete_headerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xcd\xaa\xdb\x30\x10\x85\xf7\x7e\x8a\x41\xeb\xea\x32\xfe\xb7\xb5\x2b\xf7\x2e\x9a\x42\x57\xcd\xae\x74\x21\x5b\x23\x47\x60\xcb\xae\xa4\x94\x86\x92\x77\x2f\xb2\x53\xe2\x64\x15\x30\x02\xeb\xcc\x99\xf9\xe6\xe8\x6f\x02\xc0\x26\xf2\x5e\x0e\x74\x50\x4c\x00\xc3\x42\xeb\x92\x9a\x9e\xb7\xb2\xd2\xbc\xe8\x73\xc5\xdb\xbc\x27\x5e\x94\x4d\xa6\x5b\xcc\xab\xb6\xac\xd9\xa7\x9d\xed\x7d\x94\xde\x47\xe7\xfb\x3c\x4d\xd2\xaa\x07\xf1\x78\x59\x28\x6a\xdf\x28\x48\x25\x83\xfc\xa0\x91\x02\x6d\x25\x8e\xc2\xd9\xd9\xcf\x4a\x39\xda\x1a\xf8\xe0\x8c\x1d\x1e\xfd\x66\x32\x76\x88\x6a\x24\x05\x60\xcb\xb9\x1b\x8d\x3f\x91\x3a\x9a\x89\x7c\x90\xd3\x12\x9d\x19\x62\xc1\xb1\xe1\x98\x1e\x53\x14\x18\x3f\xbe\x9e\x6b\x33\x00\x46\x7f\x16\xe3\x64\x30\xb3\x7d\xd1\x97\x00\x5c\xf7\x20\xdf\xe9\xd7\x99\x6c\x4f\x77\x12\x7f\xbf\x61\x0a\x53\xdd\xa9\x2a\xe3\x65\x56\x23\x2f\x4a\x85\xbc\xeb\x54\xcd\x33\xec\xf3\x4e\xa6\x4d\x8e\x45\xfa\x1f\x65\x99\xbd\x89\x20\x4c\x40\x7a\xbb\x0a\x73\x90\x63\xfc\x7f\x9e\xfa\xc5\xf8\x30\xbb\x0b\x13\xf0\x63\xad\xdc\x46\x47\x5d\xf6\x27\x63\x6f\x4f\xb6\xcb\x6d\x2f\xee\x92\xd5\x2a\x25\xd1\x6a\xcc\x44\x97\x49\x14\x25\x56\xb5\xd0\x5a\xeb\xa7\xe3\xde\x22\xbc\x9c\x12\xc0\x35\x01\xf8\xb9\x52\xff\x26\xe7\xb7\xcd\x58\xf1\x86\x6f\x5b\xfa\x6c\x20\x4b\x4e\x86\xd9\xed\x59\x21\x2a\x81\xac\xb4\xe1\xab\xf1\xfd\xe1\x63\x5d\xff\x9a\xfc\x0b\x00\x00\xff\xff\x6f\xac\xb1\xcc\x91\x02\x00\x00")

func messagesHeaderMetadata_delete_headerJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesHeaderMetadata_delete_headerJson,
		"messages/header/metadata_delete_header.json",
	)
}

func messagesHeaderMetadata_delete_headerJson() (*asset, error) {
	bytes, err := messagesHeaderMetadata_delete_headerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/header/metadata_delete_header.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesHeaderMetadata_read_request_headerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x8f\xdb\x20\x10\x85\xef\xf9\x15\x88\x73\x59\x8d\x09\x36\xb6\x6f\xd5\xf6\xd0\xad\xd4\x4b\x9b\x53\xab\x1e\xc6\x30\x64\x91\x62\xec\x02\xa9\xba\xaa\xf2\xdf\x2b\xec\x54\xf1\xe6\xd2\x95\x2c\x4b\xf0\xf8\x78\xef\x0d\x7f\x76\x8c\xf1\x91\x52\xc2\x23\x3d\x59\xde\x33\x8e\xca\xa9\xce\x3a\x25\xf6\xce\xec\x85\xb2\xba\x12\xed\xd0\x49\xd1\x82\x02\xd4\x95\x52\x12\x5a\xfe\xae\x60\x66\x8a\x91\x4e\x98\xfd\x14\x56\x54\xd5\x50\xa9\xbd\x46\x61\xa8\xab\x85\xda\x6b\x29\x06\xaa\x8d\x90\x5a\x9b\xa1\xc1\x56\x36\x34\xac\xe8\xd5\xf1\xf1\x84\x29\x15\xf2\x71\x1a\x47\x0c\xf6\x95\x78\x78\x99\xa9\x68\x9f\x29\xa3\xc5\x8c\x5f\x08\xaf\x07\x22\xe5\x73\x0c\xef\xad\x8d\xb4\xe2\x29\x47\x1f\x8e\xaf\x69\x3f\xfa\x70\x2c\x6a\xa9\xc8\x18\x9f\xcf\xc3\xc9\xa7\x67\xb2\x07\x3f\x52\xca\x38\xce\x85\x94\x00\x4a\x40\x2b\xa0\x3a\x54\xd0\x43\xf9\xbe\x2d\xf7\x30\xc6\xe9\xf7\xec\xe3\x52\xef\xff\xc8\x8e\xb1\xcb\xd6\xfe\x2b\xfd\x3c\x53\x30\x74\xf3\x4f\xb7\x1d\x5e\x6b\xa0\x5a\x59\x12\xd6\xd2\x20\x94\xc6\x4e\x0c\x8d\xec\x84\xc4\x8a\x8c\x74\x6d\xad\x65\xf3\x2f\xc5\x3c\x25\x5f\x32\xf0\x9e\x55\xd7\xad\x3c\x65\x3c\x95\xf5\xbd\xeb\x47\x9f\xf2\x14\x5f\x78\xcf\xbe\x2f\x27\x57\xeb\xa2\xa3\x79\xf6\xe1\xfa\xc2\x9b\x69\x6d\xc5\xcd\x3c\x9d\xad\xa8\xef\x1c\xc8\x7e\x90\x08\x7d\x0d\x8d\xee\x9d\x73\xee\xee\x77\xbb\x22\xbf\x65\x40\x8c\x5d\x76\x8c\xfd\x58\x02\xff\xa2\x98\xd6\x52\x5c\x3d\xc0\x03\xac\x6f\x77\xa4\x40\x11\xf3\x14\xb7\x31\x59\x51\x32\x05\x0c\xf9\x93\x4f\xe6\xe9\xc3\xd2\xfc\xb2\xfb\x1b\x00\x00\xff\xff\xe1\xee\x0a\xf4\xbb\x02\x00\x00")

func messagesHeaderMetadata_read_request_headerJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesHeaderMetadata_read_request_headerJson,
		"messages/header/metadata_read_request_header.json",
	)
}

func messagesHeaderMetadata_read_request_headerJson() (*asset, error) {
	bytes, err := messagesHeaderMetadata_read_request_headerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/header/metadata_read_request_header.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesHeaderMetadata_read_response_headerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x8f\xdb\x20\x10\x85\xef\xf9\x15\x88\x73\x59\x8d\x09\x36\xb6\x6f\x55\xf7\xd0\xad\xd4\x4b\x9b\x53\xab\x1e\xc6\x30\x64\x91\x62\xec\x02\xa9\xba\xaa\xf2\xdf\x2b\xec\x54\xf1\xe6\xd2\x95\x2c\x4b\xf0\xf8\x78\xef\x0d\x7f\x76\x8c\xf1\x91\x52\xc2\x23\x3d\x59\xde\x33\x8e\xca\xa9\xce\x3a\x25\xf6\xce\xec\x85\xb2\xba\x12\xed\xd0\x49\xd1\x82\x02\xd4\x95\x52\x12\x5a\xfe\xae\x60\x66\x8a\x91\x4e\x98\xfd\x14\x56\x54\xd5\x50\xa9\xbd\x46\x61\xa8\xab\x85\xda\x6b\x29\x06\xaa\x8d\x90\x5a\x9b\xa1\xc1\x56\x36\x34\xac\xe8\xd5\xf1\xc3\x09\x53\x2a\xe4\xe3\x64\xce\x23\x85\xfc\x4a\x3d\xbc\xcc\x54\xc4\xcf\x94\xd1\x62\xc6\x2f\x84\x76\x3d\x10\x29\x9f\x63\x78\x6f\x6d\xa4\x95\x4f\x39\xfa\x70\x7c\x4d\xfb\xd1\x87\x63\x51\x4b\x47\xc6\xf8\x7c\x1e\x4e\x3e\x3d\x93\x3d\xf8\x91\x52\xc6\x71\x2e\xa4\x04\x50\x02\x5a\x01\xd5\xa1\x82\x1e\xca\xf7\x6d\xb9\x87\x31\x4e\xbf\x67\x1f\x97\x7e\xff\x47\x76\x8c\x5d\xb6\xf6\x5f\xe9\xe7\x99\x82\xa1\x9b\x7f\xba\xed\xf0\x5a\x03\xd5\xca\x92\xb0\x96\x06\xa1\x34\x76\x62\x68\x64\x27\x24\x56\x64\xa4\x6b\x6b\x2d\x9b\x7f\x29\xe6\x29\xf9\x92\x81\xf7\xac\xba\x6e\xe5\x29\xe3\xa9\xac\xef\x5d\x3f\xfa\x94\xa7\xf8\xc2\x7b\xf6\x7d\x39\xb9\x5a\x17\x1d\xcd\xb3\x0f\xd7\x27\xde\x4c\x6b\x2b\x6e\xe6\xe9\x6c\x45\x7d\xe7\x40\xf6\x83\x44\xe8\x6b\x68\x74\xef\x9c\x73\x77\xbf\xdb\x15\xf9\x2d\x03\x62\xec\xb2\x63\xec\xc7\x12\xf8\x17\xc5\xb4\x96\xe2\xea\x01\x1e\x60\x7d\xbb\x23\x05\x8a\x98\xa7\xb8\x8d\xc9\x8a\x92\x29\x60\xc8\x9f\x7c\x32\x4f\x8f\x4b\xf3\xcb\xee\x6f\x00\x00\x00\xff\xff\x6a\xe2\x83\x40\xbc\x02\x00\x00")

func messagesHeaderMetadata_read_response_headerJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesHeaderMetadata_read_response_headerJson,
		"messages/header/metadata_read_response_header.json",
	)
}

func messagesHeaderMetadata_read_response_headerJson() (*asset, error) {
	bytes, err := messagesHeaderMetadata_read_response_headerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/header/metadata_read_response_header.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesHeaderMetadata_update_headerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x8f\xd3\x30\x10\x85\xef\xf9\x15\x23\x5f\xc1\x2b\xc7\xd8\xd9\x8d\x6f\x68\x39\xb0\x48\x9c\x28\x27\xc4\x61\x12\x8f\x53\x4b\x8d\x13\x6c\x17\x51\xa1\xfe\x77\xe4\xa4\xa8\x69\x4f\x95\x22\x4b\xf1\x9b\x37\xf3\xcd\xf3\xdf\x0a\x80\x8d\x94\x12\x0e\xf4\x66\x99\x01\xd6\x51\xab\xb0\x6d\x35\x27\xea\x2d\x57\x3d\x21\xef\xf4\xb3\xe4\xad\x76\xba\x11\xda\xe9\xd6\x49\xf6\x7e\x63\x7b\x3d\x60\x4a\xc5\xf9\x3a\x8d\x23\x06\x7b\x23\xee\x4e\x33\x15\xed\x2b\x65\xb4\x98\xf1\xfb\x6c\x31\xd3\x5a\x12\x29\x1f\x63\xf8\x68\x6d\xa4\xb5\x41\xca\xd1\x87\xe1\xd6\xef\x47\x1f\x86\xa2\x16\x52\x00\x36\x1f\xbb\x83\x4f\x7b\xb2\x3b\x3f\x52\xca\x38\xce\xc5\x29\x85\x50\x5c\xbc\x70\x51\xef\x6a\x61\x44\xf9\xde\x2d\xe7\xd2\x0c\x80\xd1\x9f\xd9\x47\xcc\x7e\x0a\x0f\xfa\x2a\x80\xf3\x16\xe4\x1b\xfd\x3a\x52\xe8\xe9\x4a\x92\xae\x37\x8c\x9c\xfc\x20\x15\x12\xaf\x1b\x41\x5c\x61\xdf\x70\x74\xaa\xe3\xa4\xfa\x4e\x37\xd2\x6a\x72\x2f\xff\x51\xe6\x29\xf9\x02\xc2\x0c\xd4\x97\xab\x3c\x65\x3c\x94\xff\xfb\xa9\x9f\x7d\xca\x53\x3c\x31\x03\x3f\x96\xca\x75\x74\xd1\xb1\xdf\xfb\x70\x79\xb2\x4d\x6e\x5b\x71\x93\xac\xb3\x35\x99\xd6\x09\x69\x3a\x89\xc2\x68\xd1\x3c\x1b\xe7\x9c\xbb\x3b\xae\x2d\xf2\xc3\x29\x01\x9c\x2b\x80\x9f\x0b\xf5\x6f\x8a\x69\xdd\x8c\xa9\x27\xf1\xb4\xa6\xcf\x06\x0a\x14\x31\x4f\x71\xcb\x0a\x45\xc9\x14\x30\xe4\x2f\x3e\xf5\x6f\x9f\x96\xf5\xcf\xd5\xbf\x00\x00\x00\xff\xff\x42\x58\x7e\xa1\x91\x02\x00\x00")

func messagesHeaderMetadata_update_headerJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesHeaderMetadata_update_headerJson,
		"messages/header/metadata_update_header.json",
	)
}

func messagesHeaderMetadata_update_headerJson() (*asset, error) {
	bytes, err := messagesHeaderMetadata_update_headerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/header/metadata_update_header.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesHeaderPreservation_event_headerJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xc1\x0b\xdb\x20\x18\xc5\xef\xf9\x2b\x3e\x3c\xcf\xa2\x31\x4d\x8c\xb7\xb1\x0d\xd6\x9d\x06\xeb\x6d\xec\x60\xcd\x67\x2a\x34\x26\x53\x5b\x56\x46\xff\xf7\x61\xd2\xd1\xb4\xa7\x42\x10\xe2\xf3\x3d\x7f\xdf\xf3\x6f\x01\x40\x06\x8c\x51\xf7\xb8\xeb\x88\x02\xc2\xeb\x46\x36\xa5\xd1\xd4\x58\xdb\xd0\xca\xb6\x82\xea\x8e\x73\xca\x2a\x14\x2d\xd7\x68\x98\x30\xe4\xc3\xca\xf6\xe9\xa4\x63\xcc\xce\x2f\x17\xf4\xe9\x49\xda\x5f\x27\xcc\xca\xf7\x80\x11\xc3\x45\x27\x37\xfa\xd5\xa9\x80\xe9\x1c\xfc\xc7\xae\x0b\xb8\x24\xc4\x14\x9c\xef\x9f\x23\xdc\xe0\x7c\x9f\xd5\x8c\x0a\x40\xa6\xf3\xe1\xe4\xe2\x11\xbb\xbd\x1b\x30\x26\x3d\x4c\xd9\x59\x32\x56\x51\x26\x29\xe3\x7b\xce\x14\xcb\x1f\x9d\xd7\x39\x0c\x80\xe0\x9f\xc9\x85\x19\xe0\x4d\x5f\x01\x70\x5b\x83\xfc\xc0\xdf\x67\xf4\x06\x1f\x24\xf1\xb1\x43\x1a\x2e\x2b\x79\x68\x0d\xad\xb7\x5a\xd2\x4a\x72\x49\xdb\xd2\x08\x8a\x82\x0b\xde\xd5\x42\x5b\x21\xff\xa3\x4c\x63\x74\x19\x84\x28\xe0\xf7\xad\x34\x26\x7d\xca\xff\xaf\xb7\x7e\x75\x31\x8d\xe1\x4a\x14\xfc\x9c\x4f\x2e\x57\x67\x5d\x9b\xa3\xf3\xf7\x37\x5b\xf5\xb6\x16\x57\xcd\xda\x8e\xa3\x6a\x2d\x2b\xd5\xa1\xd4\x4c\x6d\x59\xdd\x28\x6b\xad\x7d\x59\x1e\x11\xe9\xed\x96\x00\x6e\x05\xc0\xaf\x99\xfa\x82\x21\x2e\x93\x91\x6a\xc3\x36\x4b\xfb\xa4\x47\x8f\x41\xa7\x31\xac\x59\x21\x2b\x09\xbd\xf6\xe9\x9b\x8b\x66\xf7\x79\x1e\xff\x56\xfc\x0b\x00\x00\xff\xff\xc6\xdd\x79\xe2\x92\x02\x00\x00")

func messagesHeaderPreservation_event_headerJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesHeaderPreservation_event_headerJson,
		"messages/header/preservation_event_header.json",
	)
}

func messagesHeaderPreservation_event_headerJson() (*asset, error) {
	bytes, err := messagesHeaderPreservation_event_headerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/header/preservation_event_header.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"schemas/article.json":                                                  schemasArticleJson,
	"schemas/common_entities.json":                                          schemasCommon_entitiesJson,
	"schemas/dataset.json":                                                  schemasDatasetJson,
	"schemas/enumeration.json":                                              schemasEnumerationJson,
	"schemas/information_package.json":                                      schemasInformation_packageJson,
	"schemas/intellectual_asset.json":                                       schemasIntellectual_assetJson,
	"schemas/material_asset.json":                                           schemasMaterial_assetJson,
	"schemas/message/header.json":                                           schemasMessageHeaderJson,
	"schemas/message/metadata/create_request.json":                          schemasMessageMetadataCreate_requestJson,
	"schemas/message/metadata/delete_request.json":                          schemasMessageMetadataDelete_requestJson,
	"schemas/message/metadata/read_request.json":                            schemasMessageMetadataRead_requestJson,
	"schemas/message/metadata/read_response.json":                           schemasMessageMetadataRead_responseJson,
	"schemas/message/metadata/update_request.json":                          schemasMessageMetadataUpdate_requestJson,
	"schemas/message/preservation/preservation_event_request.json":          schemasMessagePreservationPreservation_event_requestJson,
	"schemas/research_object.json":                                          schemasResearch_objectJson,
	"schemas/thesis_dissertation.json":                                      schemasThesis_dissertationJson,
	"schemas/types.json":                                                    schemasTypesJson,
	"messages/body/metadata/create/README.md":                               messagesBodyMetadataCreateReadmeMd,
	"messages/body/metadata/create/article_create_request.json":             messagesBodyMetadataCreateArticle_create_requestJson,
	"messages/body/metadata/create/dataset_create_request.json":             messagesBodyMetadataCreateDataset_create_requestJson,
	"messages/body/metadata/create/research_object_create_request.json":     messagesBodyMetadataCreateResearch_object_create_requestJson,
	"messages/body/metadata/create/thesis_dissertation_create_request.json": messagesBodyMetadataCreateThesis_dissertation_create_requestJson,
	"messages/body/metadata/delete/README.md":                               messagesBodyMetadataDeleteReadmeMd,
	"messages/body/metadata/delete/research_object_delete_request.json":     messagesBodyMetadataDeleteResearch_object_delete_requestJson,
	"messages/body/metadata/read/README.md":                                 messagesBodyMetadataReadReadmeMd,
	"messages/body/metadata/read/research_object_read_request.json":         messagesBodyMetadataReadResearch_object_read_requestJson,
	"messages/body/metadata/read/research_object_read_response.json":        messagesBodyMetadataReadResearch_object_read_responseJson,
	"messages/body/metadata/update/README.md":                               messagesBodyMetadataUpdateReadmeMd,
	"messages/body/metadata/update/research_object_update_request.json":     messagesBodyMetadataUpdateResearch_object_update_requestJson,
	"messages/body/preservation/README.md":                                  messagesBodyPreservationReadmeMd,
	"messages/body/preservation/preservation_event_request.json":            messagesBodyPreservationPreservation_event_requestJson,
	"messages/example_message.json":                                         messagesExample_messageJson,
	"messages/header/metadata_create_error_header.json":                     messagesHeaderMetadata_create_error_headerJson,
	"messages/header/metadata_create_header.json":                           messagesHeaderMetadata_create_headerJson,
	"messages/header/metadata_delete_header.json":                           messagesHeaderMetadata_delete_headerJson,
	"messages/header/metadata_read_request_header.json":                     messagesHeaderMetadata_read_request_headerJson,
	"messages/header/metadata_read_response_header.json":                    messagesHeaderMetadata_read_response_headerJson,
	"messages/header/metadata_update_header.json":                           messagesHeaderMetadata_update_headerJson,
	"messages/header/preservation_event_header.json":                        messagesHeaderPreservation_event_headerJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"messages": &bintree{nil, map[string]*bintree{
		"body": &bintree{nil, map[string]*bintree{
			"metadata": &bintree{nil, map[string]*bintree{
				"create": &bintree{nil, map[string]*bintree{
					"README.md":                               &bintree{messagesBodyMetadataCreateReadmeMd, map[string]*bintree{}},
					"article_create_request.json":             &bintree{messagesBodyMetadataCreateArticle_create_requestJson, map[string]*bintree{}},
					"dataset_create_request.json":             &bintree{messagesBodyMetadataCreateDataset_create_requestJson, map[string]*bintree{}},
					"research_object_create_request.json":     &bintree{messagesBodyMetadataCreateResearch_object_create_requestJson, map[string]*bintree{}},
					"thesis_dissertation_create_request.json": &bintree{messagesBodyMetadataCreateThesis_dissertation_create_requestJson, map[string]*bintree{}},
				}},
				"delete": &bintree{nil, map[string]*bintree{
					"README.md":                           &bintree{messagesBodyMetadataDeleteReadmeMd, map[string]*bintree{}},
					"research_object_delete_request.json": &bintree{messagesBodyMetadataDeleteResearch_object_delete_requestJson, map[string]*bintree{}},
				}},
				"read": &bintree{nil, map[string]*bintree{
					"README.md":                          &bintree{messagesBodyMetadataReadReadmeMd, map[string]*bintree{}},
					"research_object_read_request.json":  &bintree{messagesBodyMetadataReadResearch_object_read_requestJson, map[string]*bintree{}},
					"research_object_read_response.json": &bintree{messagesBodyMetadataReadResearch_object_read_responseJson, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"README.md":                           &bintree{messagesBodyMetadataUpdateReadmeMd, map[string]*bintree{}},
					"research_object_update_request.json": &bintree{messagesBodyMetadataUpdateResearch_object_update_requestJson, map[string]*bintree{}},
				}},
			}},
			"preservation": &bintree{nil, map[string]*bintree{
				"README.md":                       &bintree{messagesBodyPreservationReadmeMd, map[string]*bintree{}},
				"preservation_event_request.json": &bintree{messagesBodyPreservationPreservation_event_requestJson, map[string]*bintree{}},
			}},
		}},
		"example_message.json": &bintree{messagesExample_messageJson, map[string]*bintree{}},
		"header": &bintree{nil, map[string]*bintree{
			"metadata_create_error_header.json":  &bintree{messagesHeaderMetadata_create_error_headerJson, map[string]*bintree{}},
			"metadata_create_header.json":        &bintree{messagesHeaderMetadata_create_headerJson, map[string]*bintree{}},
			"metadata_delete_header.json":        &bintree{messagesHeaderMetadata_delete_headerJson, map[string]*bintree{}},
			"metadata_read_request_header.json":  &bintree{messagesHeaderMetadata_read_request_headerJson, map[string]*bintree{}},
			"metadata_read_response_header.json": &bintree{messagesHeaderMetadata_read_response_headerJson, map[string]*bintree{}},
			"metadata_update_header.json":        &bintree{messagesHeaderMetadata_update_headerJson, map[string]*bintree{}},
			"preservation_event_header.json":     &bintree{messagesHeaderPreservation_event_headerJson, map[string]*bintree{}},
		}},
	}},
	"schemas": &bintree{nil, map[string]*bintree{
		"article.json":             &bintree{schemasArticleJson, map[string]*bintree{}},
		"common_entities.json":     &bintree{schemasCommon_entitiesJson, map[string]*bintree{}},
		"dataset.json":             &bintree{schemasDatasetJson, map[string]*bintree{}},
		"enumeration.json":         &bintree{schemasEnumerationJson, map[string]*bintree{}},
		"information_package.json": &bintree{schemasInformation_packageJson, map[string]*bintree{}},
		"intellectual_asset.json":  &bintree{schemasIntellectual_assetJson, map[string]*bintree{}},
		"material_asset.json":      &bintree{schemasMaterial_assetJson, map[string]*bintree{}},
		"message": &bintree{nil, map[string]*bintree{
			"header.json": &bintree{schemasMessageHeaderJson, map[string]*bintree{}},
			"metadata": &bintree{nil, map[string]*bintree{
				"create_request.json": &bintree{schemasMessageMetadataCreate_requestJson, map[string]*bintree{}},
				"delete_request.json": &bintree{schemasMessageMetadataDelete_requestJson, map[string]*bintree{}},
				"read_request.json":   &bintree{schemasMessageMetadataRead_requestJson, map[string]*bintree{}},
				"read_response.json":  &bintree{schemasMessageMetadataRead_responseJson, map[string]*bintree{}},
				"update_request.json": &bintree{schemasMessageMetadataUpdate_requestJson, map[string]*bintree{}},
			}},
			"preservation": &bintree{nil, map[string]*bintree{
				"preservation_event_request.json": &bintree{schemasMessagePreservationPreservation_event_requestJson, map[string]*bintree{}},
			}},
		}},
		"research_object.json":     &bintree{schemasResearch_objectJson, map[string]*bintree{}},
		"thesis_dissertation.json": &bintree{schemasThesis_dissertationJson, map[string]*bintree{}},
		"types.json":               &bintree{schemasTypesJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

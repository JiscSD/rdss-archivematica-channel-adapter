// Code generated by go-bindata.
// sources:
// spec/schemas/enumeration.json
// spec/schemas/intellectual_asset.json
// spec/schemas/material_asset.json
// spec/schemas/research_object.json
// spec/schemas/types.json
// spec/messages/body/metadata/create/README.md
// spec/messages/body/metadata/create/request.json
// spec/messages/body/metadata/create/request_schema.json
// spec/messages/body/metadata/delete/README.md
// spec/messages/body/metadata/delete/request.json
// spec/messages/body/metadata/delete/request_schema.json
// spec/messages/body/metadata/read/README.md
// spec/messages/body/metadata/read/request.json
// spec/messages/body/metadata/read/request_schema.json
// spec/messages/body/metadata/read/response.json
// spec/messages/body/metadata/read/response_schema.json
// spec/messages/body/metadata/update/README.md
// spec/messages/body/metadata/update/request.json
// spec/messages/body/metadata/update/request_schema.json
// spec/messages/body/vocabulary/patch/README.md
// spec/messages/body/vocabulary/patch/request.json
// spec/messages/body/vocabulary/patch/request_schema.json
// spec/messages/body/vocabulary/read/README.md
// spec/messages/body/vocabulary/read/request.json
// spec/messages/body/vocabulary/read/request_schema.json
// spec/messages/body/vocabulary/read/response.json
// spec/messages/body/vocabulary/read/response_schema.json
// spec/messages/example.json
// spec/messages/header/example.json
// DO NOT EDIT!

package specdata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _schemasEnumerationJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x58\x4f\x6f\x1b\xbb\x11\xbf\xe7\x53\x08\x6a\x8f\x7d\x56\xff\xbd\x1e\x7c\x73\xec\xb8\x11\x1a\x5b\x86\xe5\xe4\x15\x28\x7a\x18\x91\xb3\xbb\x13\x73\x49\x76\x86\x94\x2c\x14\xef\xbb\x17\xdc\x95\x03\x0d\x57\x8e\xd2\x77\x30\x0c\xfe\x86\x1c\xce\xfc\x38\xff\x56\xff\x7d\x37\x9b\xcd\xc9\xce\x2f\x67\xf3\x2e\xa5\x28\x97\x8b\xc5\x6e\xb7\xbb\xf8\x4a\x62\x2e\xc0\x5c\xe4\xe7\x05\x5b\x91\x85\x98\x0e\x7b\x58\xa0\xcf\x3d\x32\x24\x0a\xfe\xe2\xab\x04\xbf\xf8\xdd\xfc\x0f\x45\xc1\xef\x47\xf9\xab\x96\xcb\xc5\xa2\x48\x7f\x1a\xd1\x8b\xc0\xed\xc2\x32\x34\xe9\xa7\x3f\xfe\xf5\xa0\xe9\x70\xce\x62\x43\x9e\x8a\x3a\x99\x5f\xce\x8a\x2d\xb3\xd9\x1c\x8c\x41\x91\xa7\x7d\xc4\x6f\xd8\x6c\x36\x2f\x57\xcf\x2f\x67\xff\x3a\xac\x67\xb3\x79\x88\xe8\x07\x35\x87\xb5\x40\x83\x6d\x06\xb6\x68\x8f\x61\x13\x7c\xe2\xe0\x9c\x46\x19\x25\x31\x99\x54\xed\x75\x41\xd0\xce\x0f\xc0\xbf\x87\xff\xbf\x8e\xf2\xb9\xe9\xd0\x3c\x4b\xee\xcf\x1b\xd6\xdb\x9f\x95\x5d\x1d\xfc\xf9\xe7\xbf\x9d\x56\x6a\x21\xe1\x79\x85\x85\x91\x58\x99\x0a\x31\x72\xd8\x56\xd8\x16\xc8\xc1\xc6\xa1\xf6\x3f\xee\x99\xda\xae\x76\xb5\x50\x32\xf1\x9f\x11\x2a\x88\x44\xb2\x46\xfa\x60\xa9\x21\x8d\xc5\x20\xd5\xb9\x98\x37\x8e\xa4\x7b\x8b\x4d\xb4\xf9\x01\x59\x82\x5f\x9b\x10\xd1\x5e\x35\x0d\x39\x1a\x02\xeb\xfb\x54\x48\xca\x16\x7d\x52\xfc\x26\x68\x9a\x63\xa0\x01\x93\x5d\xda\x1f\x43\xd8\x47\x17\xf6\xa8\x88\xe9\xb1\xdf\x20\x2b\xfe\x0e\x56\xa8\x6d\xe0\x72\x7f\xbc\x76\xb4\x61\xe0\xfd\x2f\xe0\x9e\x97\xfe\xb4\x73\x0d\x39\xfc\x2c\xe7\xc2\x97\xa9\x25\x0f\xee\x96\xf4\x7b\xa5\x2e\xf7\x1b\x0f\xe4\x96\x3d\xb4\x4a\x82\x2f\x89\xa1\x3c\xd9\x13\xbe\x28\x06\x22\xa3\x20\x6f\x07\xfa\xee\x40\x12\x72\xad\x94\x7c\x42\xee\xd1\x16\xe7\x6a\x59\x39\x4a\x66\x02\x27\x06\x2f\x86\x29\xa6\xd3\x4e\x52\x79\x87\x12\x08\x7c\x3e\x80\xaf\x1e\xff\xa1\x28\xe5\x7f\xd2\xf6\x18\xd8\xd0\xc6\x04\xab\xae\xbf\x59\x2d\x8f\x97\x1f\xae\xee\xff\xf4\x17\x05\x2c\xd7\xeb\xfb\x63\xe0\x23\x78\xab\x3d\x58\xae\xdf\xdf\xeb\xf5\xba\x5a\x3f\x5d\x1f\xaf\x3f\xd5\x1b\x3e\xad\x97\x37\xc7\xeb\x87\xbb\x6a\xfd\xb9\x5e\x3f\x7e\x3a\x5e\x7f\x7e\x50\xfa\x6b\xe9\xe3\xfd\x69\x66\xc3\xe6\x2b\x9a\xf4\x05\x5c\x3e\x43\xab\x0f\xdc\x83\x3b\xd6\xd9\x51\xdb\x1d\xaf\xb7\xc8\xfb\x8f\x05\x3b\x7d\x11\xb7\xe0\x49\x86\xb8\x79\x0c\xee\xcc\x6d\x4d\xf6\x56\xe7\x4b\x17\x24\x91\x6f\x97\x5e\x12\xa5\x3c\x24\xef\x71\x89\x2d\x45\x47\x3e\x06\x57\x9d\x92\x18\xbc\x04\x3e\x55\x2c\x58\x97\xe8\x96\x24\x8d\xdd\xe6\xaa\x45\x6f\xf6\x6f\x4a\x73\xea\x02\x93\x4e\x79\x5b\xc4\xb4\xc9\x49\x5f\x05\x76\x1b\x0c\x68\x5d\x30\x9c\x3f\xcf\xd1\xf9\x40\x37\x1d\xd4\x76\x98\xd0\xf7\xc8\x86\xf4\x43\x4d\xc9\x6c\x32\xa7\x0e\xf9\x83\xcd\x06\x6a\x2a\xdb\xb0\x45\xf6\x7d\x55\xf8\x3a\x04\x97\x3a\x8d\x30\xa5\xaa\x6a\x94\x90\x78\x43\x6d\x48\x15\xe5\x91\x43\x83\x22\x14\x3c\xb8\xf7\xc1\x56\x84\x0b\x02\x1b\x75\x9f\x98\x2e\x04\xe5\x97\x3c\x93\x73\xa2\x73\xdb\x39\xf2\x6d\xf5\x34\xd1\xc1\xfe\x34\xe1\x71\x68\x0b\xcb\xff\xa3\xba\xac\x1e\xaf\x75\x1e\xde\xae\xae\x6e\x8f\xd7\x4f\x3b\x4a\x49\x7b\xfa\xad\xff\x3c\x01\xb7\x98\xd0\x6a\x0d\xdf\xc4\x0f\x4c\xde\x50\x74\x78\x0f\x3d\x7e\xcf\xe0\xf3\xf9\x03\xb6\x27\x3f\xc6\xac\x0e\xc9\x32\xa1\x80\x49\xe3\x85\x8a\x27\x48\x70\xe5\xc1\xed\x45\x1b\x5f\xf0\xeb\xb1\x7f\x87\xa9\xa0\xf4\xf0\x29\x7c\x07\x1e\xda\x9a\x03\xaa\x36\x92\xdf\xa2\x24\x6a\x6b\x05\x91\x83\xcd\x66\x12\x2b\xa5\x4c\x7d\x42\xa8\x02\xf9\x64\x32\x1f\x76\xdf\x4d\x7a\x2e\xa3\x2b\x23\xc7\xd4\xf9\xd7\x78\xab\xb7\xbf\xa2\x7f\xe7\x90\xe3\x6f\xac\x37\x92\x63\x69\x7a\x15\x3a\x49\x87\x43\x5d\x38\x66\x12\x63\x10\x2a\x45\xef\x73\x79\x93\xd3\xf1\x70\xd4\x8d\x3f\x6c\xd1\xa7\x1f\x28\x1b\x10\x53\xe6\x6a\x6c\xeb\x8b\x22\xa9\x52\x76\x98\xd0\x2a\xcc\xe2\x38\x32\x4f\xe0\x37\x74\x58\x34\xbc\x8f\x53\x2d\x0e\x27\x18\xb5\x94\xc0\xad\xa9\xf5\x50\x0c\xfc\x02\x8e\xec\xf4\xfe\xb0\xf3\x2e\x80\x1a\xff\x1a\x7a\xa1\xb4\xbf\x2e\x33\xb3\x0e\xb0\xb6\x04\x98\x3e\xdf\xa3\x08\xb4\x78\x43\x45\x76\x0d\xce\x64\x37\xb9\xa3\xa7\x96\x27\xe0\xd8\xff\x0e\xc5\x59\x47\x49\x74\x34\xad\x77\x39\xda\x6a\xb8\xdb\x9e\x74\x68\x4b\x9c\x65\xb4\xfd\xe4\x0b\x0f\x31\xfb\x63\xfd\x80\x12\x8a\x1e\xa7\xaf\x29\xa1\x7d\xbf\xd7\xe0\x3a\xc7\xe8\xb0\x14\xf8\xa7\xf0\x96\xa4\x3e\x55\xca\x06\xf9\x3c\xd1\x7f\x80\xab\xdd\x1d\xc8\x1d\x26\x28\xa5\x40\xef\x7f\x45\x6f\xab\x52\x20\xf7\xb8\xfb\x82\x5c\x82\x67\xd5\x68\xc9\x03\xe3\x96\x42\x96\xb7\xc4\xc0\x49\x63\x1d\x0c\xa0\xde\xf6\x88\x0d\x32\x7a\x53\x5b\xca\xaf\x78\xe5\xd8\x4d\x30\xf9\x14\x0f\xf6\x80\x4f\x78\xe8\x23\xb9\x29\x69\x03\x5a\xed\xfd\x02\x4c\xe0\xd3\x6d\xe0\xbe\x76\x66\xf5\x3a\xa6\x9f\x90\x8d\x4d\xca\x80\xab\x1f\xed\x11\xb7\x84\xbb\xa9\x63\x05\xad\xbd\x42\xa6\x2d\xda\x5b\x0e\x7d\xf5\xf0\x21\xb3\xc1\xfa\xca\xeb\x32\x4d\xf8\xb4\xf2\x15\xbd\x07\xbc\x36\x23\xba\xbd\xb6\xad\x83\x11\x55\x1d\x1a\x04\xed\xca\xdf\x54\xa1\x31\x6c\x1d\x8a\xf3\x1d\x24\xe4\x6a\x80\x21\x79\x3f\x1e\x9b\x80\x24\x55\x28\x31\xfe\x27\x13\xd7\x9c\x3f\x8e\xe8\x34\x4c\x1f\x80\x27\x9e\x8c\xd8\xaa\x79\x2b\x1f\x65\x20\xeb\x07\xbe\xa4\x39\xdd\xa0\x50\xeb\x97\x09\x7b\xfd\x49\x92\xc8\xe8\xcf\x07\xc8\x96\x14\x77\x9b\x10\x9e\xeb\xf5\x1a\x4d\x5d\x3d\x4c\xf0\x87\x00\xfe\x25\xf0\xb3\x74\x21\xd6\x97\x95\x74\x13\x54\x2e\xe2\x0b\xf4\x0f\x10\x75\xff\xa1\xfa\x0b\xf0\x6b\xc8\xec\xf5\x3b\x38\x04\xf6\xe4\xdb\xd5\xf0\xd1\xa0\x4a\x66\xd8\x96\xe1\xbc\xd6\xd1\x67\x21\x53\x92\x63\x68\x64\xe7\x06\x42\x48\xd5\x5b\x44\xe4\xa6\x94\x5d\x6f\x50\xf7\x77\x8c\x4c\x7a\x2b\x63\x0c\x9c\xa6\x19\xa0\x3a\x71\x17\x76\x1f\x5e\x3a\xda\x4c\x6c\x91\xd0\xa4\x1d\xe8\xa6\x98\xaa\x0f\xdf\xd4\xa1\x90\xdc\x90\x08\x72\x9a\x96\x7b\xff\xec\xc3\x4e\x41\x3b\xdc\x08\xe9\x16\xb0\x0b\xfc\xdc\xb8\xa0\xac\x2a\xa1\x19\x87\x7c\x3a\x19\x6f\x92\x02\x43\x8b\xeb\x04\x29\xcb\x99\xaf\x7c\xef\xc8\xab\xfb\x3c\x02\xd7\x58\x68\x9a\x01\xfa\xde\x6d\xe7\x83\x7b\xad\x3e\x90\x3f\x3e\x3d\x3d\x9c\x56\x98\x63\xe9\xd6\x3f\x62\xfd\xb7\x9d\x5c\xfd\xba\x33\x0a\x4a\x14\x39\xd4\x74\x8e\x92\xab\x4d\x18\x8e\xe8\xfb\xdf\x95\xbf\x5f\xdf\xfd\x2f\x00\x00\xff\xff\x18\x04\xda\x60\x74\x14\x00\x00")

func schemasEnumerationJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasEnumerationJson,
		"schemas/enumeration.json",
	)
}

func schemasEnumerationJson() (*asset, error) {
	bytes, err := schemasEnumerationJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/enumeration.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasIntellectual_assetJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x5a\x5f\x6f\xa3\x46\x10\x7f\xf7\xa7\x40\xb4\x8f\x39\xd3\xb4\x95\x5a\xe5\xad\xca\x9f\xf6\xa4\xa4\x3a\x5d\x2e\x7d\xa9\xaa\xd3\x18\xc6\xf6\x26\xb0\x4b\x67\x87\xb8\x69\x95\xef\x5e\xb1\xe0\x18\xc3\x2e\xc6\xc6\x86\x3c\xdc\x43\x80\x9d\xf9\xcd\xcc\x6f\xfe\xad\xef\xbf\x89\xe7\xf9\x22\xf2\x2f\x3c\x7f\xc9\x9c\xea\x8b\x20\x58\xad\x56\xd3\x47\xa1\xc3\x29\x84\xd3\xec\x29\xa0\x48\xeb\x40\x87\x4b\x4c\x20\x10\x92\x31\x8e\x31\xe4\x0c\xe2\xaf\xa0\x35\xf2\xf4\x51\x2b\x19\x7c\xe3\x9f\xe5\x72\xbe\x2d\x3e\x5b\x0b\xbb\x08\x82\xfc\xed\x87\xe2\xe9\x54\xd1\x22\x88\x08\xe6\xfc\xe1\xbb\x1f\x4b\x81\xe5\xb9\x08\xe7\x42\x0a\x16\x4a\x6a\xff\xc2\xcb\x21\x79\x9e\x3f\x17\x31\xbe\xfd\xe5\x79\x3e\xbf\xa4\xf9\xdf\xbe\x9a\x3d\x62\xc8\xe6\xa0\x79\x9e\x92\x4a\x91\x58\xa0\xae\x7c\x5d\x9e\x7f\xc8\x8c\x69\x9b\xa7\x39\x48\xc2\x79\x47\x73\x73\x95\xba\xb4\x30\xa8\x80\x0c\xa4\x92\xd7\x49\xca\x2f\xf7\x4c\x42\x2e\xfc\x37\xf1\xaf\x67\xdb\xfa\x3f\x46\x28\x59\xcc\x05\xd2\x98\x28\x7e\x87\x04\xc7\xd4\x7f\x2f\xfe\x6d\xe8\x5f\x47\x33\x67\xd4\x02\xc9\x7d\xf8\x16\x66\x18\x8f\x89\xfe\x0a\x18\x2f\x09\x81\xb1\x0f\x95\x08\x35\x02\x85\xcb\xaf\x05\x7d\x6d\x80\x22\x60\x74\xc3\xf8\x2c\x16\x4b\xd6\xa7\x45\x40\x85\x0e\x27\x86\xcb\x25\x86\x4f\x3a\x4b\x5c\xc1\x04\x22\x78\xf1\xcf\xaa\xaf\x04\x63\x52\x47\x5d\xc1\xbd\xad\x3f\x5c\xcb\xaf\x7c\xfc\xba\x25\x2e\x11\xf2\x63\x29\xf1\xdc\x09\xf3\x46\x51\x02\xfc\xa5\x00\x35\x1a\x6f\x2e\x55\x92\x2a\x6d\x0e\xdd\xe2\xf3\xb8\x1c\xfe\x0d\xf4\x9d\x48\xd0\xe6\x92\x75\xec\x66\x4a\xc5\x08\xb2\x3d\x0f\xee\x54\x94\x57\xb3\x46\x22\x1c\x4e\x80\x53\xa4\xce\x41\xa4\xf9\x64\x69\x15\x27\x35\x6b\xef\xa0\x7a\xde\xab\x13\xfd\x83\xde\x59\x61\xeb\x2e\x11\x89\x49\xe4\xf3\xed\xe7\xf0\x4f\xf9\xfc\x27\xb7\xa7\xf2\x80\xd0\x33\xe4\x68\xaf\x9f\x51\xf2\xa9\xca\x41\xda\x50\xd4\x2f\xc4\x0f\x69\xac\x20\xba\x67\xe0\xac\x51\x48\x7b\x7a\xeb\x07\x77\xf3\x63\x45\xb0\xc0\x81\xb5\xde\x82\xe6\x2b\xb5\x92\xb9\xc1\xe3\xf6\xad\x2f\x18\x2e\xa5\x08\x21\xfe\x85\x99\xc4\x2c\x63\x74\x7a\xe1\xfd\xa7\x59\x19\xcc\x5b\x15\x1a\x52\xba\x0c\xd1\x85\xc8\x2d\x4b\xe6\xa6\x29\xe5\x6f\x33\x12\x2d\xb3\x52\xa1\xa1\xad\x52\x1f\x48\x96\xef\x27\x75\xfb\xde\x74\xfb\x84\x7f\x67\x82\x0c\x51\xfe\xb4\x4c\xd0\xee\xa9\xd6\x36\x69\xda\xa6\x3f\xd7\x20\xb1\xab\x67\xb6\xf5\x20\x4b\x09\xdc\x59\xa9\xda\x2a\x42\x6b\xe2\xee\x20\x42\x4b\x14\xcb\x37\x7f\xbd\x39\x1b\xa2\xc8\x58\x08\xf1\xa7\xea\xea\x32\x87\x58\xe3\xa4\x12\x17\x3f\x6c\x8e\x5b\x7b\x6f\x41\x6b\x19\x63\x6e\x42\x6b\x0c\xa7\x25\xb5\x45\xe1\x1f\x10\x67\xc3\xce\x80\x1d\x33\x6b\xcb\x23\x4e\xe0\x87\x33\xa7\xd9\x39\x7b\x50\xa8\x21\x6c\x78\xb7\x9e\xb5\xa0\x39\x01\xab\xce\x7f\xee\xa6\xfa\x0a\x19\xc4\xb0\x83\x7d\x47\x82\x39\x62\xb6\xd3\x8f\x3d\x28\x87\x94\x08\xad\xb7\xbb\xe2\xde\x5c\x23\x04\xe7\x14\xde\xba\xa1\xac\x48\xf0\x61\xbb\x4d\xa8\x24\x93\x6a\x44\xb1\xd3\x59\x48\x53\x94\x7b\x00\xee\x18\x3d\xe3\x85\x86\x71\x16\xcc\x4d\x28\x87\x07\xd0\x34\xcc\xa3\x04\xd1\x4a\x05\xaf\x65\xce\xdf\x7c\xef\x9c\x8b\xba\x49\x32\x5f\xee\x9f\x2c\x1b\xfd\x75\xad\x87\xbb\x73\x41\x2a\x4b\xfb\x78\xd1\x08\x18\xb3\x6d\x1b\x00\x63\xde\x1d\x1a\x00\xe3\x5f\xa1\x1a\x18\x37\xae\xec\xf0\x8e\xb9\xf1\xd6\x72\xb0\xba\x93\xec\xb7\xee\x1a\xcc\x77\x98\xcc\x90\x86\x5d\xb7\x12\x60\x24\x51\xfb\x75\xa0\x9e\xed\xba\x66\xdb\xde\x19\xbb\xc9\x0d\x2b\x5f\x5b\x38\xb4\x23\xae\x7d\xf2\x1d\xfa\x8d\x59\x46\xc0\xb8\xf9\x0e\x92\xdf\x43\xba\x81\xe4\x9b\x4c\x46\xbd\x20\x74\xb8\xb7\x50\xb4\x00\x29\xb4\x99\x80\x3e\xab\xd8\x71\x87\x61\xe0\xdc\x33\x50\xe3\x9a\x6b\xa8\x5b\x14\x83\xe0\xba\x39\x66\x0c\xaa\xff\xdd\xae\x52\x9b\xb4\x69\xa1\xb2\x83\x5e\xf6\x30\xdb\x5c\x6f\x77\x47\x9f\x05\x4d\x99\xaa\xd0\x6b\x2d\x33\x22\xc6\xac\x18\x25\x04\x77\xcd\x78\x77\x37\x7b\xfb\x75\xd1\xd2\xbe\x31\x67\xa0\x12\xc2\x15\xea\x90\x44\x6a\xbb\x74\x1c\x18\xc9\xa5\x32\xff\x01\xe0\xa8\x43\xd0\x71\x2a\x58\xb8\x41\xd6\x3b\xe4\xbf\xd6\xa6\xf7\x9e\x06\x6e\x03\x2d\x56\x83\x23\x60\x84\xd3\xfd\xf6\x52\x8c\x33\xf6\x21\xad\x09\x65\xd4\xfe\x58\x62\x18\xba\x43\x76\x5d\x2e\x2b\x65\xba\xb5\x74\x3a\xea\x4e\x7b\x2d\x68\xcd\x4f\x17\xad\x5d\xf1\xb3\xfb\xf4\x80\x26\x37\xc9\xff\xbd\x4e\xfe\x0f\x00\x00\xff\xff\x65\x2b\x80\x1b\x5c\x24\x00\x00")

func schemasIntellectual_assetJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasIntellectual_assetJson,
		"schemas/intellectual_asset.json",
	)
}

func schemasIntellectual_assetJson() (*asset, error) {
	bytes, err := schemasIntellectual_assetJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/intellectual_asset.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasMaterial_assetJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x0c\xad\xc7\x34\x5a\x8b\x15\x18\x72\x2b\x86\x62\xc8\x80\x75\x03\xda\xed\x32\x0c\x83\x6a\xd1\x09\x33\x4b\x76\x29\x69\x59\x30\xe4\xdf\x07\xc5\x4e\x6a\x3b\x8e\x5c\x24\x69\xd2\x83\x2f\xa4\xf5\xf8\x48\x3e\x91\xfa\xd7\x8b\x22\x86\x92\x0d\x23\x36\xb1\x36\x37\x43\xce\x67\xb3\xd9\x60\x8a\x26\x1e\x88\x78\xe0\x7e\x73\x92\xc6\x70\x13\x4f\x40\x09\xae\x84\x05\x42\x91\xfe\x12\xc6\x80\x1d\x4c\x4d\xa6\xf9\x1b\xd6\xf7\x18\x67\xc5\x2f\x2b\xa0\x21\xe7\xde\x7b\x5e\x58\x07\x19\x8d\xb9\x24\x91\xd8\xf3\xb7\xef\x4a\xb0\xf2\x9c\x84\x04\x35\x5a\xcc\xb4\x61\xc3\xc8\xd3\x89\x22\x96\xd1\x58\x68\x34\xc2\x9b\xd7\xd6\x28\x62\x76\x9e\x83\x8f\x90\x3d\x4c\x21\xb6\x4b\x80\xa5\x3d\xa7\x2c\x07\xb2\x08\xa6\xf2\x77\x03\xe7\x13\x9a\x78\x24\x6b\xfe\x0a\x22\x6a\x0b\x63\x20\xb6\xf6\x2d\xfa\xed\x30\xb7\x42\x41\x13\xe4\x8c\x20\x79\x66\x05\x7d\x3c\x53\x16\x8e\x57\x72\xe7\x3a\xd3\x37\x2a\xb7\xf3\x3b\x4b\xa8\xc7\xdd\x3c\xee\x0b\xe2\xc1\x64\xfa\x55\xa7\x42\x8d\xca\x29\x36\x8c\x2e\xea\x76\xf1\x77\x65\xbf\xea\x8c\x7a\x2d\x25\x81\x31\x47\x2d\x40\xaf\x41\x89\x11\x3c\x3a\x24\xf0\xbd\xfc\x11\xec\x75\xa8\x85\xa1\xb2\x76\x24\x5f\x7a\x7f\xae\x09\x09\x29\x97\x49\x88\xf4\x6b\x55\x88\x89\x48\x0d\xf4\x2a\xdc\x59\x0e\x64\xf6\x53\x74\x81\xf0\xcd\xe1\x86\x92\x8f\x25\xc2\x82\xc1\x48\x82\xb6\x98\x20\xd0\x36\x11\x0a\x22\x31\xaf\x4b\x10\x2d\xa8\xa6\x76\x2a\xcc\xeb\x5c\x36\xe2\x54\x0e\x2d\x9a\xca\x1e\x95\xc8\x17\x01\xca\x37\xda\xa2\x4d\x41\x81\xb6\xfb\x73\x0e\x5d\xb5\xed\x97\xad\x76\xdd\x2e\x2f\x9f\x95\x51\xcd\xe1\x34\x3e\x3a\x58\xf9\x2c\x39\x08\x24\xfc\xa5\x7d\x8a\x1e\xb4\x4b\xb5\x49\xbd\x6f\x87\xae\x93\x04\x53\x3c\x10\xdf\x03\x74\xe8\xfd\x0b\x37\xe8\x23\xfe\x81\x93\x2e\x94\x82\xc6\x87\x8d\x6a\x1f\x37\xfe\xdd\x89\xe3\xdf\x43\x0a\xf9\x24\xd3\x70\xeb\xd4\xc3\xe6\x40\x3b\x2e\x99\xcf\x02\xd3\x6d\xe2\x37\xc5\xe9\x9a\xe0\x92\x8c\x94\xf0\x03\x8d\x81\xf2\x47\x43\xf3\xc0\xbd\xc6\xbd\x5d\xd9\x68\xa1\x2d\x13\x1c\xe7\xe1\xd1\x17\x9c\x33\x81\x4b\xd9\x76\x51\xda\xc4\xdb\x29\xa8\xf6\x26\xb7\xf5\x67\xdf\xa7\x45\xeb\x5a\xde\xf1\x91\xf1\x84\xf5\x5d\xa4\xee\xc4\x33\xea\x89\xcc\x0b\x3c\x7c\xaf\x76\x14\x6d\xb3\x42\x5d\xac\x77\xe8\x6e\xcf\x7f\x8b\xde\xff\x00\x00\x00\xff\xff\x19\xd6\xa5\x53\xa7\x0d\x00\x00")

func schemasMaterial_assetJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasMaterial_assetJson,
		"schemas/material_asset.json",
	)
}

func schemasMaterial_assetJson() (*asset, error) {
	bytes, err := schemasMaterial_assetJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/material_asset.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasResearch_objectJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x59\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\x08\xda\x1c\x1d\x2b\x1f\xbb\xd8\x85\xaf\xdb\x14\x0d\x0a\x34\x81\x93\xf6\x52\x14\x01\x2b\x8d\x6d\xa6\x12\xa9\x0e\xe9\xb8\x46\xe1\xff\x5e\xd0\x92\x4d\x49\xa6\x18\x53\x96\x6c\xe7\x90\x43\x24\xf1\xcd\x9b\x79\x1c\xce\x78\xf8\xbb\xe7\x79\x3e\x8d\xfc\xa1\xe7\x4f\xa5\x4c\xc5\x30\x08\xe6\xf3\xf9\xe0\x99\x8a\x70\x40\xc2\xc1\xec\x47\x80\x91\x10\x81\x08\xa7\x90\x90\x00\x41\x00\xc1\x70\xfa\xc4\xbf\x3f\x43\x28\x07\xcf\x82\xb3\xe0\x2f\xbf\xaf\x40\xce\xb2\x6f\xd6\x48\xc3\x20\x50\x6f\xcf\xb3\xa7\x03\x8e\x93\x20\x42\x32\x96\xe7\x17\x7f\xe7\x68\xf9\xba\x08\xc6\x94\x51\x49\x39\x13\xfe\xd0\x53\x7c\x3c\xcf\xcf\xf0\x37\xff\x7b\x9e\x2f\x17\x29\x28\xec\xfc\x4d\x7f\xfd\x3c\x45\x9e\x02\x4a\x0a\xa2\xf0\xf5\x06\xe1\xf3\x6c\xe5\x9b\x7e\xae\x88\x22\x8c\x77\xf4\x57\x19\x15\xb9\x97\x41\x81\x68\xc0\x38\xbb\x49\x52\xb9\x78\x90\x48\xd9\xc4\xdf\xc0\x2f\xfb\x55\x06\x8f\x54\xc6\x70\x5c\x0a\xf7\x80\x82\xb3\x11\xdf\xe6\xb1\x0e\x2a\x41\x24\x0b\xbf\x5f\x7c\x45\x25\x24\xa2\xf2\xbd\xe7\xf9\x39\xf1\x32\x95\x54\x1b\x28\x7c\xbd\x2c\xe1\x25\x94\xdd\xe6\x90\x97\x16\xae\xef\x40\x84\x48\x53\x85\x7b\xdc\xa0\x8d\xe8\x64\x2a\xab\x01\x68\x10\xb0\x33\x63\xc4\x30\x43\xdf\x3b\x5a\x44\xb6\xa0\xa9\x99\x62\xa4\xb0\xf7\x25\xf8\x11\x16\x73\x8e\x51\x8b\x71\xec\x42\x7d\xcf\x5b\x5a\x7c\xf8\x9f\x48\x98\x70\x5c\xbc\x65\x1f\x46\x20\xf8\x0c\x43\x78\xcc\x38\x1b\xfd\xa0\x4c\xc2\x04\xd0\xaf\xea\x4c\x93\x59\xa2\x64\x2e\x3f\x27\xbf\xf2\xe7\x57\xff\x59\xec\x7e\x21\xf1\xac\x6d\x83\xd7\x16\x7b\xb7\x11\x30\x49\xc7\x14\xb0\xab\xb4\xa0\xda\xc2\xbe\xc9\x31\x82\x98\x48\x88\x8e\xc6\xd9\x42\xed\x0e\x27\x84\x51\x41\xd4\xfa\x76\x0a\x87\x99\x19\xaf\xda\xd9\x91\xdf\xbd\xea\x44\xf0\x65\xb5\xee\xe6\x05\x98\x3c\x68\x72\xaa\x8d\x1b\xc7\x10\xca\x19\x89\x9f\x88\x10\x20\x4d\x99\x9a\x6e\x71\xdc\xd1\xb9\xf7\xb4\xcd\x80\xb7\xe6\xcf\x98\xd6\xea\xd3\xab\xb8\xe2\x23\xfc\x9c\x51\x04\xd5\x7b\x7d\x35\xf6\x64\x35\x7d\x92\xad\x77\xb1\xf6\x0a\x75\xf5\xdb\x5c\x32\xed\xe7\x63\xcd\x29\x66\x3b\x6c\xf2\x57\xdf\x36\x01\x20\x51\xb4\x0a\x1b\x89\xef\x8b\x0d\xea\x98\xc4\x02\x7a\x85\x58\xf9\xd4\x94\xfd\xce\xdd\xae\x46\x31\x9e\xb8\x87\x6a\x9d\x34\x8d\x0e\x0a\xcd\xa5\xb9\xd0\xa0\x3a\x45\x29\x67\x1d\x58\xbc\xfe\xd7\x79\x8b\x57\x85\xa8\x0f\x4e\xf3\x2d\x83\xd5\xd6\xd4\x79\xbb\x64\x08\x0f\x92\x48\x48\x0e\x7d\x78\x36\xe9\x6c\xdc\xaa\x6b\xe6\xdd\x07\x1e\x47\x6d\x96\xd4\x93\x70\x2d\xa6\x21\xb0\xb0\xb3\x72\xbc\x86\x6f\x4e\x90\x84\x21\x88\xce\x7e\x36\xe5\xe8\x8e\xf4\x76\x4c\xdd\x6a\x52\xd4\xed\x28\x83\x1c\xdb\x01\x68\x9e\xdd\xdb\x12\x3b\xa7\x77\x0e\xf1\x89\x24\x47\xab\x04\x39\x85\xfa\xde\xb6\x53\x22\x3b\x2a\x5e\x8c\x93\x95\x7b\x73\x35\xb7\xf2\xc1\x59\xcc\x0c\xa1\x83\xea\xf6\x8f\x25\x81\x6b\x4b\xc3\x29\xc8\x56\x88\x48\x73\x61\x42\xbe\xea\x78\xcb\x73\x26\x67\x71\x34\xca\x31\x27\x8d\x9a\xc5\x31\x53\x5e\xb3\xb8\xab\x4e\x6f\xbd\x56\x7f\x33\x66\xe8\xe6\x5f\x22\x46\x3e\x6f\x7b\x0a\xa5\xfd\x78\xdb\x93\x28\xed\x87\x65\xc8\x7b\x72\xae\xb8\xb5\x3f\xda\xc7\x13\x9f\x1f\x6b\xa2\xa7\x35\x7e\x2a\x04\xf0\x14\xa7\x63\x9a\x5e\x9b\x97\x2a\x66\x5e\x35\xb7\x2a\xaf\x9d\xbd\xa7\x35\xb9\xdb\xb1\xa4\x57\xea\x68\x7d\x6d\x7b\xf5\x3c\xb1\x25\x63\xf3\x6e\x61\xcb\xdb\x7d\x6e\x26\x0b\x58\x7b\xd4\xea\x84\x48\x40\x6a\x1b\xd8\x95\x0c\x19\xb7\x0d\x5a\x36\x48\xd3\x29\xcd\x85\xb3\xf8\x25\x9e\x55\x76\xcd\x35\x4b\x4d\x19\xea\xac\x56\x86\xd2\xa9\x4e\xb9\x89\x43\x29\x74\x75\xe5\xac\x50\xce\xb0\x3d\x6d\xa2\xf2\xc5\xa5\xb3\x2a\x6a\xbd\xf5\x6e\x49\x64\x95\xbc\x14\x82\x31\xc7\x84\xa8\xb6\x74\xb5\xfc\x5c\xd2\x04\xcc\x41\x57\xaf\xbb\x18\x60\xba\xa7\x86\xf6\xd3\x44\xaf\x41\xfc\x7b\xea\x6f\xd9\xfb\x13\x00\x00\xff\xff\xa7\xe3\x56\x45\xf7\x21\x00\x00")

func schemasResearch_objectJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasResearch_objectJson,
		"schemas/research_object.json",
	)
}

func schemasResearch_objectJson() (*asset, error) {
	bytes, err := schemasResearch_objectJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/research_object.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _schemasTypesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xb1\x0e\x82\x30\x10\x86\x77\x9e\xe2\x72\x3a\x42\x4f\x13\xa7\xee\x6e\x6e\x3e\x01\xa1\x05\x8a\xe1\x4a\x7a\x67\x08\x31\xbc\xbb\xa9\x80\x43\x97\xef\xcb\xd7\xff\x3e\x05\x00\x06\x87\x16\xb0\x57\x9d\xc4\x12\xcd\xf3\x6c\x86\x20\x8d\xa9\x1b\xf3\x7e\x51\x72\x22\x24\x4d\xef\xc7\x9a\x74\x99\xbc\x98\x41\x22\xd3\x09\xcb\x9c\x9e\x37\x73\xf4\x96\x28\xdb\x6a\xa3\x26\xa6\x8e\x5c\xaa\x5b\xad\x2e\xb7\xfd\x8f\xbd\x73\xbe\x0d\x1c\x34\x44\x16\xb4\x90\xaf\x00\x40\x8e\x7c\x1f\x27\x5d\x9e\x9a\x02\x77\x7f\x0e\x80\x79\x38\x6f\xc8\x66\xca\x83\x8f\x81\x1f\x9e\x3b\xed\xd1\xc2\xf5\x07\xd7\x22\xbf\xb5\xf8\x06\x00\x00\xff\xff\xe7\x42\x93\x67\xd9\x00\x00\x00")

func schemasTypesJsonBytes() ([]byte, error) {
	return bindataRead(
		_schemasTypesJson,
		"schemas/types.json",
	)
}

func schemasTypesJson() (*asset, error) {
	bytes, err := schemasTypesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "schemas/types.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataCreateReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x41\x8b\xfa\x30\x10\xc5\xef\xf9\x14\x03\xc2\x1f\x3d\xb4\xf9\x7b\x75\x4f\xa2\x5e\x04\x15\xac\x37\x91\xed\x34\x9d\xb6\x91\x36\xc9\x66\xa6\xb0\x7e\xfb\xa5\x76\x5d\x44\xf6\xba\x97\xc0\x64\xde\x7b\xbc\xdf\x4c\x60\x47\x82\x25\x0a\xc2\x2a\x12\x0a\x29\xb5\x23\x66\xac\x09\x4e\xb7\x40\x0b\xc8\x1f\xfb\x71\x9d\xa7\x4a\xad\x89\x4d\xb4\x05\x31\x20\x6c\xb3\xc3\x1e\x02\xde\x5a\x8f\x25\xf8\x0a\xba\x47\x9a\xaf\x00\x1d\x9c\x0f\xc5\x95\x8c\x5c\xa6\x8d\x48\xe0\x85\xd6\xb5\x95\xa6\x2f\x52\xe3\x3b\xbd\xb5\x6c\x8e\xeb\x2c\xd3\xb1\x64\x4e\x0c\x3a\xef\xac\xc1\x36\x19\xec\x49\xe7\x4b\x6a\xb5\x44\x22\x3d\x4f\xe7\xe9\x7f\x1d\xa2\x0f\x14\xc5\x12\xeb\x31\x73\x06\xd2\xa0\x80\x65\xa8\xc9\x51\x44\xa1\x12\xca\x3e\x5a\x57\x03\x42\xbe\x3a\x6e\x96\xa7\x4d\x0e\x83\x09\xc5\x7a\x97\x2a\x35\x99\x40\x66\xc8\x61\xb4\x9e\x95\x4a\x20\x23\x27\x20\x1e\xb8\x2f\x46\xa0\xc8\xc3\xe8\xbc\xd8\xea\x36\xa6\xff\xe0\x54\x3e\xfe\x39\x4f\x83\x0c\x05\x91\x03\x73\x3f\x75\x39\x56\x3e\xd2\x47\x4f\x2c\x43\xe1\xcd\x27\x76\xa1\xa5\xc5\x3f\x57\x70\x78\x7b\x7e\xcf\x79\x1c\x65\xe9\x95\xbd\xcb\x2f\xd3\xe7\x71\x36\xb0\x9a\x86\x3a\xfc\xc5\xf9\xe2\x7f\xe7\xbb\xf0\x25\xe6\xf9\x77\xf6\xdd\x8a\x83\x77\x4c\x4a\xed\xf5\x32\x55\x5f\x01\x00\x00\xff\xff\x11\x1b\x89\xbb\x47\x02\x00\x00")

func messagesBodyMetadataCreateReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataCreateReadmeMd,
		"messages/body/metadata/create/README.md",
	)
}

func messagesBodyMetadataCreateReadmeMd() (*asset, error) {
	bytes, err := messagesBodyMetadataCreateReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/create/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataCreateRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\x4d\x6f\xe3\x2c\x10\xc7\xef\xf9\x14\x96\xcf\xbd\xf4\xda\x5b\x95\xb6\x4f\xfb\x6c\xfa\xa2\x24\xdd\xcb\x2a\x07\x82\x27\x09\xbb\xb6\xb1\x00\xa7\xca\x46\xf9\xee\x2b\xf0\x4b\xc0\x0c\xd8\x87\x95\xb6\x87\x2a\x62\xfe\x86\x99\xe1\xcf\x0f\xce\xb3\x24\x49\xf9\xf6\x27\x50\xf5\x59\xb3\x2c\xbd\x4b\x52\xa9\x04\x2b\xf7\xe9\xcd\x35\xb2\x66\x2a\x07\x3c\xf4\x01\x42\xf2\x72\xc9\x4d\xfc\xc7\x2c\x49\x92\xe4\x6c\xfe\x27\x49\x5a\x99\x58\x7a\xd7\x8f\xf4\x63\xc8\x52\x4e\xfc\x25\x83\x52\xb1\x1d\x03\xd1\xcf\xda\xfc\x9d\xad\xdf\x88\xfa\x3b\xc9\xeb\x61\xa2\x11\xf9\xfa\x54\x69\xf5\xad\xa5\xba\xf4\xbf\x37\x5e\x56\x8f\xa5\xd2\x8d\x28\xa0\x54\x83\xb4\x6e\x23\x5f\xbd\x8b\x3d\x29\x99\x24\x8a\x99\x5e\x44\xaa\xe1\x96\xf2\x7f\x26\xe9\x8b\xee\xd1\xed\x4d\x58\xf4\x46\x8a\x48\xb5\xb6\xb2\xab\x34\x22\xb9\xcf\x32\x01\x52\x5a\xf3\x4d\x6c\xcb\xfd\x6e\xc7\x72\x86\xd5\x17\x6b\xcb\x7f\xec\x08\xe1\x02\x5a\xd1\xbc\x8c\x45\x57\xd1\xe8\x1a\x72\xa8\x0e\xbc\x84\xb7\xba\xd8\x1a\x23\x05\xa5\xaf\x84\xe5\xb1\xf8\x7b\xed\x77\xe5\xd2\xa9\x52\xd1\x98\xbf\x29\x56\x37\x6a\x63\x9d\x8f\x07\x90\x54\xb0\xaa\x6d\x0e\x72\x80\x96\x6c\x7f\x50\xd2\x3f\x3c\xc2\x8c\xaf\x14\x51\xbe\xe1\x06\xa9\x6c\x6e\xdc\x8f\x9e\x79\x9e\x0d\x4e\x4e\xf0\x8b\x9c\x51\x28\x29\x38\x62\xdb\x96\x9d\x20\x62\xb5\x4e\xe2\x1c\x5a\xcf\x43\x17\x6f\x69\x42\x69\xe3\xb7\xc0\xca\x4d\x1c\x73\x6e\x1b\xb2\x9b\x13\x5e\x0f\xdf\x16\xa2\x10\x60\x65\x44\x41\x08\x21\x26\xe8\x00\x63\x38\xe7\x37\x38\x7d\x71\x91\x5d\x2b\xb2\x72\xb2\x75\x73\xa2\x60\xcf\xc5\x69\x4c\xb7\x04\xc9\x6b\x41\xc1\xee\x40\x1b\xea\x92\xb4\xc7\x10\x66\xf6\x85\xb1\x51\x42\x5a\x92\x61\xc7\x53\x01\xb9\x03\x11\xb4\xfa\xa5\x16\x41\xf6\x8f\xb3\xb0\x61\x8b\x5f\x4a\xdc\xc5\xb1\x75\x35\x8d\xe1\x77\x1a\x7a\x47\xb0\x3b\x0d\xb9\x13\xe1\xf2\x21\x40\x82\x38\x9a\xb9\x1e\x8f\x36\x25\xae\x77\xf0\x50\x12\x6c\xbd\xa7\xf4\x76\xc0\x53\x3c\x80\x72\xc9\x89\x66\xf9\xc4\xb0\x7d\xd8\xb1\x1c\x02\xcf\x00\x13\x43\x69\xe2\x28\x02\x5b\x60\x62\x2b\xf6\xdb\xcd\x5d\x0f\x2e\xc8\x16\x30\xce\x9b\xa0\x26\xc2\x5c\x80\xf6\xb0\x6b\x8b\x18\x14\x30\x2c\xd8\xbb\xa7\x27\xee\x01\x6f\xcd\x19\x83\xbb\x07\x6b\xf7\xf6\x0c\x22\x7e\xe4\x3b\x0c\xf4\xde\x0b\x64\x1c\xf6\x53\x71\x1f\x7a\x32\x20\xd0\xf7\xb2\x08\x83\x7f\x1a\xfa\x9d\xb5\xd1\x3d\x99\x1f\x80\xfe\x92\x75\x11\xbe\x7c\x68\xab\x08\xbe\x54\x2d\x0d\x7a\x45\x75\xc1\xa1\x75\x22\x17\xa2\xce\xec\x89\x8b\x82\x74\x47\x0f\x35\xea\x9c\x17\x15\x97\x4c\x1f\xc2\x05\x1c\xc3\x86\x7e\x26\xf2\x95\x15\x9d\x37\x95\xa8\xc1\xf3\xfb\x2b\xcf\xf4\x06\x66\xe1\x36\xc4\xcd\x8f\xdb\x3f\x54\xda\x47\xd3\xca\x09\x8f\x12\xc3\x06\xe9\x1f\xe0\x30\xef\xbc\xc4\x27\x73\x0f\x57\xa3\x5b\x3a\x91\x7f\xe1\x0e\x7c\x56\x39\x27\x99\xf6\x6e\x2d\xbd\xe2\x56\x8a\x0b\xb2\x87\x40\x74\x41\xa4\x7a\xe0\x5f\xa5\x9e\xe0\x6f\x13\x6a\x0d\xf4\x50\x32\x4a\xf2\x7b\xa5\x04\xdb\xd6\x0a\xe4\xf4\x7d\x6a\xd3\x5e\x70\x4a\x90\x47\xee\x50\xe6\x5f\xde\xb3\xcb\xec\x4f\x00\x00\x00\xff\xff\x94\xac\xba\xc0\x84\x0e\x00\x00")

func messagesBodyMetadataCreateRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataCreateRequestJson,
		"messages/body/metadata/create/request.json",
	)
}

func messagesBodyMetadataCreateRequestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataCreateRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/create/request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataCreateRequest_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xb1\xce\x83\x30\x0c\x04\xe0\x9d\xa7\x40\xf9\xff\xb1\xe4\x3a\x74\xe2\x65\x90\x49\x0c\x84\x0a\xd2\xda\x46\xa8\xaa\xfa\xee\x15\x02\xf6\xae\xbe\xb3\xbe\x7b\x17\x65\xe9\x52\x74\x75\xe9\x06\xb3\x87\xd6\xc0\xba\xae\x7e\x4c\x1a\x3c\x05\xbf\xdc\x21\x51\x15\x1a\x06\x9e\x08\x13\xab\x52\xcf\x8a\x36\xc7\x17\x26\x36\x8a\x64\x84\x20\x4c\xc6\x10\x7e\x2e\xac\xd6\xec\x65\x3f\x6a\x9e\xf1\xe7\x2e\x9b\xf0\xbf\xdf\x4e\xa6\x06\xb6\xb4\x3a\x9a\x59\x7a\x44\xa1\xce\xaa\xeb\xed\xa0\xce\x3f\xe1\xee\xc7\x6d\xc2\xca\x24\x61\x68\x72\x3b\x72\xb0\x83\x47\xe4\x2e\xcd\xc9\x52\x9e\x15\x7b\xe2\x8a\x4f\xf1\x0d\x00\x00\xff\xff\x7a\x9a\xdd\x2b\xf7\x00\x00\x00")

func messagesBodyMetadataCreateRequest_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataCreateRequest_schemaJson,
		"messages/body/metadata/create/request_schema.json",
	)
}

func messagesBodyMetadataCreateRequest_schemaJson() (*asset, error) {
	bytes, err := messagesBodyMetadataCreateRequest_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/create/request_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataDeleteReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\xc1\xca\xdb\x30\x10\x84\xef\x7a\x8a\x85\x40\xf9\x73\xb0\xd5\x5c\xd3\x53\xc1\xbe\x84\x26\x81\x38\xb7\x10\xea\xb5\xb4\xb6\x15\x6c\x49\xd5\xae\xa1\x79\xfb\xe2\xb8\x29\x21\xf4\xfa\x5f\x04\xab\x9d\x19\xe6\xdb\x15\xec\x49\xd0\xa2\x20\x14\x34\x90\x90\x52\x7b\x62\xc6\x8e\xe0\x7c\x8f\xb4\x85\xfa\xb9\x5f\xd6\x75\xae\x54\x41\x6c\x92\x6b\x88\x01\x61\x57\x1d\x0f\x10\xf1\x3e\x04\xb4\x10\x5a\x18\x9f\x69\xa1\x05\xf4\x70\x39\x36\x37\x32\x72\xfd\xe8\x45\x22\x6f\xb5\xee\x9c\xf4\x53\x93\x9b\x30\xea\x9d\x63\x73\x2a\xaa\x4a\x27\xcb\x9c\x19\xf4\xc1\x3b\x83\x43\x36\xdb\xb3\x31\x58\x1a\xb4\x24\x22\xbd\xc9\x37\xf9\x57\x1d\x53\x88\x94\xc4\x11\xeb\x25\x73\x0d\xd2\xa3\x80\x63\xe8\xc8\x53\x42\x21\x0b\x76\x4a\xce\x77\x80\x50\x17\xe5\x8f\xf2\x5c\xd6\x30\x9b\x50\x5c\xf0\xb9\x52\xab\x15\x54\x86\x3c\x26\x17\x58\xa9\x0c\x2a\xf2\x02\x12\x80\xa7\x66\x01\x4a\x3c\x8f\x3e\x88\x6b\xef\x4b\xfa\x3f\x9c\x36\xa4\x4f\xe7\xe9\x91\xa1\x21\xf2\x60\x1f\xa7\xb6\x4b\xe5\x13\xfd\x9a\x88\x65\x2e\x5c\xfe\xc6\x31\x0e\xb4\xfd\xe2\x1b\x8e\xdf\x5e\xdf\x4b\x9d\x16\x59\x7e\xe3\xe0\xeb\xeb\xc7\xeb\xb8\x9e\x59\x4d\x4f\x23\xfe\xc7\xf9\xe6\xff\xc9\x0f\xe1\x5b\xcc\xeb\xef\xfa\x6f\x2b\x8e\xc1\x33\x29\x75\xd0\xdf\x73\xf5\x27\x00\x00\xff\xff\x57\x41\x68\xae\x47\x02\x00\x00")

func messagesBodyMetadataDeleteReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataDeleteReadmeMd,
		"messages/body/metadata/delete/README.md",
	)
}

func messagesBodyMetadataDeleteReadmeMd() (*asset, error) {
	bytes, err := messagesBodyMetadataDeleteReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/delete/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataDeleteRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\xca\x4f\xca\x4a\x4d\x2e\x09\x2d\xcd\x4c\x51\xb2\x52\x50\x2a\x2e\x29\xca\xcc\x4b\x57\xe2\xaa\xe5\x02\x04\x00\x00\xff\xff\xf6\xdd\xf9\xff\x1d\x00\x00\x00")

func messagesBodyMetadataDeleteRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataDeleteRequestJson,
		"messages/body/metadata/delete/request.json",
	)
}

func messagesBodyMetadataDeleteRequestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataDeleteRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/delete/request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataDeleteRequest_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\xae\x82\x30\x10\x45\xf7\xfd\x8a\x49\xdf\x5b\x4a\xc7\x85\x2b\xfe\xc3\x95\x31\xa6\xb4\x23\x14\x85\x62\x67\x08\x21\x86\x7f\x37\x05\x4c\xdc\xce\x9c\x7b\xcf\x7d\x2b\x00\x1d\xbc\x2e\x41\x37\x22\x03\x97\x88\xd3\x34\x99\x36\xb0\x33\xd6\x99\xf1\x81\xc9\x33\x23\xbb\x86\x3a\x8b\x1d\x31\xdb\x9a\x18\xab\xe8\x67\xec\x48\xac\xb7\x62\xd1\xd3\x93\x84\x30\xd1\x6b\x24\x96\xdb\x06\x9b\x96\x63\x8f\x7f\xfa\x90\x0d\xff\xdb\xed\xab\x29\x11\xf3\xb7\xd8\xc9\x98\x6a\xf4\xc9\xde\xa5\x38\x9e\x76\xd5\x9e\x8b\x55\x4b\x4e\xce\xe3\xba\x30\x6f\x05\xd0\x32\x0f\x94\x8b\x58\x52\xe8\x6b\xad\x00\x96\x95\xcd\xfa\x90\x28\x93\x97\x8d\xfc\x49\x2b\x80\xab\x5a\xd4\x27\x00\x00\xff\xff\xf1\x1e\x4a\x93\xef\x00\x00\x00")

func messagesBodyMetadataDeleteRequest_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataDeleteRequest_schemaJson,
		"messages/body/metadata/delete/request_schema.json",
	)
}

func messagesBodyMetadataDeleteRequest_schemaJson() (*asset, error) {
	bytes, err := messagesBodyMetadataDeleteRequest_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/delete/request_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataReadReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x8f\x41\x8b\xdb\x30\x10\x85\xef\xfa\x15\x03\x81\xb2\x3e\xd8\xea\x5e\xd3\x53\x21\x7b\x59\x48\x03\x76\x6f\x21\xd4\x63\x69\x62\x2b\xd8\x92\xa2\x19\xd3\xe4\xdf\x17\xd7\x0d\x31\x49\xa1\xbd\xec\x65\x60\x66\xde\x7b\x7c\x6f\x05\x5b\x12\xb4\x28\x08\x25\xa1\x55\x6a\x4b\xcc\xd8\x12\x7c\xbf\x46\x5a\x43\x7d\xfb\x4e\xcf\xba\x50\x6a\x43\x6c\x92\x6b\x88\x01\xe1\xbd\xda\x7d\x83\x88\xd7\x3e\xa0\x85\x70\x84\xe1\x96\x14\x8e\x80\x1e\xf6\xbb\xe6\x44\x46\x0e\x2f\x9d\x48\xe4\xb5\xd6\xad\x93\x6e\x6c\x0a\x13\x06\xfd\xee\xd8\x94\x9b\xaa\xd2\xc9\x32\xe7\x06\x7d\xf0\xce\x60\x9f\x4f\xf6\x7c\x08\x96\x7a\x2d\x89\x48\xbf\x16\xaf\xc5\x67\x1d\x53\x88\x94\xc4\x11\xeb\x39\x33\x03\xe9\x50\xc0\x31\xb4\xe4\x29\xa1\x90\x05\x3b\x26\xe7\x5b\x40\xa8\xcb\xb7\xaf\x9b\x1a\x26\x0b\x8a\x0b\xbe\x50\x6a\xb5\x82\xca\x90\xc7\xe4\x02\x2b\x95\x43\x45\x5e\xa0\xb9\x02\x8f\xcd\x5c\x27\x31\xfc\xec\xc8\x83\x74\x74\xaf\x71\x0c\x69\xea\x41\x17\xc7\x32\x45\x7f\x68\x21\xc7\x90\xe8\x3c\xba\x44\x76\x06\x2e\xe9\x3c\x12\xcb\x84\xfb\x76\xc1\x21\xf6\xb4\xfe\xe4\x1b\x8e\x5f\x96\x73\x5f\xa7\x59\x56\x9c\x38\xf8\xfa\xf0\xb2\x5c\xb3\xa9\xa9\xe9\x68\xc0\xbf\x38\x1f\xfc\x3f\xf8\xb7\xf0\x21\x66\x79\xcd\xfe\x50\x71\x0c\x9e\xe9\xdf\x58\xb3\xee\x1e\xb8\xd8\xff\x13\x6c\x76\x3c\x91\x3d\x9f\x33\xf5\x2b\x00\x00\xff\xff\xcf\xf2\xcb\xbc\xc7\x02\x00\x00")

func messagesBodyMetadataReadReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataReadReadmeMd,
		"messages/body/metadata/read/README.md",
	)
}

func messagesBodyMetadataReadReadmeMd() (*asset, error) {
	bytes, err := messagesBodyMetadataReadReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/read/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataReadRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\xca\x4f\xca\x4a\x4d\x2e\x09\x2d\xcd\x4c\x51\xb2\x52\x50\x2a\x2e\x29\xca\xcc\x4b\x57\xe2\xaa\xe5\x02\x04\x00\x00\xff\xff\xf6\xdd\xf9\xff\x1d\x00\x00\x00")

func messagesBodyMetadataReadRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataReadRequestJson,
		"messages/body/metadata/read/request.json",
	)
}

func messagesBodyMetadataReadRequestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataReadRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/read/request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataReadRequest_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6e\x83\x30\x0c\x86\xef\x79\x0a\x2b\xdb\x71\xc4\x3b\xec\xc4\x7b\xec\x34\x4d\x95\x49\x5c\x08\x15\x84\xc6\x46\x08\x55\xbc\x7b\x15\xa0\x52\xaf\xf6\xf7\xff\xdf\xff\x30\x00\x36\x06\x5b\x83\xed\x54\x27\xa9\x11\x97\x65\x71\x7d\x14\xef\xc8\xbb\xf9\x86\x39\x88\xa0\xf8\x8e\x07\xc2\x81\x45\xa8\x65\xc1\x26\x85\x15\x07\x56\x0a\xa4\x84\x99\x29\x60\xe6\xfb\xcc\xa2\x97\x03\x75\xbd\xa4\x11\x3f\xec\x57\xe9\xff\x3c\x6e\x2f\x49\x8d\x58\xbe\xd5\x49\xa6\xdc\x62\xc8\x74\xd5\xea\xfb\xe7\x14\x9d\xb9\xd4\xf4\xec\xf5\x77\xde\xf7\x95\xa5\x00\x56\xd7\x89\x4b\x91\x68\x8e\x63\x6b\x0d\xc0\xb6\xb3\x45\x1f\x33\x17\xf2\xef\x20\xdf\xd2\x06\xe0\xdf\x6c\xe6\x19\x00\x00\xff\xff\xe2\xf6\xf0\xce\xed\x00\x00\x00")

func messagesBodyMetadataReadRequest_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataReadRequest_schemaJson,
		"messages/body/metadata/read/request_schema.json",
	)
}

func messagesBodyMetadataReadRequest_schemaJson() (*asset, error) {
	bytes, err := messagesBodyMetadataReadRequest_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/read/request_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataReadResponseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\x4d\x6f\xe3\x2c\x10\xc7\xef\xf9\x14\x96\xcf\xbd\xf4\xda\x5b\x95\xb6\x4f\xfb\x6c\xfa\xa2\x24\xdd\xcb\x2a\x07\x82\x27\x09\xbb\xb6\xb1\x00\xa7\xca\x46\xf9\xee\x2b\xf0\x4b\xc0\x0c\xd8\x87\x95\xb6\x87\x2a\x62\xfe\x86\x99\xe1\xcf\x0f\xce\xb3\x24\x49\xf9\xf6\x27\x50\xf5\x59\xb3\x2c\xbd\x4b\x52\xa9\x04\x2b\xf7\xe9\xcd\x35\xb2\x66\x2a\x07\x3c\xf4\x01\x42\xf2\x72\xc9\x4d\xfc\xc7\x2c\x49\x92\xe4\x6c\xfe\x27\x49\x5a\x99\x58\x7a\xd7\x8f\xf4\x63\xc8\x52\x4e\xfc\x25\x83\x52\xb1\x1d\x03\xd1\xcf\xda\xfc\x9d\xad\xdf\x88\xfa\x3b\xc9\xeb\x61\xa2\x11\xf9\xfa\x54\x69\xf5\xad\xa5\xba\xf4\xbf\x37\x5e\x56\x8f\xa5\xd2\x8d\x28\xa0\x54\x83\xb4\x6e\x23\x5f\xbd\x8b\x3d\x29\x99\x24\x8a\x99\x5e\x44\xaa\xe1\x96\xf2\x7f\x26\xe9\x8b\xee\xd1\xed\x4d\x58\xf4\x46\x8a\x48\xb5\xb6\xb2\xab\x34\x22\xb9\xcf\x32\x01\x52\x5a\xf3\x4d\x6c\xcb\xfd\x6e\xc7\x72\x86\xd5\x17\x6b\xcb\x7f\xec\x08\xe1\x02\x5a\xd1\xbc\x8c\x45\x57\xd1\xe8\x1a\x72\xa8\x0e\xbc\x84\xb7\xba\xd8\x1a\x23\x05\xa5\xaf\x84\xe5\xb1\xf8\x7b\xed\x77\xe5\xd2\xa9\x52\xd1\x98\xbf\x29\x56\x37\x6a\x63\x9d\x8f\x07\x90\x54\xb0\xaa\x6d\x0e\x72\x80\x96\x6c\x7f\x50\xd2\x3f\x3c\xc2\x8c\xaf\x14\x51\xbe\xe1\x06\xa9\x6c\x6e\xdc\x8f\x9e\x79\x9e\x0d\x4e\x4e\xf0\x8b\x9c\x51\x28\x29\x38\x62\xdb\x96\x9d\x20\x62\xb5\x4e\xe2\x1c\x5a\xcf\x43\x17\x6f\x69\x42\x69\xe3\xb7\xc0\xca\x4d\x1c\x73\x6e\x1b\xb2\x9b\x13\x5e\x0f\xdf\x16\xa2\x10\x60\x65\x44\x41\x08\x21\x26\xe8\x00\x63\x38\xe7\x37\x38\x7d\x71\x91\x5d\x2b\xb2\x72\xb2\x75\x73\xa2\x60\xcf\xc5\x69\x4c\xb7\x04\xc9\x6b\x41\xc1\xee\x40\x1b\xea\x92\xb4\xc7\x10\x66\xf6\x85\xb1\x51\x42\x5a\x92\x61\xc7\x53\x01\xb9\x03\x11\xb4\xfa\xa5\x16\x41\xf6\x8f\xb3\xb0\x61\x8b\x5f\x4a\xdc\xc5\xb1\x75\x35\x8d\xe1\x77\x1a\x7a\x47\xb0\x3b\x0d\xb9\x13\xe1\xf2\x21\x40\x82\x38\x9a\xb9\x1e\x8f\x36\x25\xae\x77\xf0\x50\x12\x6c\xbd\xa7\xf4\x76\xc0\x53\x3c\x80\x72\xc9\x89\x66\xf9\xc4\xb0\x7d\xd8\xb1\x1c\x02\xcf\x00\x13\x43\x69\xe2\x28\x02\x5b\x60\x62\x2b\xf6\xdb\xcd\x5d\x0f\x2e\xc8\x16\x30\xce\x9b\xa0\x26\xc2\x5c\x80\xf6\xb0\x6b\x8b\x18\x14\x30\x2c\xd8\xbb\xa7\x27\xee\x01\x6f\xcd\x19\x83\xbb\x07\x6b\xf7\xf6\x0c\x22\x7e\xe4\x3b\x0c\xf4\xde\x0b\x64\x1c\xf6\x53\x71\x1f\x7a\x32\x20\xd0\xf7\xb2\x08\x83\x7f\x1a\xfa\x9d\xb5\xd1\x3d\x99\x1f\x80\xfe\x92\x75\x11\xbe\x7c\x68\xab\x08\xbe\x54\x2d\x0d\x7a\x45\x75\xc1\xa1\x75\x22\x17\xa2\xce\xec\x89\x8b\x82\x74\x47\x0f\x35\xea\x9c\x17\x15\x97\x4c\x1f\xc2\x05\x1c\xc3\x86\x7e\x26\xf2\x95\x15\x9d\x37\x95\xa8\xc1\xf3\xfb\x2b\xcf\xf4\x06\x66\xe1\x36\xc4\xcd\x8f\xdb\x3f\x54\xda\x47\xd3\xca\x09\x8f\x12\xc3\x06\xe9\x1f\xe0\x30\xef\xbc\xc4\x27\x73\x0f\x57\xa3\x5b\x3a\x91\x7f\xe1\x0e\x7c\x56\x39\x27\x99\xf6\x6e\x2d\xbd\xe2\x56\x8a\x0b\xb2\x87\x40\x74\x41\xa4\x7a\xe0\x5f\xa5\x9e\xe0\x6f\x13\x6a\x0d\xf4\x50\x32\x4a\xf2\x7b\xa5\x04\xdb\xd6\x0a\xe4\xf4\x7d\x6a\xd3\x5e\x70\x4a\x90\x47\xee\x50\xe6\x5f\xde\xb3\xcb\xec\x4f\x00\x00\x00\xff\xff\x94\xac\xba\xc0\x84\x0e\x00\x00")

func messagesBodyMetadataReadResponseJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataReadResponseJson,
		"messages/body/metadata/read/response.json",
	)
}

func messagesBodyMetadataReadResponseJson() (*asset, error) {
	bytes, err := messagesBodyMetadataReadResponseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/read/response.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataReadResponse_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xc1\x8e\x83\x30\x0c\x04\xd0\x3b\x5f\x81\xb2\x7b\x5c\x32\x7b\xe8\x89\x9f\x41\x26\x31\x10\x2a\x12\x64\xbb\x42\x55\xd5\x7f\xaf\x10\x70\xef\xd5\x33\xd6\x9b\x57\x55\xd7\x2e\x45\xd7\xd6\x6e\x32\x5b\xb5\x05\xb6\x6d\xf3\x73\xd2\xe0\x29\xf8\xc7\x1d\x12\x55\xa1\x61\xe2\x85\xb0\xb0\x2a\x8d\xac\xe8\x4b\x7c\x62\x61\xa3\x48\x46\x10\xa6\x08\x61\x5d\x4b\x56\xee\x8e\xae\x9f\xb5\x64\xfc\xb8\xbf\x1d\xf8\x3d\x6e\x97\xd2\x02\x7b\xda\x9c\xcd\x22\x23\xa2\xd0\x60\xcd\xff\xed\x94\xae\x3f\xe1\xe1\xcb\x69\xc2\xca\x24\x61\xea\x4a\x3f\x73\xb0\x93\x47\xe4\x21\xe5\x64\xa9\x64\xc5\x91\xb8\xea\x5d\x7d\x02\x00\x00\xff\xff\x8b\xe3\xab\x06\xf6\x00\x00\x00")

func messagesBodyMetadataReadResponse_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataReadResponse_schemaJson,
		"messages/body/metadata/read/response_schema.json",
	)
}

func messagesBodyMetadataReadResponse_schemaJson() (*asset, error) {
	bytes, err := messagesBodyMetadataReadResponse_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/read/response_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataUpdateReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\x41\x0b\xda\x40\x10\x85\xef\xfb\x2b\x06\x84\xa2\x87\x64\xeb\xd5\x9e\x04\xbd\x08\x6a\x31\x7a\x12\x69\x26\xbb\x93\x64\x25\xd9\xdd\xee\x4c\xa0\xfe\xfb\x12\x53\x8b\x48\xaf\xbd\x2c\xcc\xce\x7b\x8f\xf7\xcd\x0c\xf6\x24\x68\x51\x10\x2e\xd1\xa2\x90\x52\x7b\x62\xc6\x86\xe0\xfc\x88\xb4\x82\xf2\xb5\x9f\xd6\x65\xae\xd4\x86\xd8\x24\x57\x11\x03\xc2\xae\x38\x1e\x20\xe2\xa3\x0b\x68\x21\xd4\xd0\xbf\xd2\x42\x0d\xe8\xe1\x7a\xac\xee\x64\xe4\x36\x6f\x45\x22\xaf\xb4\x6e\x9c\xb4\x43\x95\x9b\xd0\xeb\x9d\x63\x73\xda\x14\x85\x4e\x96\x39\x33\xe8\x83\x77\x06\xbb\x6c\xb4\x67\x7d\xb0\xd4\x69\x49\x44\x7a\x99\x2f\xf3\xaf\x3a\xa6\x10\x29\x89\x23\xd6\x53\xe6\x02\xa4\x45\x01\xc7\xd0\x90\xa7\x84\x42\x16\xec\x90\x9c\x6f\x00\xa1\xbc\x7c\xdf\xac\xcf\xdb\x12\x46\x13\x8a\x0b\x3e\x57\x6a\x36\x83\xc2\x90\xc7\xe4\x02\x2b\x95\x41\x41\x5e\x40\x02\xf0\x50\x4d\x40\x89\xc7\xd1\x07\x71\xf5\x63\x4a\xff\x8b\x53\x87\xf4\xdf\x79\x5a\x64\xa8\x88\x3c\x0c\xcf\x53\xdb\xa9\xf2\x89\x7e\x0e\xc4\x32\x16\xde\xfe\xc2\x3e\x76\xb4\xfa\xe2\x2b\x8e\xdf\xde\xdf\x6b\x99\x26\x59\x7e\xe7\xe0\xcb\xdb\xfc\x7d\x5c\x8c\xac\xa6\xa5\x1e\xff\xe1\xfc\xf0\xff\xe0\xa7\xf0\x23\xe6\xfd\x77\xf1\xa7\x15\xc7\xe0\x99\x94\x3a\xe8\x75\xae\x7e\x07\x00\x00\xff\xff\xfb\x23\x4c\x8b\x47\x02\x00\x00")

func messagesBodyMetadataUpdateReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataUpdateReadmeMd,
		"messages/body/metadata/update/README.md",
	)
}

func messagesBodyMetadataUpdateReadmeMd() (*asset, error) {
	bytes, err := messagesBodyMetadataUpdateReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/update/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataUpdateRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x96\x4d\x6f\xe3\x2c\x10\xc7\xef\xf9\x14\x96\xcf\xbd\xf4\xda\x5b\x95\xb6\x4f\xfb\x6c\xfa\xa2\x24\xdd\xcb\x2a\x07\x82\x27\x09\xbb\xb6\xb1\x00\xa7\xca\x46\xf9\xee\x2b\xf0\x4b\xc0\x0c\xd8\x87\x95\xb6\x87\x2a\x62\xfe\x86\x99\xe1\xcf\x0f\xce\xb3\x24\x49\xf9\xf6\x27\x50\xf5\x59\xb3\x2c\xbd\x4b\x52\xa9\x04\x2b\xf7\xe9\xcd\x35\xb2\x66\x2a\x07\x3c\xf4\x01\x42\xf2\x72\xc9\x4d\xfc\xc7\x2c\x49\x92\xe4\x6c\xfe\x27\x49\x5a\x99\x58\x7a\xd7\x8f\xf4\x63\xc8\x52\x4e\xfc\x25\x83\x52\xb1\x1d\x03\xd1\xcf\xda\xfc\x9d\xad\xdf\x88\xfa\x3b\xc9\xeb\x61\xa2\x11\xf9\xfa\x54\x69\xf5\xad\xa5\xba\xf4\xbf\x37\x5e\x56\x8f\xa5\xd2\x8d\x28\xa0\x54\x83\xb4\x6e\x23\x5f\xbd\x8b\x3d\x29\x99\x24\x8a\x99\x5e\x44\xaa\xe1\x96\xf2\x7f\x26\xe9\x8b\xee\xd1\xed\x4d\x58\xf4\x46\x8a\x48\xb5\xb6\xb2\xab\x34\x22\xb9\xcf\x32\x01\x52\x5a\xf3\x4d\x6c\xcb\xfd\x6e\xc7\x72\x86\xd5\x17\x6b\xcb\x7f\xec\x08\xe1\x02\x5a\xd1\xbc\x8c\x45\x57\xd1\xe8\x1a\x72\xa8\x0e\xbc\x84\xb7\xba\xd8\x1a\x23\x05\xa5\xaf\x84\xe5\xb1\xf8\x7b\xed\x77\xe5\xd2\xa9\x52\xd1\x98\xbf\x29\x56\x37\x6a\x63\x9d\x8f\x07\x90\x54\xb0\xaa\x6d\x0e\x72\x80\x96\x6c\x7f\x50\xd2\x3f\x3c\xc2\x8c\xaf\x14\x51\xbe\xe1\x06\xa9\x6c\x6e\xdc\x8f\x9e\x79\x9e\x0d\x4e\x4e\xf0\x8b\x9c\x51\x28\x29\x38\x62\xdb\x96\x9d\x20\x62\xb5\x4e\xe2\x1c\x5a\xcf\x43\x17\x6f\x69\x42\x69\xe3\xb7\xc0\xca\x4d\x1c\x73\x6e\x1b\xb2\x9b\x13\x5e\x0f\xdf\x16\xa2\x10\x60\x65\x44\x41\x08\x21\x26\xe8\x00\x63\x38\xe7\x37\x38\x7d\x71\x91\x5d\x2b\xb2\x72\xb2\x75\x73\xa2\x60\xcf\xc5\x69\x4c\xb7\x04\xc9\x6b\x41\xc1\xee\x40\x1b\xea\x92\xb4\xc7\x10\x66\xf6\x85\xb1\x51\x42\x5a\x92\x61\xc7\x53\x01\xb9\x03\x11\xb4\xfa\xa5\x16\x41\xf6\x8f\xb3\xb0\x61\x8b\x5f\x4a\xdc\xc5\xb1\x75\x35\x8d\xe1\x77\x1a\x7a\x47\xb0\x3b\x0d\xb9\x13\xe1\xf2\x21\x40\x82\x38\x9a\xb9\x1e\x8f\x36\x25\xae\x77\xf0\x50\x12\x6c\xbd\xa7\xf4\x76\xc0\x53\x3c\x80\x72\xc9\x89\x66\xf9\xc4\xb0\x7d\xd8\xb1\x1c\x02\xcf\x00\x13\x43\x69\xe2\x28\x02\x5b\x60\x62\x2b\xf6\xdb\xcd\x5d\x0f\x2e\xc8\x16\x30\xce\x9b\xa0\x26\xc2\x5c\x80\xf6\xb0\x6b\x8b\x18\x14\x30\x2c\xd8\xbb\xa7\x27\xee\x01\x6f\xcd\x19\x83\xbb\x07\x6b\xf7\xf6\x0c\x22\x7e\xe4\x3b\x0c\xf4\xde\x0b\x64\x1c\xf6\x53\x71\x1f\x7a\x32\x20\xd0\xf7\xb2\x08\x83\x7f\x1a\xfa\x9d\xb5\xd1\x3d\x99\x1f\x80\xfe\x92\x75\x11\xbe\x7c\x68\xab\x08\xbe\x54\x2d\x0d\x7a\x45\x75\xc1\xa1\x75\x22\x17\xa2\xce\xec\x89\x8b\x82\x74\x47\x0f\x35\xea\x9c\x17\x15\x97\x4c\x1f\xc2\x05\x1c\xc3\x86\x7e\x26\xf2\x95\x15\x9d\x37\x95\xa8\xc1\xf3\xfb\x2b\xcf\xf4\x06\x66\xe1\x36\xc4\xcd\x8f\xdb\x3f\x54\xda\x47\xd3\xca\x09\x8f\x12\xc3\x06\xe9\x1f\xe0\x30\xef\xbc\xc4\x27\x73\x0f\x57\xa3\x5b\x3a\x91\x7f\xe1\x0e\x7c\x56\x39\x27\x99\xf6\x6e\x2d\xbd\xe2\x56\x8a\x0b\xb2\x87\x40\x74\x41\xa4\x7a\xe0\x5f\xa5\x9e\xe0\x6f\x13\x6a\x0d\xf4\x50\x32\x4a\xf2\x7b\xa5\x04\xdb\xd6\x0a\xe4\xf4\x7d\x6a\xd3\x5e\x70\x4a\x90\x47\xee\x50\xe6\x5f\xde\xb3\xcb\xec\x4f\x00\x00\x00\xff\xff\x94\xac\xba\xc0\x84\x0e\x00\x00")

func messagesBodyMetadataUpdateRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataUpdateRequestJson,
		"messages/body/metadata/update/request.json",
	)
}

func messagesBodyMetadataUpdateRequestJson() (*asset, error) {
	bytes, err := messagesBodyMetadataUpdateRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/update/request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyMetadataUpdateRequest_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x31\x8e\x83\x40\x0c\x45\x7b\x4e\x81\x86\x2d\x97\xf9\x5b\x6c\xc5\x65\x90\x99\x31\x30\xac\x60\x58\xdb\x08\x45\x51\xee\x1e\x11\x48\x9f\xd6\xef\xd9\xcf\xf7\xa2\x2c\x5d\x8a\xae\x29\xdd\x68\xb6\x6a\x03\xec\xfb\xee\xa7\xa4\xc1\x53\xf0\xdb\x1f\x24\xaa\x42\xc3\xc8\x33\x61\x66\x55\x1a\x58\xd1\xe5\x78\xc3\xcc\x46\x91\x8c\xb0\xad\x91\x8c\x21\xfc\xbf\xb1\x5a\x7b\xca\x7e\xd2\xbc\xb8\xef\xe3\xfe\xd7\x39\x79\x47\x1a\xe0\x60\xf5\xe5\x65\x19\x10\x85\x7a\xab\x7f\x7e\xaf\x50\x75\xed\x09\xf7\x1f\x7e\x26\xac\x4c\x12\xc6\x36\x77\x13\x07\x7b\xc5\x51\x21\x72\x9f\x96\x64\x29\x2f\x8a\x93\xb8\xe2\x51\x3c\x03\x00\x00\xff\xff\x70\x8e\x7d\xb5\xf5\x00\x00\x00")

func messagesBodyMetadataUpdateRequest_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyMetadataUpdateRequest_schemaJson,
		"messages/body/metadata/update/request_schema.json",
	)
}

func messagesBodyMetadataUpdateRequest_schemaJson() (*asset, error) {
	bytes, err := messagesBodyMetadataUpdateRequest_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/metadata/update/request_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyPatchReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x4b\xc3\x40\x10\x85\xef\xf3\x2b\x1e\x14\xc4\x1e\x8c\xf7\x7a\x2a\x2a\x88\x60\x2d\xb6\x78\x11\x71\x27\xc9\xb4\x59\x49\x67\xd7\x9d\x0d\x98\x7f\x2f\x69\x0a\xc6\xe2\x65\xe1\xed\xbc\xf7\xbd\x37\xc3\x6b\xa8\xb8\xec\x5a\x4e\x3d\xd6\x9c\xab\x86\xe8\x49\xcc\x78\x2f\xd8\xf6\x51\x16\x70\xbf\x86\xe3\xdd\x15\x44\x77\x62\x55\xf2\xa5\x18\x18\x8f\x9b\xe7\x15\x22\xf7\x6d\xe0\x1a\xbb\x90\xc0\x53\x64\x6e\x38\xc3\x1b\xf6\xa2\x92\x38\x4b\x8d\xba\x4b\x5e\xf7\x60\x85\x5b\x2f\xb7\xb7\x0f\x0e\x21\x66\x1f\xb4\x20\x9a\xcd\xb0\xa9\x44\x39\xf9\x60\x44\x57\xd8\x88\x66\xe4\x00\xeb\xca\xb1\x2f\xd9\x20\x35\x64\xbf\x3b\xa1\xff\x94\x35\x6c\x28\x45\x14\x71\x18\x2a\xf5\x88\x7c\x91\xaf\x4e\x2c\x0f\xc0\xfb\x6f\x3e\xc4\x56\x16\x17\x5a\x5a\xbc\x99\xbe\x6f\x2e\x8d\xb6\xe2\xd3\x82\xba\xf7\xcb\xa9\x9c\x0f\x5b\xaa\x46\x0e\xfc\x4f\xf2\x2c\xff\x61\x47\xe3\x19\x66\xfa\x3b\x3f\xad\xb2\x18\xd4\x84\x68\x75\xbd\x2c\xe8\x27\x00\x00\xff\xff\xe9\x53\x6e\x25\x88\x01\x00\x00")

func messagesBodyVocabularyPatchReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyPatchReadmeMd,
		"messages/body/vocabulary/patch/README.md",
	)
}

func messagesBodyVocabularyPatchReadmeMd() (*asset, error) {
	bytes, err := messagesBodyVocabularyPatchReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/patch/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyPatchRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x2a\xcb\x4f\x4e\x4c\x2a\xcd\x49\x2c\xaa\xf4\x4c\x51\xb2\x52\x30\xd4\x41\x15\xf4\x4b\xcc\x4d\x55\xb2\x52\x50\x72\x54\x08\x48\x2c\x49\xce\x48\x4d\x51\x08\x83\xcb\x29\xa1\xa9\x0d\x49\x2d\xca\x2d\x56\xb2\x52\x88\xe6\x52\x50\x50\x50\x50\x02\x71\x15\xfc\xf3\x52\xc1\xca\x60\xfc\x90\xf2\x7c\x54\x7e\x46\x51\x6a\xaa\x12\x97\x82\x42\x2c\x57\x2d\x17\x20\x00\x00\xff\xff\xde\x07\xab\x21\x91\x00\x00\x00")

func messagesBodyVocabularyPatchRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyPatchRequestJson,
		"messages/body/vocabulary/patch/request.json",
	)
}

func messagesBodyVocabularyPatchRequestJson() (*asset, error) {
	bytes, err := messagesBodyVocabularyPatchRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/patch/request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyPatchRequest_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xbf\x4e\xc4\x30\x0c\xc6\xf7\x3c\x85\x15\x18\xef\x6a\x06\xa6\xbe\x01\x0b\x13\x1b\x42\xc8\x6d\x4c\xaf\x07\x69\x8b\x9d\x50\x55\xa8\xef\x8e\x7c\x2d\xff\xae\xb7\x3a\x3f\x7f\xdf\x2f\xfe\x74\x00\xbe\x0d\xbe\x04\x7f\x48\x69\xd0\x12\x71\x1c\xc7\xe2\xd8\x6a\x5d\x50\x5d\xe4\x57\x94\xa0\x8a\x5a\x1f\x38\x12\x46\x56\xa5\x86\x15\xab\x3e\x4c\xf8\xd1\xd7\x54\xe5\x37\x92\x09\xf3\x10\x28\x31\x0a\xbf\x67\xd6\xf4\xbc\xe0\xc5\x51\xfb\x0e\xaf\xfc\xce\x3a\xae\x97\xd9\x77\x51\x89\x68\xaf\xfb\x95\xec\xa5\xc1\x20\xf4\x92\xf6\x37\xb7\x6b\xd9\xba\xf7\x5b\x72\x67\x96\xe6\x0b\xe0\xd3\x34\xb0\x45\x75\x39\x56\x2c\xde\x01\xcc\x67\xf4\x3d\x45\xde\xf2\x9a\xa4\xed\x9a\x4b\xfc\x03\x4b\xd4\xed\x02\x89\xd0\x74\x32\xb1\x3b\x25\xfe\xc3\x5c\x8c\x05\x98\x7f\xc2\xed\x1a\xad\xb0\x69\x3f\x2e\x01\xff\x3e\xb3\x3b\x9f\x9d\x94\x37\xd3\x45\xcc\x01\x3c\xb9\xd9\x7d\x05\x00\x00\xff\xff\xfb\x97\x3c\x3c\xaf\x01\x00\x00")

func messagesBodyVocabularyPatchRequest_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyPatchRequest_schemaJson,
		"messages/body/vocabulary/patch/request_schema.json",
	)
}

func messagesBodyVocabularyPatchRequest_schemaJson() (*asset, error) {
	bytes, err := messagesBodyVocabularyPatchRequest_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/patch/request_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyReadReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x4f\x4b\xf3\x40\x10\xc6\xef\xfb\x29\x1e\x28\xbc\xbc\x3d\xd8\x0f\x50\x4f\x42\x7b\x11\x54\x68\x8a\x17\x11\x77\x92\x8c\xc9\x4a\xb2\xbb\x9d\xd9\xa8\xf9\xf6\x12\x53\xe8\xd2\x0a\x7a\x59\xd8\x79\xfe\xfd\x16\x78\x0c\x15\x95\x43\x47\x32\x62\xc7\x54\x1b\x73\xc7\xaa\xd4\x30\xf6\x63\xe4\x35\xec\x49\x9f\x64\xbb\x32\x66\xc3\x5a\x89\x2b\x59\x41\xb8\x2d\x1e\xee\x11\x69\xec\x02\xd5\x78\x0d\x02\xca\x0b\x53\x4b\x09\x4e\xd1\xb0\x67\xa1\xc4\x35\xea\x41\x9c\x6f\x40\xb0\xbb\xed\xcd\xc6\x22\xc4\xe4\x82\x5f\x19\xb3\x58\xa0\xa8\xd8\x93\xb8\xa0\xc6\x5c\xa1\x60\x9f\x50\x8e\xd0\xa1\x9c\xd7\x44\xf1\xd1\xb2\x07\x75\x1d\xf6\x2c\xbd\x82\x84\x8f\x93\x8d\x7b\x67\x9f\x0f\x4f\x92\xf0\x61\x70\xc2\xf5\x5c\xbe\xe3\xc3\xc0\x9a\xa6\xea\xed\x27\xf5\xb1\xe3\xf5\x3f\x5f\x6a\xbc\xce\xdf\x27\x2b\xb3\x6d\xf5\xa6\xc1\xdb\xe7\xff\xf9\x77\x39\x51\x55\x2d\xf7\xf4\x43\xf2\x2c\xff\xa2\xdf\xc6\xb3\x9a\xfc\xba\x3c\x52\x69\x0c\x5e\xf9\x77\xac\xd9\x77\x2a\xcc\xfe\x7f\x04\x9b\x13\x17\x64\x97\xe7\xa5\xf9\x0a\x00\x00\xff\xff\x8e\x74\x2e\x09\x16\x02\x00\x00")

func messagesBodyVocabularyReadReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyReadReadmeMd,
		"messages/body/vocabulary/read/README.md",
	)
}

func messagesBodyVocabularyReadReadmeMd() (*asset, error) {
	bytes, err := messagesBodyVocabularyReadReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/read/README.md", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyReadRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x2a\xcb\x4f\x4e\x4c\x2a\xcd\x49\x2c\xaa\xf4\x4c\x51\xb2\x52\x30\xe4\xaa\xe5\x02\x04\x00\x00\xff\xff\xbe\x10\x07\xc5\x18\x00\x00\x00")

func messagesBodyVocabularyReadRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyReadRequestJson,
		"messages/body/vocabulary/read/request.json",
	)
}

func messagesBodyVocabularyReadRequestJson() (*asset, error) {
	bytes, err := messagesBodyVocabularyReadRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/read/request.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyReadRequest_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\x4d\x8e\xc2\x30\x0c\x46\xf7\x39\x85\x95\x99\xe5\x34\x9e\x05\xab\xde\x80\x33\x20\x84\xd2\xc4\xf4\x07\xda\x14\x3b\xa1\xaa\x50\xef\x8e\x42\x8b\x10\xdb\xe4\x7d\x7e\xef\xa1\x00\x74\xeb\x75\x09\xba\x89\x71\x94\x12\x71\x9a\x26\xd3\xb5\xe2\x8c\x75\x26\x5d\x90\xbd\x08\x8a\x6b\xa8\xb7\xd8\x93\x88\xad\x49\xb0\x0a\x7e\xc6\x7b\x70\xb6\x4a\x57\xcb\x33\x32\x59\x8f\x4c\xb7\x44\x12\x4f\x2b\x6c\x3a\x09\x03\xfe\xe8\xbf\x6c\xf8\x5d\xdf\xde\x9a\x12\x31\xff\x16\x1b\x19\xb8\x46\xcf\xf6\x1c\x8b\xff\xdd\xa6\xda\x76\x1f\xc5\x3e\x37\xe6\x5a\x00\x1d\xe7\x91\xf2\xa9\x21\xf5\x15\xb1\x56\x00\xcb\x8b\xce\x01\x2d\x53\x26\x0f\x2b\xf9\xb5\x57\x00\x47\xb5\xa8\x67\x00\x00\x00\xff\xff\x2d\x7c\x0d\x49\xf3\x00\x00\x00")

func messagesBodyVocabularyReadRequest_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyReadRequest_schemaJson,
		"messages/body/vocabulary/read/request_schema.json",
	)
}

func messagesBodyVocabularyReadRequest_schemaJson() (*asset, error) {
	bytes, err := messagesBodyVocabularyReadRequest_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/read/request_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyReadResponseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x2a\xcb\x4f\x4e\x4c\x2a\xcd\x49\x2c\xaa\xf4\x4c\x51\xb2\x52\x30\xd4\x41\x15\x0c\x49\x2d\xca\x2d\x56\xb2\x52\x88\xe6\x52\x00\x03\x25\x90\x80\x82\x7f\x5e\xaa\x92\x0e\x8a\x48\x48\x79\x3e\xba\x48\x46\x51\x6a\xaa\x12\x97\x82\x42\x2c\x57\x2d\x17\x20\x00\x00\xff\xff\xbc\xfc\xd3\x29\x6b\x00\x00\x00")

func messagesBodyVocabularyReadResponseJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyReadResponseJson,
		"messages/body/vocabulary/read/response.json",
	)
}

func messagesBodyVocabularyReadResponseJson() (*asset, error) {
	bytes, err := messagesBodyVocabularyReadResponseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/read/response.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesBodyVocabularyReadResponse_schemaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x41\x4e\xc3\x30\x10\x45\xf7\x3e\xc5\xc8\xb0\x6c\x33\x2c\x58\xe5\x06\xec\xd9\x21\x84\x26\xf1\x90\xa6\x10\x3b\xcc\xd8\x44\x16\xca\xdd\x91\xeb\x00\xa5\xdd\x7e\xbf\xf9\xff\xf9\xcb\x00\xd8\xd1\xd9\x16\xec\x21\xc6\x59\x5b\xc4\x65\x59\x9a\xe3\xa8\x7d\x43\x7d\x93\xde\x50\x9c\x2a\x6a\x7f\xe0\x89\x70\x62\x55\x1a\x58\xb1\x0b\x2e\xe3\x67\xe8\xa9\x4b\xef\x24\x19\x85\xc9\xa1\xb0\xce\xc1\x2b\xbf\x54\xba\x39\x6a\xf0\x78\x63\x77\x65\xe2\xb6\x66\x3f\x3b\x2d\x62\x79\xdd\x6f\x64\x90\x01\x9d\xd0\x6b\xdc\xdf\xdd\x6f\x5b\xdb\xdd\xdf\xc6\x43\x91\x2c\xba\x00\x36\xe6\x99\x4b\x95\x4f\x53\xc7\x62\x0d\xc0\x7a\x41\x3f\xb2\x4c\x7a\x7d\x40\x22\x94\x4f\xcd\xe5\xdb\x91\xcf\x98\x33\x4a\xa3\x8c\x7e\xb0\xa7\x78\xfd\x2d\x17\xfe\x48\xa3\x70\xd1\x78\xaa\x05\xff\xe4\x76\x97\x59\x55\x30\x00\xcf\x66\x35\xdf\x01\x00\x00\xff\xff\xbf\x56\x8b\x88\x68\x01\x00\x00")

func messagesBodyVocabularyReadResponse_schemaJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesBodyVocabularyReadResponse_schemaJson,
		"messages/body/vocabulary/read/response_schema.json",
	)
}

func messagesBodyVocabularyReadResponse_schemaJson() (*asset, error) {
	bytes, err := messagesBodyVocabularyReadResponse_schemaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/body/vocabulary/read/response_schema.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesExampleJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x4d\x53\xeb\x36\x14\xdd\xe7\x57\x78\xbc\x66\x41\xb6\xec\xa8\x09\x84\x36\x01\x26\x09\xdd\x30\x2c\x14\xeb\x26\xb9\xad\x2d\xa5\x92\x1c\x4a\x3b\xf9\xef\x6f\xe4\x0f\x22\xd9\xd7\xb2\x59\xbc\x99\xb7\xb4\xce\x91\x74\xbf\x8f\xfc\xff\x24\x8a\xe2\x1c\xb4\x66\x7b\x98\x03\xe3\xa0\xe2\x9b\xc8\x2e\x5e\x96\x1f\x79\x7c\x13\xc5\xda\x28\x14\xfb\xf8\xaa\x82\x52\xa9\x14\x64\xcc\xa0\x14\x14\x5c\xef\x4c\x32\xa6\xb5\x45\x13\x99\xe7\x4c\xf0\x16\xbc\xf9\x3c\x82\x45\x97\x60\x18\x67\x86\x25\x0a\x98\x81\x86\xa4\xc0\x14\x4a\xdc\x72\xae\xa0\x3a\x84\xbc\x62\x83\x39\x8a\xbd\xfe\x32\x3a\x8a\xe2\x63\xb1\xcd\x50\x1f\x80\x6f\x30\x07\x6d\x58\x7e\xb4\xbb\xeb\x7d\x51\x14\xc3\xbf\x47\x54\xa5\xe9\x3e\xa1\xc4\xcf\xfe\xf1\x6b\xf8\xa7\x00\x91\x82\x7b\xbe\xbe\xac\xf9\x36\xd9\xbb\xa5\x46\x7b\x72\x7c\x13\x4d\xbf\x16\x8d\x34\x2c\xb3\x2b\xd4\x0d\x73\xd4\x46\xaa\x4f\xf7\x82\x9c\xa5\x07\x14\x54\xdc\x2f\x60\x5f\x5c\xec\x75\xfd\x5e\x9d\x40\xe9\xca\xba\x26\x1e\x31\x28\x25\x55\x22\x79\xe9\xce\xc3\xec\x69\xb6\x5a\x5d\x5f\x4f\x3d\xf4\x0e\x74\xaa\xf0\x58\xfb\xd5\xdc\x37\xa9\x8f\x6d\x1c\xf9\x4d\xf2\x8b\x17\xb1\xdc\xfe\x05\xa9\x79\x2d\x90\xa8\x8e\x0a\xdb\xa0\xc9\xba\x31\xac\xc1\x17\x50\x5a\x8a\x95\x2c\x19\x6f\xb5\x67\x4d\x80\x6c\x9c\x4b\xdc\x09\x9a\xb3\x4a\x5e\xea\x31\x1e\x39\x08\x83\x3b\x2c\x8b\xfd\xcd\xc1\x23\xef\x3c\x72\xc7\x9f\x2c\x2b\xa8\xd4\xf7\x6e\xa8\xab\x7c\xea\xf1\xce\xce\xd7\x3b\x61\xe1\x4c\x18\x1b\x9e\x1c\x84\xe9\x98\x38\x1d\xd8\xfb\xac\xf6\x4c\xa0\x66\x75\xbe\x06\xfc\x93\x0e\xfb\x77\xd4\x69\x59\x75\xd3\x8e\x57\x2e\xed\x89\xe5\xc1\x08\xb8\xdc\xc6\xfb\x20\xa9\x5b\xcc\xdf\x0a\xd6\xed\x6e\x87\x19\xd2\xfe\x0e\x05\xeb\x01\x4f\x10\x72\xa8\xa6\x25\x22\x8c\xaf\x07\xf0\x0d\x64\x70\x3c\x48\x01\x4f\x45\xbe\x2d\xcb\x2e\x40\x5e\x32\xcc\xc2\x8c\xe7\x82\x8a\xd5\xf9\xc2\x8c\x55\xd5\x3a\x8d\xfb\x55\x08\xdf\xbd\x1e\xa3\xdb\xda\xa3\xac\x70\x7f\x30\x9a\x6e\x41\x55\x62\x6b\xc3\x0c\x55\xa6\x1d\xe3\xde\xaf\xda\x5b\xe7\x32\xe3\x9d\x0e\x0c\xee\xcb\x30\xad\x07\xaf\xbb\xc5\x2f\xe9\x86\x14\x2c\xd2\x86\xe4\x0d\x02\xa2\xf6\xce\xa4\x19\x2c\x4d\xab\x6a\x0d\x58\x51\x71\xe8\xea\xaf\x41\x37\x74\xe1\xbb\x43\x49\xb4\x8a\x49\xe6\x87\x33\x03\xfd\xc3\xaa\x84\x5b\xa3\x89\x3a\xff\x0f\xf8\xfc\x90\x8a\xbb\xde\x7a\xb6\xfa\xec\x84\x19\xd8\x57\x6a\x36\x82\xbd\x02\x2d\x0b\x95\x82\x1f\xa5\x1a\x6c\x4c\xf7\x57\xc9\xc9\xed\x38\x8d\x23\xe6\xb4\x43\xea\xe6\x27\x6e\x9e\x35\x23\x62\xb3\xb2\x54\xe0\xbf\x94\x4d\xee\xf0\xef\x97\x4f\xe9\x4b\x84\x27\xa2\xc3\x82\x30\x56\x0c\x06\x85\x60\xac\x08\x7c\x73\xb0\xbd\x28\xd0\xa0\x4e\xe5\xa9\xb3\x93\x3f\x9b\xdc\x37\x44\x9b\x16\x48\x4f\x87\x4b\x64\xa9\xc3\xb9\x03\xe3\x4f\xf2\x80\xcd\xf7\xd8\x97\xab\x1d\x66\xd0\xfb\xa4\x29\x51\x72\x8a\xb5\x38\xbd\x69\x2a\xd1\x35\xfe\xd7\xf6\xc6\x2e\x2f\xd8\x16\x68\x25\x2a\x61\x3b\x7b\xaa\x37\x3b\x6f\x17\x51\x78\xf8\xd0\xe3\xc7\xcf\xb3\xbd\xe0\x4b\x7e\xbc\xb3\xc3\xc2\x43\x48\x48\x5b\xf9\x03\xf2\x33\x62\x37\x2d\x42\xc4\xcb\x6a\x8c\x10\x8d\x97\xa2\xd0\x33\x88\x14\x24\xc2\xa2\x90\x28\x8d\x95\xa5\x96\x1d\xbd\xb9\x4b\x0e\x90\xfe\xad\x8b\x3c\x2c\x93\x69\xcd\x0a\xbc\xd9\x1d\x56\x8f\x9c\x36\x70\xbb\xe0\x06\x85\xdc\xda\x79\x2f\x55\xce\x9a\x76\xee\x29\xf4\x44\xe6\xcd\x8f\xdd\x02\x4e\xa1\x96\x98\x33\xbd\xc4\xbc\xa9\x6c\xa3\x0a\x20\x7a\x66\x29\xb9\x4d\x34\x0f\x87\x66\xa8\x85\xfa\x9a\x28\xe4\xec\x4b\x15\xe6\xd1\x0f\xae\x72\xf6\x68\x6a\x34\x84\x66\x2c\xe1\xcc\x37\x66\x2d\xcd\xef\x49\xfd\xe8\x99\x1b\x8e\xcb\xeb\x31\x93\x8c\xdb\xca\x2f\x34\xe1\xec\xda\x48\xc5\xf6\xd0\x8b\x2f\x98\x36\x77\xf2\x43\xd8\x43\x7e\xd6\x2c\xdc\x40\x7a\x10\x98\xb2\xec\xd6\x18\x85\xdb\xc2\x40\xbb\xe1\x07\x33\x59\xbb\xb1\x90\x29\x23\x1f\xfd\x6d\x22\xfd\xdc\xb0\xff\xfd\x93\xf3\xe4\x47\x00\x00\x00\xff\xff\x79\x89\xe5\x50\x39\x12\x00\x00")

func messagesExampleJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesExampleJson,
		"messages/example.json",
	)
}

func messagesExampleJson() (*asset, error) {
	bytes, err := messagesExampleJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/example.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _messagesHeaderExampleJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcd\x4e\xeb\x40\x0c\x85\xf7\x79\x8a\xd1\xac\xef\xa2\xdd\x76\x77\x15\x2a\x60\x01\x8b\x92\x17\x30\x19\x2b\xb5\x94\xf9\xc1\x76\x10\x15\xea\xbb\x23\x27\x41\x49\x69\x96\xf1\x17\x7f\x3e\x67\xbe\x2b\xe7\x7c\x44\x11\xe8\xf0\x39\xf8\x83\xf3\xa2\x4c\xa9\xf3\xff\x0c\xb4\x99\x19\x7b\x50\xca\xe9\x1e\xce\x5b\x75\x0f\x22\xc6\xea\x1c\x23\xa4\x70\x03\x9b\x4b\x41\x63\x2f\xa8\x10\x40\xa1\x66\x04\xc5\xe9\x17\x46\x1d\x38\xfd\x0f\x81\x71\x12\x6c\xc8\x1b\x8a\x94\x3a\xa3\x16\xd4\x39\x5f\x86\xf7\x9e\xe4\x8c\xa1\xa1\x88\xa2\x10\x8b\x6d\x8e\x3b\xce\x79\xfc\x2a\xc4\x63\xdc\x5b\x5c\x39\x77\x5d\x6b\xdf\xf0\x63\xc0\xd4\xe2\xe2\x95\x65\xb2\xce\x61\x17\xb3\x90\x19\xfd\xc1\xed\xe7\x91\x66\x85\xde\xbe\xff\x7a\x9f\x48\x34\xf3\x65\xd1\x46\x68\xcf\x94\xee\x5f\x76\x41\xdb\xfd\xed\xc8\x76\x83\x4f\x64\x99\xd2\x4c\xad\x3d\x32\x67\xae\x73\x18\xa3\x3f\x1e\x5f\x8f\xa7\xd3\x6e\xb7\x5f\xb1\x07\x94\x96\xa9\xcc\x1d\x7e\xaf\x54\xd7\xea\x27\x00\x00\xff\xff\x36\x95\x2a\x56\xfc\x01\x00\x00")

func messagesHeaderExampleJsonBytes() ([]byte, error) {
	return bindataRead(
		_messagesHeaderExampleJson,
		"messages/header/example.json",
	)
}

func messagesHeaderExampleJson() (*asset, error) {
	bytes, err := messagesHeaderExampleJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "messages/header/example.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"schemas/enumeration.json":                           schemasEnumerationJson,
	"schemas/intellectual_asset.json":                    schemasIntellectual_assetJson,
	"schemas/material_asset.json":                        schemasMaterial_assetJson,
	"schemas/research_object.json":                       schemasResearch_objectJson,
	"schemas/types.json":                                 schemasTypesJson,
	"messages/body/metadata/create/README.md":            messagesBodyMetadataCreateReadmeMd,
	"messages/body/metadata/create/request.json":         messagesBodyMetadataCreateRequestJson,
	"messages/body/metadata/create/request_schema.json":  messagesBodyMetadataCreateRequest_schemaJson,
	"messages/body/metadata/delete/README.md":            messagesBodyMetadataDeleteReadmeMd,
	"messages/body/metadata/delete/request.json":         messagesBodyMetadataDeleteRequestJson,
	"messages/body/metadata/delete/request_schema.json":  messagesBodyMetadataDeleteRequest_schemaJson,
	"messages/body/metadata/read/README.md":              messagesBodyMetadataReadReadmeMd,
	"messages/body/metadata/read/request.json":           messagesBodyMetadataReadRequestJson,
	"messages/body/metadata/read/request_schema.json":    messagesBodyMetadataReadRequest_schemaJson,
	"messages/body/metadata/read/response.json":          messagesBodyMetadataReadResponseJson,
	"messages/body/metadata/read/response_schema.json":   messagesBodyMetadataReadResponse_schemaJson,
	"messages/body/metadata/update/README.md":            messagesBodyMetadataUpdateReadmeMd,
	"messages/body/metadata/update/request.json":         messagesBodyMetadataUpdateRequestJson,
	"messages/body/metadata/update/request_schema.json":  messagesBodyMetadataUpdateRequest_schemaJson,
	"messages/body/vocabulary/patch/README.md":           messagesBodyVocabularyPatchReadmeMd,
	"messages/body/vocabulary/patch/request.json":        messagesBodyVocabularyPatchRequestJson,
	"messages/body/vocabulary/patch/request_schema.json": messagesBodyVocabularyPatchRequest_schemaJson,
	"messages/body/vocabulary/read/README.md":            messagesBodyVocabularyReadReadmeMd,
	"messages/body/vocabulary/read/request.json":         messagesBodyVocabularyReadRequestJson,
	"messages/body/vocabulary/read/request_schema.json":  messagesBodyVocabularyReadRequest_schemaJson,
	"messages/body/vocabulary/read/response.json":        messagesBodyVocabularyReadResponseJson,
	"messages/body/vocabulary/read/response_schema.json": messagesBodyVocabularyReadResponse_schemaJson,
	"messages/example.json":                              messagesExampleJson,
	"messages/header/example.json":                       messagesHeaderExampleJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"messages": &bintree{nil, map[string]*bintree{
		"body": &bintree{nil, map[string]*bintree{
			"metadata": &bintree{nil, map[string]*bintree{
				"create": &bintree{nil, map[string]*bintree{
					"README.md":           &bintree{messagesBodyMetadataCreateReadmeMd, map[string]*bintree{}},
					"request.json":        &bintree{messagesBodyMetadataCreateRequestJson, map[string]*bintree{}},
					"request_schema.json": &bintree{messagesBodyMetadataCreateRequest_schemaJson, map[string]*bintree{}},
				}},
				"delete": &bintree{nil, map[string]*bintree{
					"README.md":           &bintree{messagesBodyMetadataDeleteReadmeMd, map[string]*bintree{}},
					"request.json":        &bintree{messagesBodyMetadataDeleteRequestJson, map[string]*bintree{}},
					"request_schema.json": &bintree{messagesBodyMetadataDeleteRequest_schemaJson, map[string]*bintree{}},
				}},
				"read": &bintree{nil, map[string]*bintree{
					"README.md":            &bintree{messagesBodyMetadataReadReadmeMd, map[string]*bintree{}},
					"request.json":         &bintree{messagesBodyMetadataReadRequestJson, map[string]*bintree{}},
					"request_schema.json":  &bintree{messagesBodyMetadataReadRequest_schemaJson, map[string]*bintree{}},
					"response.json":        &bintree{messagesBodyMetadataReadResponseJson, map[string]*bintree{}},
					"response_schema.json": &bintree{messagesBodyMetadataReadResponse_schemaJson, map[string]*bintree{}},
				}},
				"update": &bintree{nil, map[string]*bintree{
					"README.md":           &bintree{messagesBodyMetadataUpdateReadmeMd, map[string]*bintree{}},
					"request.json":        &bintree{messagesBodyMetadataUpdateRequestJson, map[string]*bintree{}},
					"request_schema.json": &bintree{messagesBodyMetadataUpdateRequest_schemaJson, map[string]*bintree{}},
				}},
			}},
			"vocabulary": &bintree{nil, map[string]*bintree{
				"patch": &bintree{nil, map[string]*bintree{
					"README.md":           &bintree{messagesBodyVocabularyPatchReadmeMd, map[string]*bintree{}},
					"request.json":        &bintree{messagesBodyVocabularyPatchRequestJson, map[string]*bintree{}},
					"request_schema.json": &bintree{messagesBodyVocabularyPatchRequest_schemaJson, map[string]*bintree{}},
				}},
				"read": &bintree{nil, map[string]*bintree{
					"README.md":            &bintree{messagesBodyVocabularyReadReadmeMd, map[string]*bintree{}},
					"request.json":         &bintree{messagesBodyVocabularyReadRequestJson, map[string]*bintree{}},
					"request_schema.json":  &bintree{messagesBodyVocabularyReadRequest_schemaJson, map[string]*bintree{}},
					"response.json":        &bintree{messagesBodyVocabularyReadResponseJson, map[string]*bintree{}},
					"response_schema.json": &bintree{messagesBodyVocabularyReadResponse_schemaJson, map[string]*bintree{}},
				}},
			}},
		}},
		"example.json": &bintree{messagesExampleJson, map[string]*bintree{}},
		"header": &bintree{nil, map[string]*bintree{
			"example.json": &bintree{messagesHeaderExampleJson, map[string]*bintree{}},
		}},
	}},
	"schemas": &bintree{nil, map[string]*bintree{
		"enumeration.json":        &bintree{schemasEnumerationJson, map[string]*bintree{}},
		"intellectual_asset.json": &bintree{schemasIntellectual_assetJson, map[string]*bintree{}},
		"material_asset.json":     &bintree{schemasMaterial_assetJson, map[string]*bintree{}},
		"research_object.json":    &bintree{schemasResearch_objectJson, map[string]*bintree{}},
		"types.json":              &bintree{schemasTypesJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
